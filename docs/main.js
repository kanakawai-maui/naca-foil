/*!
      * naca-foil v1.1.4
      * https://github.com/kanakawai-maui/naca-foil
      */
class t{static foilY(t,e,i,r=!0,n=!1){return 5*i*e*(.2969*Math.sqrt(t/e)-t/e*.126-.3516*Math.pow(t/e,2)+.2843*Math.pow(t/e,3)-(r?.1036:.1015)*Math.pow(t/e,4))}static cross(t,e,i){return(e[0]-t[0])*(i[1]-t[1])-(e[1]-t[1])*(i[0]-t[0])}static camber(t,e,i,r){return t<=r*e?e*i/Math.pow(r,2)*(2*r*(t/e)-Math.pow(t/e,2)):e*i/Math.pow(1-r,2)*(1-2*r+2*r*(t/e)-Math.pow(t/e,2))}static theta(t,e,i,r){return t<=r*e?Math.atan(i/Math.pow(r,2)*(r-t/e)):Math.atan(i/Math.pow(1-r,2)*(r-t/e))}static camberY(e,i,r,n,a,s=!0,o=!1){return s?t.camber(e,i,n,a)+t.foilY(e,i,r,!0,o)*Math.cos(t.theta(e,i,n,a)):t.camber(e,i,n,a)-t.foilY(e,i,r,!0,o)*Math.cos(t.theta(e,i,n,a))}static camberX(e,i,r,n,a,s=!0){return s?e-t.foilY(e,i,r)*Math.sin(t.theta(e,i,n,a)):e+t.foilY(e,i,r)*Math.sin(t.theta(e,i,n,a))}}class e{points=[];upper=[];lower=[];core=[];chord=10;xyRatio=1;yCamber=0;_constructor(e=10,i="0015",r=10){let n=parseInt(i);if(isNaN(n))throw new Error(`Invalid NACA code: ${i}`);let a=e,s=n%100/100,o=0,l=0,c=r,h=!1;if(4===i.length)o=Math.floor((n-n%100)/1e3)/100,l=(n-n%100)/100%10/10;else{if(5!==i.length)throw new Error(`Unsupported NACA code length: ${i}`);h=!0;o=.02*Math.floor(n/1e4),l=.05*Math.floor(n%1e4/100),s=n%100/100}for(let d=a;d>=0;d-=c)this.upper.push([t.camberX(d+0,a,s,o,l),t.camberY(d,a,s,o,l,!0,h)]);for(let d=0;d<=a;d+=c)this.lower.push([t.camberX(d+0,a,s,o,l,!1),t.camberY(d,a,s,o,l,!1,h)]);this.points=[...this.upper,...this.lower],this.core=[];for(let d=0;d<=a;d+=.3)this.core.push([d+0,t.camberY(d,a,s,o,l)]);this.core=this.core.filter((([t,e])=>!isNaN(t)&&!isNaN(e))),this.points=this.points.filter((([t,e])=>!isNaN(t)&&!isNaN(e))).filter(((t,e,i)=>0===e||Math.hypot(t[0]-i[e-1][0],t[1]-i[e-1][1])>1e-6)),this.chord=e,this.xyRatio=e/3}getUpper(t=1,e=(t,e)=>[t[0]*e,t[1]*e]){return this.upper.map((i=>e([i[0],i[1]],t)))}getLower(t=1,e=(t,e)=>[t[0]*e,t[1]*-e]){return this.upper.map((i=>e([i[0],i[1]],t)))}getCore(t=1,e=(t,e)=>[t[0]*e,t[1]*-e]){return this.core.map((i=>e([i[0],i[1]],t)))}getPoints(t=!1){return t?this.points.filter(((t,e)=>e%1e4==0)):this.points}}
/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const i="175",r=0,n=1,a=2,s=0,o=1,l=2,c=3,h=0,d=1,u=2,p=100,_=101,m=102,f=200,g=201,w=202,v=203,b=204,y=205,x=206,S=207,M=208,E=209,T=210,A=211,R=212,C=213,P=214,I=0,L=1,D=2,U=3,N=4,F=5,O=6,z=7,B=301,k=302,H=306,V=1e3,G=1001,j=1002,W=1003,X=1004,q=1005,Y=1006,J=1007,K=1008,Z=1009,$=1010,Q=1011,tt=1012,et=1013,it=1014,rt=1015,nt=1016,at=1017,st=1018,ot=1020,lt=35902,ct=1023,ht=1026,dt=1027,ut=1029,pt=1031,_t=1033,mt=33776,ft=33777,gt=33778,wt=33779,vt=35840,bt=35841,yt=35842,xt=35843,St=36196,Mt=37492,Et=37496,Tt=37808,At=37809,Rt=37810,Ct=37811,Pt=37812,It=37813,Lt=37814,Dt=37815,Ut=37816,Nt=37817,Ft=37818,Ot=37819,zt=37820,Bt=37821,kt=36492,Ht=36494,Vt=36495,Gt=36284,jt=36285,Wt=36286,Xt="",qt="srgb",Yt="srgb-linear",Jt="linear",Kt="srgb",Zt=7680,$t=512,Qt=513,te=514,ee=515,ie=516,re=517,ne=518,ae=519,se="300 es",oe=2e3,le=2001;class ce{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)}hasEventListener(t,e){const i=this._listeners;return void 0!==i&&(void 0!==i[t]&&-1!==i[t].indexOf(e))}removeEventListener(t,e){const i=this._listeners;if(void 0===i)return;const r=i[t];if(void 0!==r){const t=r.indexOf(e);-1!==t&&r.splice(t,1)}}dispatchEvent(t){const e=this._listeners;if(void 0===e)return;const i=e[t.type];if(void 0!==i){t.target=this;const e=i.slice(0);for(let i=0,r=e.length;i<r;i++)e[i].call(this,t);t.target=null}}}const he=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],de=Math.PI/180,ue=180/Math.PI;function pe(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,i=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(he[255&t]+he[t>>8&255]+he[t>>16&255]+he[t>>24&255]+"-"+he[255&e]+he[e>>8&255]+"-"+he[e>>16&15|64]+he[e>>24&255]+"-"+he[63&i|128]+he[i>>8&255]+"-"+he[i>>16&255]+he[i>>24&255]+he[255&r]+he[r>>8&255]+he[r>>16&255]+he[r>>24&255]).toLowerCase()}function _e(t,e,i){return Math.max(e,Math.min(i,t))}function me(t,e,i){return(1-i)*t+i*e}function fe(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function ge(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return Math.round(4294967295*t);case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int32Array:return Math.round(2147483647*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}}const we=de;class ve{constructor(t=0,e=0){ve.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,r=t.elements;return this.x=r[0]*e+r[3]*i+r[6],this.y=r[1]*e+r[4]*i+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=_e(this.x,t.x,e.x),this.y=_e(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=_e(this.x,t,e),this.y=_e(this.y,t,e),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(_e(i,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(_e(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),r=Math.sin(e),n=this.x-t.x,a=this.y-t.y;return this.x=n*i-a*r+t.x,this.y=n*r+a*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class be{constructor(t,e,i,r,n,a,s,o,l){be.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==t&&this.set(t,e,i,r,n,a,s,o,l)}set(t,e,i,r,n,a,s,o,l){const c=this.elements;return c[0]=t,c[1]=r,c[2]=s,c[3]=e,c[4]=n,c[5]=o,c[6]=i,c[7]=a,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,r=e.elements,n=this.elements,a=i[0],s=i[3],o=i[6],l=i[1],c=i[4],h=i[7],d=i[2],u=i[5],p=i[8],_=r[0],m=r[3],f=r[6],g=r[1],w=r[4],v=r[7],b=r[2],y=r[5],x=r[8];return n[0]=a*_+s*g+o*b,n[3]=a*m+s*w+o*y,n[6]=a*f+s*v+o*x,n[1]=l*_+c*g+h*b,n[4]=l*m+c*w+h*y,n[7]=l*f+c*v+h*x,n[2]=d*_+u*g+p*b,n[5]=d*m+u*w+p*y,n[8]=d*f+u*v+p*x,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],r=t[2],n=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8];return e*a*c-e*s*l-i*n*c+i*s*o+r*n*l-r*a*o}invert(){const t=this.elements,e=t[0],i=t[1],r=t[2],n=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8],h=c*a-s*l,d=s*o-c*n,u=l*n-a*o,p=e*h+i*d+r*u;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const _=1/p;return t[0]=h*_,t[1]=(r*l-c*i)*_,t[2]=(s*i-r*a)*_,t[3]=d*_,t[4]=(c*e-r*o)*_,t[5]=(r*n-s*e)*_,t[6]=u*_,t[7]=(i*o-l*e)*_,t[8]=(a*e-i*n)*_,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,r,n,a,s){const o=Math.cos(n),l=Math.sin(n);return this.set(i*o,i*l,-i*(o*a+l*s)+a+t,-r*l,r*o,-r*(-l*a+o*s)+s+e,0,0,1),this}scale(t,e){return this.premultiply(ye.makeScale(t,e)),this}rotate(t){return this.premultiply(ye.makeRotation(-t)),this}translate(t,e){return this.premultiply(ye.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,i=t.elements;for(let r=0;r<9;r++)if(e[r]!==i[r])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}const ye=new be;function xe(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}function Se(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function Me(){const t=Se("canvas");return t.style.display="block",t}const Ee={};function Te(t){t in Ee||(Ee[t]=!0,console.warn(t))}const Ae=(new be).set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Re=(new be).set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function Ce(){const t={enabled:!0,workingColorSpace:Yt,spaces:{},convert:function(t,e,i){return!1!==this.enabled&&e!==i&&e&&i?(this.spaces[e].transfer===Kt&&(t.r=Ie(t.r),t.g=Ie(t.g),t.b=Ie(t.b)),this.spaces[e].primaries!==this.spaces[i].primaries&&(t.applyMatrix3(this.spaces[e].toXYZ),t.applyMatrix3(this.spaces[i].fromXYZ)),this.spaces[i].transfer===Kt&&(t.r=Le(t.r),t.g=Le(t.g),t.b=Le(t.b)),t):t},fromWorkingColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this.workingColorSpace)},getPrimaries:function(t){return this.spaces[t].primaries},getTransfer:function(t){return t===Xt?Jt:this.spaces[t].transfer},getLuminanceCoefficients:function(t,e=this.workingColorSpace){return t.fromArray(this.spaces[e].luminanceCoefficients)},define:function(t){Object.assign(this.spaces,t)},_getMatrix:function(t,e,i){return t.copy(this.spaces[e].toXYZ).multiply(this.spaces[i].fromXYZ)},_getDrawingBufferColorSpace:function(t){return this.spaces[t].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(t=this.workingColorSpace){return this.spaces[t].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],i=[.2126,.7152,.0722],r=[.3127,.329];return t.define({[Yt]:{primaries:e,whitePoint:r,transfer:Jt,toXYZ:Ae,fromXYZ:Re,luminanceCoefficients:i,workingColorSpaceConfig:{unpackColorSpace:qt},outputColorSpaceConfig:{drawingBufferColorSpace:qt}},[qt]:{primaries:e,whitePoint:r,transfer:Kt,toXYZ:Ae,fromXYZ:Re,luminanceCoefficients:i,outputColorSpaceConfig:{drawingBufferColorSpace:qt}}}),t}const Pe=Ce();function Ie(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Le(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}let De;class Ue{static getDataURL(t,e="image/png"){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let i;if(t instanceof HTMLCanvasElement)i=t;else{void 0===De&&(De=Se("canvas")),De.width=t.width,De.height=t.height;const e=De.getContext("2d");t instanceof ImageData?e.putImageData(t,0,0):e.drawImage(t,0,0,t.width,t.height),i=De}return i.toDataURL(e)}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const e=Se("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const r=i.getImageData(0,0,t.width,t.height),n=r.data;for(let t=0;t<n.length;t++)n[t]=255*Ie(n[t]/255);return i.putImageData(r,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*Ie(e[t]/255)):e[t]=Ie(e[t]);return{data:e,width:t.width,height:t.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let Ne=0;class Fe{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Ne++}),this.uuid=pe(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(null!==r){let t;if(Array.isArray(r)){t=[];for(let e=0,i=r.length;e<i;e++)r[e].isDataTexture?t.push(Oe(r[e].image)):t.push(Oe(r[e]))}else t=Oe(r);i.url=t}return e||(t.images[this.uuid]=i),i}}function Oe(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?Ue.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let ze=0;class Be extends ce{constructor(t=Be.DEFAULT_IMAGE,e=Be.DEFAULT_MAPPING,i=1001,r=1001,n=1006,a=1008,s=1023,o=1009,l=Be.DEFAULT_ANISOTROPY,c=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:ze++}),this.uuid=pe(),this.name="",this.source=new Fe(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=i,this.wrapT=r,this.magFilter=n,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new ve(0,0),this.repeat=new ve(1,1),this.center=new ve(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new be,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=c,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case V:t.x=t.x-Math.floor(t.x);break;case G:t.x=t.x<0?0:1;break;case j:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case V:t.y=t.y-Math.floor(t.y);break;case G:t.y=t.y<0?0:1;break;case j:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){!0===t&&this.pmremVersion++}}Be.DEFAULT_IMAGE=null,Be.DEFAULT_MAPPING=300,Be.DEFAULT_ANISOTROPY=1;class ke{constructor(t=0,e=0,i=0,r=1){ke.prototype.isVector4=!0,this.x=t,this.y=e,this.z=i,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,r){return this.x=t,this.y=e,this.z=i,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,i=this.y,r=this.z,n=this.w,a=t.elements;return this.x=a[0]*e+a[4]*i+a[8]*r+a[12]*n,this.y=a[1]*e+a[5]*i+a[9]*r+a[13]*n,this.z=a[2]*e+a[6]*i+a[10]*r+a[14]*n,this.w=a[3]*e+a[7]*i+a[11]*r+a[15]*n,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,r,n;const a=.01,s=.1,o=t.elements,l=o[0],c=o[4],h=o[8],d=o[1],u=o[5],p=o[9],_=o[2],m=o[6],f=o[10];if(Math.abs(c-d)<a&&Math.abs(h-_)<a&&Math.abs(p-m)<a){if(Math.abs(c+d)<s&&Math.abs(h+_)<s&&Math.abs(p+m)<s&&Math.abs(l+u+f-3)<s)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,o=(u+1)/2,g=(f+1)/2,w=(c+d)/4,v=(h+_)/4,b=(p+m)/4;return t>o&&t>g?t<a?(i=0,r=.707106781,n=.707106781):(i=Math.sqrt(t),r=w/i,n=v/i):o>g?o<a?(i=.707106781,r=0,n=.707106781):(r=Math.sqrt(o),i=w/r,n=b/r):g<a?(i=.707106781,r=.707106781,n=0):(n=Math.sqrt(g),i=v/n,r=b/n),this.set(i,r,n,e),this}let g=Math.sqrt((m-p)*(m-p)+(h-_)*(h-_)+(d-c)*(d-c));return Math.abs(g)<.001&&(g=1),this.x=(m-p)/g,this.y=(h-_)/g,this.z=(d-c)/g,this.w=Math.acos((l+u+f-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=_e(this.x,t.x,e.x),this.y=_e(this.y,t.y,e.y),this.z=_e(this.z,t.z,e.z),this.w=_e(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=_e(this.x,t,e),this.y=_e(this.y,t,e),this.z=_e(this.z,t,e),this.w=_e(this.w,t,e),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(_e(i,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class He extends ce{constructor(t=1,e=1,i={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new ke(0,0,t,e),this.scissorTest=!1,this.viewport=new ke(0,0,t,e);const r={width:t,height:e,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Y,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i);const n=new Be(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);n.flipY=!1,n.generateMipmaps=i.generateMipmaps,n.internalFormat=i.internalFormat,this.textures=[];const a=i.count;for(let s=0;s<a;s++)this.textures[s]=n.clone(),this.textures[s].isRenderTargetTexture=!0,this.textures[s].renderTarget=this;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this._depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){null!==this._depthTexture&&(this._depthTexture.renderTarget=null),null!==t&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,i=1){if(this.width!==t||this.height!==e||this.depth!==i){this.width=t,this.height=e,this.depth=i;for(let r=0,n=this.textures.length;r<n;r++)this.textures[r].image.width=t,this.textures[r].image.height=e,this.textures[r].image.depth=i;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,i=t.textures.length;e<i;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const i=Object.assign({},t.textures[e].image);this.textures[e].source=new Fe(i)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ve extends He{constructor(t=1,e=1,i={}){super(t,e,i),this.isWebGLRenderTarget=!0}}class Ge extends Be{constructor(t=null,e=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:i,depth:r},this.magFilter=W,this.minFilter=W,this.wrapR=G,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class je extends Be{constructor(t=null,e=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:i,depth:r},this.magFilter=W,this.minFilter=W,this.wrapR=G,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}let We=class{constructor(t=0,e=0,i=0,r=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=r}static slerpFlat(t,e,i,r,n,a,s){let o=i[r+0],l=i[r+1],c=i[r+2],h=i[r+3];const d=n[a+0],u=n[a+1],p=n[a+2],_=n[a+3];if(0===s)return t[e+0]=o,t[e+1]=l,t[e+2]=c,void(t[e+3]=h);if(1===s)return t[e+0]=d,t[e+1]=u,t[e+2]=p,void(t[e+3]=_);if(h!==_||o!==d||l!==u||c!==p){let t=1-s;const e=o*d+l*u+c*p+h*_,i=e>=0?1:-1,r=1-e*e;if(r>Number.EPSILON){const n=Math.sqrt(r),a=Math.atan2(n,e*i);t=Math.sin(t*a)/n,s=Math.sin(s*a)/n}const n=s*i;if(o=o*t+d*n,l=l*t+u*n,c=c*t+p*n,h=h*t+_*n,t===1-s){const t=1/Math.sqrt(o*o+l*l+c*c+h*h);o*=t,l*=t,c*=t,h*=t}}t[e]=o,t[e+1]=l,t[e+2]=c,t[e+3]=h}static multiplyQuaternionsFlat(t,e,i,r,n,a){const s=i[r],o=i[r+1],l=i[r+2],c=i[r+3],h=n[a],d=n[a+1],u=n[a+2],p=n[a+3];return t[e]=s*p+c*h+o*u-l*d,t[e+1]=o*p+c*d+l*h-s*u,t[e+2]=l*p+c*u+s*d-o*h,t[e+3]=c*p-s*h-o*d-l*u,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,r){return this._x=t,this._y=e,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const i=t._x,r=t._y,n=t._z,a=t._order,s=Math.cos,o=Math.sin,l=s(i/2),c=s(r/2),h=s(n/2),d=o(i/2),u=o(r/2),p=o(n/2);switch(a){case"XYZ":this._x=d*c*h+l*u*p,this._y=l*u*h-d*c*p,this._z=l*c*p+d*u*h,this._w=l*c*h-d*u*p;break;case"YXZ":this._x=d*c*h+l*u*p,this._y=l*u*h-d*c*p,this._z=l*c*p-d*u*h,this._w=l*c*h+d*u*p;break;case"ZXY":this._x=d*c*h-l*u*p,this._y=l*u*h+d*c*p,this._z=l*c*p+d*u*h,this._w=l*c*h-d*u*p;break;case"ZYX":this._x=d*c*h-l*u*p,this._y=l*u*h+d*c*p,this._z=l*c*p-d*u*h,this._w=l*c*h+d*u*p;break;case"YZX":this._x=d*c*h+l*u*p,this._y=l*u*h+d*c*p,this._z=l*c*p-d*u*h,this._w=l*c*h-d*u*p;break;case"XZY":this._x=d*c*h-l*u*p,this._y=l*u*h-d*c*p,this._z=l*c*p+d*u*h,this._w=l*c*h+d*u*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!0===e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,r=Math.sin(i);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],r=e[4],n=e[8],a=e[1],s=e[5],o=e[9],l=e[2],c=e[6],h=e[10],d=i+s+h;if(d>0){const t=.5/Math.sqrt(d+1);this._w=.25/t,this._x=(c-o)*t,this._y=(n-l)*t,this._z=(a-r)*t}else if(i>s&&i>h){const t=2*Math.sqrt(1+i-s-h);this._w=(c-o)/t,this._x=.25*t,this._y=(r+a)/t,this._z=(n+l)/t}else if(s>h){const t=2*Math.sqrt(1+s-i-h);this._w=(n-l)/t,this._x=(r+a)/t,this._y=.25*t,this._z=(o+c)/t}else{const t=2*Math.sqrt(1+h-i-s);this._w=(a-r)/t,this._x=(n+l)/t,this._y=(o+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(_e(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(0===i)return this;const r=Math.min(1,e/i);return this.slerp(t,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,r=t._y,n=t._z,a=t._w,s=e._x,o=e._y,l=e._z,c=e._w;return this._x=i*c+a*s+r*l-n*o,this._y=r*c+a*o+n*s-i*l,this._z=n*c+a*l+i*o-r*s,this._w=a*c-i*s-r*o-n*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const i=this._x,r=this._y,n=this._z,a=this._w;let s=a*t._w+i*t._x+r*t._y+n*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=a,this._x=i,this._y=r,this._z=n,this;const o=1-s*s;if(o<=Number.EPSILON){const t=1-e;return this._w=t*a+e*this._w,this._x=t*i+e*this._x,this._y=t*r+e*this._y,this._z=t*n+e*this._z,this.normalize(),this}const l=Math.sqrt(o),c=Math.atan2(l,s),h=Math.sin((1-e)*c)/l,d=Math.sin(e*c)/l;return this._w=a*h+this._w*d,this._x=i*h+this._x*d,this._y=r*h+this._y*d,this._z=n*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),i=Math.random(),r=Math.sqrt(1-i),n=Math.sqrt(i);return this.set(r*Math.sin(t),r*Math.cos(t),n*Math.sin(e),n*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},Xe=class t{constructor(e=0,i=0,r=0){t.prototype.isVector3=!0,this.x=e,this.y=i,this.z=r}set(t,e,i){return void 0===i&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Ye.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Ye.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,r=this.z,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6]*r,this.y=n[1]*e+n[4]*i+n[7]*r,this.z=n[2]*e+n[5]*i+n[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,r=this.z,n=t.elements,a=1/(n[3]*e+n[7]*i+n[11]*r+n[15]);return this.x=(n[0]*e+n[4]*i+n[8]*r+n[12])*a,this.y=(n[1]*e+n[5]*i+n[9]*r+n[13])*a,this.z=(n[2]*e+n[6]*i+n[10]*r+n[14])*a,this}applyQuaternion(t){const e=this.x,i=this.y,r=this.z,n=t.x,a=t.y,s=t.z,o=t.w,l=2*(a*r-s*i),c=2*(s*e-n*r),h=2*(n*i-a*e);return this.x=e+o*l+a*h-s*c,this.y=i+o*c+s*l-n*h,this.z=r+o*h+n*c-a*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,r=this.z,n=t.elements;return this.x=n[0]*e+n[4]*i+n[8]*r,this.y=n[1]*e+n[5]*i+n[9]*r,this.z=n[2]*e+n[6]*i+n[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=_e(this.x,t.x,e.x),this.y=_e(this.y,t.y,e.y),this.z=_e(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=_e(this.x,t,e),this.y=_e(this.y,t,e),this.z=_e(this.z,t,e),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(_e(i,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,r=t.y,n=t.z,a=e.x,s=e.y,o=e.z;return this.x=r*o-n*s,this.y=n*a-i*o,this.z=i*s-r*a,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return qe.copy(this).projectOnVector(t),this.sub(qe)}reflect(t){return this.sub(qe.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(_e(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,r=this.z-t.z;return e*e+i*i+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const r=Math.sin(e)*t;return this.x=r*Math.sin(i),this.y=Math.cos(e)*t,this.z=r*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=r,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=2*Math.random()-1,i=Math.sqrt(1-e*e);return this.x=i*Math.cos(t),this.y=e,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const qe=new Xe,Ye=new We;class Je{constructor(t=new Xe(1/0,1/0,1/0),e=new Xe(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e+=3)this.expandByPoint(Ze.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,i=t.count;e<i;e++)this.expandByPoint(Ze.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=Ze.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(void 0!==i){const r=i.getAttribute("position");if(!0===e&&void 0!==r&&!0!==t.isInstancedMesh)for(let e=0,i=r.count;e<i;e++)!0===t.isMesh?t.getVertexPosition(e,Ze):Ze.fromBufferAttribute(r,e),Ze.applyMatrix4(t.matrixWorld),this.expandByPoint(Ze);else void 0!==t.boundingBox?(null===t.boundingBox&&t.computeBoundingBox(),$e.copy(t.boundingBox)):(null===i.boundingBox&&i.computeBoundingBox(),$e.copy(i.boundingBox)),$e.applyMatrix4(t.matrixWorld),this.union($e)}const r=t.children;for(let n=0,a=r.length;n<a;n++)this.expandByObject(r[n],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,Ze),Ze.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(ai),si.subVectors(this.max,ai),Qe.subVectors(t.a,ai),ti.subVectors(t.b,ai),ei.subVectors(t.c,ai),ii.subVectors(ti,Qe),ri.subVectors(ei,ti),ni.subVectors(Qe,ei);let e=[0,-ii.z,ii.y,0,-ri.z,ri.y,0,-ni.z,ni.y,ii.z,0,-ii.x,ri.z,0,-ri.x,ni.z,0,-ni.x,-ii.y,ii.x,0,-ri.y,ri.x,0,-ni.y,ni.x,0];return!!ci(e,Qe,ti,ei,si)&&(e=[1,0,0,0,1,0,0,0,1],!!ci(e,Qe,ti,ei,si)&&(oi.crossVectors(ii,ri),e=[oi.x,oi.y,oi.z],ci(e,Qe,ti,ei,si)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Ze).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=.5*this.getSize(Ze).length()),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(Ke[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Ke[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Ke[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Ke[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Ke[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Ke[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Ke[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Ke[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Ke)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Ke=[new Xe,new Xe,new Xe,new Xe,new Xe,new Xe,new Xe,new Xe],Ze=new Xe,$e=new Je,Qe=new Xe,ti=new Xe,ei=new Xe,ii=new Xe,ri=new Xe,ni=new Xe,ai=new Xe,si=new Xe,oi=new Xe,li=new Xe;function ci(t,e,i,r,n){for(let a=0,s=t.length-3;a<=s;a+=3){li.fromArray(t,a);const s=n.x*Math.abs(li.x)+n.y*Math.abs(li.y)+n.z*Math.abs(li.z),o=e.dot(li),l=i.dot(li),c=r.dot(li);if(Math.max(-Math.max(o,l,c),Math.min(o,l,c))>s)return!1}return!0}const hi=new Je,di=new Xe,ui=new Xe;class pi{constructor(t=new Xe,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;void 0!==e?i.copy(e):hi.setFromPoints(t).getCenter(i);let r=0;for(let n=0,a=t.length;n<a;n++)r=Math.max(r,i.distanceToSquared(t[n]));return this.radius=Math.sqrt(r),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;di.subVectors(t,this.center);const e=di.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),i=.5*(t-this.radius);this.center.addScaledVector(di,i/t),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(!0===this.center.equals(t.center)?this.radius=Math.max(this.radius,t.radius):(ui.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(di.copy(t.center).add(ui)),this.expandByPoint(di.copy(t.center).sub(ui))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const _i=new Xe,mi=new Xe,fi=new Xe,gi=new Xe,wi=new Xe,vi=new Xe,bi=new Xe;class yi{constructor(t=new Xe,e=new Xe(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,_i)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=_i.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(_i.copy(this.origin).addScaledVector(this.direction,e),_i.distanceToSquared(t))}distanceSqToSegment(t,e,i,r){mi.copy(t).add(e).multiplyScalar(.5),fi.copy(e).sub(t).normalize(),gi.copy(this.origin).sub(mi);const n=.5*t.distanceTo(e),a=-this.direction.dot(fi),s=gi.dot(this.direction),o=-gi.dot(fi),l=gi.lengthSq(),c=Math.abs(1-a*a);let h,d,u,p;if(c>0)if(h=a*o-s,d=a*s-o,p=n*c,h>=0)if(d>=-p)if(d<=p){const t=1/c;h*=t,d*=t,u=h*(h+a*d+2*s)+d*(a*h+d+2*o)+l}else d=n,h=Math.max(0,-(a*d+s)),u=-h*h+d*(d+2*o)+l;else d=-n,h=Math.max(0,-(a*d+s)),u=-h*h+d*(d+2*o)+l;else d<=-p?(h=Math.max(0,-(-a*n+s)),d=h>0?-n:Math.min(Math.max(-n,-o),n),u=-h*h+d*(d+2*o)+l):d<=p?(h=0,d=Math.min(Math.max(-n,-o),n),u=d*(d+2*o)+l):(h=Math.max(0,-(a*n+s)),d=h>0?n:Math.min(Math.max(-n,-o),n),u=-h*h+d*(d+2*o)+l);else d=a>0?-n:n,h=Math.max(0,-(a*d+s)),u=-h*h+d*(d+2*o)+l;return i&&i.copy(this.origin).addScaledVector(this.direction,h),r&&r.copy(mi).addScaledVector(fi,d),u}intersectSphere(t,e){_i.subVectors(t.center,this.origin);const i=_i.dot(this.direction),r=_i.dot(_i)-i*i,n=t.radius*t.radius;if(r>n)return null;const a=Math.sqrt(n-r),s=i-a,o=i+a;return o<0?null:s<0?this.at(o,e):this.at(s,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return null===i?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,r,n,a,s,o;const l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,d=this.origin;return l>=0?(i=(t.min.x-d.x)*l,r=(t.max.x-d.x)*l):(i=(t.max.x-d.x)*l,r=(t.min.x-d.x)*l),c>=0?(n=(t.min.y-d.y)*c,a=(t.max.y-d.y)*c):(n=(t.max.y-d.y)*c,a=(t.min.y-d.y)*c),i>a||n>r?null:((n>i||isNaN(i))&&(i=n),(a<r||isNaN(r))&&(r=a),h>=0?(s=(t.min.z-d.z)*h,o=(t.max.z-d.z)*h):(s=(t.max.z-d.z)*h,o=(t.min.z-d.z)*h),i>o||s>r?null:((s>i||i!=i)&&(i=s),(o<r||r!=r)&&(r=o),r<0?null:this.at(i>=0?i:r,e)))}intersectsBox(t){return null!==this.intersectBox(t,_i)}intersectTriangle(t,e,i,r,n){wi.subVectors(e,t),vi.subVectors(i,t),bi.crossVectors(wi,vi);let a,s=this.direction.dot(bi);if(s>0){if(r)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}gi.subVectors(this.origin,t);const o=a*this.direction.dot(vi.crossVectors(gi,vi));if(o<0)return null;const l=a*this.direction.dot(wi.cross(gi));if(l<0)return null;if(o+l>s)return null;const c=-a*gi.dot(bi);return c<0?null:this.at(c/s,n)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class xi{constructor(t,e,i,r,n,a,s,o,l,c,h,d,u,p,_,m){xi.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,e,i,r,n,a,s,o,l,c,h,d,u,p,_,m)}set(t,e,i,r,n,a,s,o,l,c,h,d,u,p,_,m){const f=this.elements;return f[0]=t,f[4]=e,f[8]=i,f[12]=r,f[1]=n,f[5]=a,f[9]=s,f[13]=o,f[2]=l,f[6]=c,f[10]=h,f[14]=d,f[3]=u,f[7]=p,f[11]=_,f[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new xi).fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,r=1/Si.setFromMatrixColumn(t,0).length(),n=1/Si.setFromMatrixColumn(t,1).length(),a=1/Si.setFromMatrixColumn(t,2).length();return e[0]=i[0]*r,e[1]=i[1]*r,e[2]=i[2]*r,e[3]=0,e[4]=i[4]*n,e[5]=i[5]*n,e[6]=i[6]*n,e[7]=0,e[8]=i[8]*a,e[9]=i[9]*a,e[10]=i[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,r=t.y,n=t.z,a=Math.cos(i),s=Math.sin(i),o=Math.cos(r),l=Math.sin(r),c=Math.cos(n),h=Math.sin(n);if("XYZ"===t.order){const t=a*c,i=a*h,r=s*c,n=s*h;e[0]=o*c,e[4]=-o*h,e[8]=l,e[1]=i+r*l,e[5]=t-n*l,e[9]=-s*o,e[2]=n-t*l,e[6]=r+i*l,e[10]=a*o}else if("YXZ"===t.order){const t=o*c,i=o*h,r=l*c,n=l*h;e[0]=t+n*s,e[4]=r*s-i,e[8]=a*l,e[1]=a*h,e[5]=a*c,e[9]=-s,e[2]=i*s-r,e[6]=n+t*s,e[10]=a*o}else if("ZXY"===t.order){const t=o*c,i=o*h,r=l*c,n=l*h;e[0]=t-n*s,e[4]=-a*h,e[8]=r+i*s,e[1]=i+r*s,e[5]=a*c,e[9]=n-t*s,e[2]=-a*l,e[6]=s,e[10]=a*o}else if("ZYX"===t.order){const t=a*c,i=a*h,r=s*c,n=s*h;e[0]=o*c,e[4]=r*l-i,e[8]=t*l+n,e[1]=o*h,e[5]=n*l+t,e[9]=i*l-r,e[2]=-l,e[6]=s*o,e[10]=a*o}else if("YZX"===t.order){const t=a*o,i=a*l,r=s*o,n=s*l;e[0]=o*c,e[4]=n-t*h,e[8]=r*h+i,e[1]=h,e[5]=a*c,e[9]=-s*c,e[2]=-l*c,e[6]=i*h+r,e[10]=t-n*h}else if("XZY"===t.order){const t=a*o,i=a*l,r=s*o,n=s*l;e[0]=o*c,e[4]=-h,e[8]=l*c,e[1]=t*h+n,e[5]=a*c,e[9]=i*h-r,e[2]=r*h-i,e[6]=s*c,e[10]=n*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Ei,t,Ti)}lookAt(t,e,i){const r=this.elements;return Ci.subVectors(t,e),0===Ci.lengthSq()&&(Ci.z=1),Ci.normalize(),Ai.crossVectors(i,Ci),0===Ai.lengthSq()&&(1===Math.abs(i.z)?Ci.x+=1e-4:Ci.z+=1e-4,Ci.normalize(),Ai.crossVectors(i,Ci)),Ai.normalize(),Ri.crossVectors(Ci,Ai),r[0]=Ai.x,r[4]=Ri.x,r[8]=Ci.x,r[1]=Ai.y,r[5]=Ri.y,r[9]=Ci.y,r[2]=Ai.z,r[6]=Ri.z,r[10]=Ci.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,r=e.elements,n=this.elements,a=i[0],s=i[4],o=i[8],l=i[12],c=i[1],h=i[5],d=i[9],u=i[13],p=i[2],_=i[6],m=i[10],f=i[14],g=i[3],w=i[7],v=i[11],b=i[15],y=r[0],x=r[4],S=r[8],M=r[12],E=r[1],T=r[5],A=r[9],R=r[13],C=r[2],P=r[6],I=r[10],L=r[14],D=r[3],U=r[7],N=r[11],F=r[15];return n[0]=a*y+s*E+o*C+l*D,n[4]=a*x+s*T+o*P+l*U,n[8]=a*S+s*A+o*I+l*N,n[12]=a*M+s*R+o*L+l*F,n[1]=c*y+h*E+d*C+u*D,n[5]=c*x+h*T+d*P+u*U,n[9]=c*S+h*A+d*I+u*N,n[13]=c*M+h*R+d*L+u*F,n[2]=p*y+_*E+m*C+f*D,n[6]=p*x+_*T+m*P+f*U,n[10]=p*S+_*A+m*I+f*N,n[14]=p*M+_*R+m*L+f*F,n[3]=g*y+w*E+v*C+b*D,n[7]=g*x+w*T+v*P+b*U,n[11]=g*S+w*A+v*I+b*N,n[15]=g*M+w*R+v*L+b*F,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],r=t[8],n=t[12],a=t[1],s=t[5],o=t[9],l=t[13],c=t[2],h=t[6],d=t[10],u=t[14];return t[3]*(+n*o*h-r*l*h-n*s*d+i*l*d+r*s*u-i*o*u)+t[7]*(+e*o*u-e*l*d+n*a*d-r*a*u+r*l*c-n*o*c)+t[11]*(+e*l*h-e*s*u-n*a*h+i*a*u+n*s*c-i*l*c)+t[15]*(-r*s*c-e*o*h+e*s*d+r*a*h-i*a*d+i*o*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=e,r[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],r=t[2],n=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8],h=t[9],d=t[10],u=t[11],p=t[12],_=t[13],m=t[14],f=t[15],g=h*m*l-_*d*l+_*o*u-s*m*u-h*o*f+s*d*f,w=p*d*l-c*m*l-p*o*u+a*m*u+c*o*f-a*d*f,v=c*_*l-p*h*l+p*s*u-a*_*u-c*s*f+a*h*f,b=p*h*o-c*_*o-p*s*d+a*_*d+c*s*m-a*h*m,y=e*g+i*w+r*v+n*b;if(0===y)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const x=1/y;return t[0]=g*x,t[1]=(_*d*n-h*m*n-_*r*u+i*m*u+h*r*f-i*d*f)*x,t[2]=(s*m*n-_*o*n+_*r*l-i*m*l-s*r*f+i*o*f)*x,t[3]=(h*o*n-s*d*n-h*r*l+i*d*l+s*r*u-i*o*u)*x,t[4]=w*x,t[5]=(c*m*n-p*d*n+p*r*u-e*m*u-c*r*f+e*d*f)*x,t[6]=(p*o*n-a*m*n-p*r*l+e*m*l+a*r*f-e*o*f)*x,t[7]=(a*d*n-c*o*n+c*r*l-e*d*l-a*r*u+e*o*u)*x,t[8]=v*x,t[9]=(p*h*n-c*_*n-p*i*u+e*_*u+c*i*f-e*h*f)*x,t[10]=(a*_*n-p*s*n+p*i*l-e*_*l-a*i*f+e*s*f)*x,t[11]=(c*s*n-a*h*n-c*i*l+e*h*l+a*i*u-e*s*u)*x,t[12]=b*x,t[13]=(c*_*r-p*h*r+p*i*d-e*_*d-c*i*m+e*h*m)*x,t[14]=(p*s*r-a*_*r-p*i*o+e*_*o+a*i*m-e*s*m)*x,t[15]=(a*h*r-c*s*r+c*i*o-e*h*o-a*i*d+e*s*d)*x,this}scale(t){const e=this.elements,i=t.x,r=t.y,n=t.z;return e[0]*=i,e[4]*=r,e[8]*=n,e[1]*=i,e[5]*=r,e[9]*=n,e[2]*=i,e[6]*=r,e[10]*=n,e[3]*=i,e[7]*=r,e[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,r))}makeTranslation(t,e,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),r=Math.sin(e),n=1-i,a=t.x,s=t.y,o=t.z,l=n*a,c=n*s;return this.set(l*a+i,l*s-r*o,l*o+r*s,0,l*s+r*o,c*s+i,c*o-r*a,0,l*o-r*s,c*o+r*a,n*o*o+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,r,n,a){return this.set(1,i,n,0,t,1,a,0,e,r,1,0,0,0,0,1),this}compose(t,e,i){const r=this.elements,n=e._x,a=e._y,s=e._z,o=e._w,l=n+n,c=a+a,h=s+s,d=n*l,u=n*c,p=n*h,_=a*c,m=a*h,f=s*h,g=o*l,w=o*c,v=o*h,b=i.x,y=i.y,x=i.z;return r[0]=(1-(_+f))*b,r[1]=(u+v)*b,r[2]=(p-w)*b,r[3]=0,r[4]=(u-v)*y,r[5]=(1-(d+f))*y,r[6]=(m+g)*y,r[7]=0,r[8]=(p+w)*x,r[9]=(m-g)*x,r[10]=(1-(d+_))*x,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,e,i){const r=this.elements;let n=Si.set(r[0],r[1],r[2]).length();const a=Si.set(r[4],r[5],r[6]).length(),s=Si.set(r[8],r[9],r[10]).length();this.determinant()<0&&(n=-n),t.x=r[12],t.y=r[13],t.z=r[14],Mi.copy(this);const o=1/n,l=1/a,c=1/s;return Mi.elements[0]*=o,Mi.elements[1]*=o,Mi.elements[2]*=o,Mi.elements[4]*=l,Mi.elements[5]*=l,Mi.elements[6]*=l,Mi.elements[8]*=c,Mi.elements[9]*=c,Mi.elements[10]*=c,e.setFromRotationMatrix(Mi),i.x=n,i.y=a,i.z=s,this}makePerspective(t,e,i,r,n,a,s=2e3){const o=this.elements,l=2*n/(e-t),c=2*n/(i-r),h=(e+t)/(e-t),d=(i+r)/(i-r);let u,p;if(s===oe)u=-(a+n)/(a-n),p=-2*a*n/(a-n);else{if(s!==le)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+s);u=-a/(a-n),p=-a*n/(a-n)}return o[0]=l,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=c,o[9]=d,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,e,i,r,n,a,s=2e3){const o=this.elements,l=1/(e-t),c=1/(i-r),h=1/(a-n),d=(e+t)*l,u=(i+r)*c;let p,_;if(s===oe)p=(a+n)*h,_=-2*h;else{if(s!==le)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+s);p=n*h,_=-1*h}return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-d,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=_,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let r=0;r<16;r++)if(e[r]!==i[r])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const Si=new Xe,Mi=new xi,Ei=new Xe(0,0,0),Ti=new Xe(1,1,1),Ai=new Xe,Ri=new Xe,Ci=new Xe,Pi=new xi,Ii=new We;class Li{constructor(t=0,e=0,i=0,r=Li.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,r=this._order){return this._x=t,this._y=e,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const r=t.elements,n=r[0],a=r[4],s=r[8],o=r[1],l=r[5],c=r[9],h=r[2],d=r[6],u=r[10];switch(e){case"XYZ":this._y=Math.asin(_e(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-c,u),this._z=Math.atan2(-a,n)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-_e(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(s,u),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-h,n),this._z=0);break;case"ZXY":this._x=Math.asin(_e(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,u),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(o,n));break;case"ZYX":this._y=Math.asin(-_e(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,u),this._z=Math.atan2(o,n)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(_e(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-h,n)):(this._x=0,this._y=Math.atan2(s,u));break;case"XZY":this._z=Math.asin(-_e(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(s,n)):(this._x=Math.atan2(-c,u),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===i&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return Pi.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Pi,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Ii.setFromEuler(this),this.setFromQuaternion(Ii,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Li.DEFAULT_ORDER="XYZ";class Di{constructor(){this.mask=1}set(t){this.mask=1<<t>>>0}enable(t){this.mask|=1<<t}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t}disable(t){this.mask&=~(1<<t)}disableAll(){this.mask=0}test(t){return!!(this.mask&t.mask)}isEnabled(t){return!!(this.mask&1<<t)}}let Ui=0;const Ni=new Xe,Fi=new We,Oi=new xi,zi=new Xe,Bi=new Xe,ki=new Xe,Hi=new We,Vi=new Xe(1,0,0),Gi=new Xe(0,1,0),ji=new Xe(0,0,1),Wi={type:"added"},Xi={type:"removed"},qi={type:"childadded",child:null},Yi={type:"childremoved",child:null};class Ji extends ce{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Ui++}),this.uuid=pe(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ji.DEFAULT_UP.clone();const t=new Xe,e=new Li,i=new We,r=new Xe(1,1,1);e._onChange((function(){i.setFromEuler(e,!1)})),i._onChange((function(){e.setFromQuaternion(i,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new xi},normalMatrix:{value:new be}}),this.matrix=new xi,this.matrixWorld=new xi,this.matrixAutoUpdate=Ji.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Ji.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Di,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Fi.setFromAxisAngle(t,e),this.quaternion.multiply(Fi),this}rotateOnWorldAxis(t,e){return Fi.setFromAxisAngle(t,e),this.quaternion.premultiply(Fi),this}rotateX(t){return this.rotateOnAxis(Vi,t)}rotateY(t){return this.rotateOnAxis(Gi,t)}rotateZ(t){return this.rotateOnAxis(ji,t)}translateOnAxis(t,e){return Ni.copy(t).applyQuaternion(this.quaternion),this.position.add(Ni.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Vi,t)}translateY(t){return this.translateOnAxis(Gi,t)}translateZ(t){return this.translateOnAxis(ji,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Oi.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?zi.copy(t):zi.set(t,e,i);const r=this.parent;this.updateWorldMatrix(!0,!1),Bi.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Oi.lookAt(Bi,zi,this.up):Oi.lookAt(zi,Bi,this.up),this.quaternion.setFromRotationMatrix(Oi),r&&(Oi.extractRotation(r.matrixWorld),Fi.setFromRotationMatrix(Oi),this.quaternion.premultiply(Fi.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Wi),qi.child=t,this.dispatchEvent(qi),qi.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Xi),Yi.child=t,this.dispatchEvent(Yi),Yi.child=null),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Oi.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Oi.multiply(t.parent.matrixWorld)),t.applyMatrix4(Oi),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Wi),qi.child=t,this.dispatchEvent(qi),qi.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,r=this.children.length;i<r;i++){const r=this.children[i].getObjectByProperty(t,e);if(void 0!==r)return r}}getObjectsByProperty(t,e,i=[]){this[t]===e&&i.push(this);const r=this.children;for(let n=0,a=r.length;n<a;n++)r[n].getObjectsByProperty(t,e,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Bi,t,ki),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Bi,Hi,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,r=e.length;i<r;i++)e[i].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let i=0,r=e.length;i<r;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,r=e.length;i<r;i++){e[i].updateMatrixWorld(t)}}updateWorldMatrix(t,e){const i=this.parent;if(!0===t&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===e){const t=this.children;for(let e=0,i=t.length;e<i;e++){t[e].updateWorldMatrix(!1,!0)}}}toJSON(t){const e=void 0===t||"string"==typeof t,i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const r={};function n(e,i){return void 0===e[i.uuid]&&(e[i.uuid]=i.toJSON(t)),i.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.visibility=this._visibility,r.active=this._active,r.bounds=this._bounds.map((t=>({boxInitialized:t.boxInitialized,boxMin:t.box.min.toArray(),boxMax:t.box.max.toArray(),sphereInitialized:t.sphereInitialized,sphereRadius:t.sphere.radius,sphereCenter:t.sphere.center.toArray()}))),r.maxInstanceCount=this._maxInstanceCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.geometryCount=this._geometryCount,r.matricesTexture=this._matricesTexture.toJSON(t),null!==this._colorsTexture&&(r.colorsTexture=this._colorsTexture.toJSON(t)),null!==this.boundingSphere&&(r.boundingSphere={center:r.boundingSphere.center.toArray(),radius:r.boundingSphere.radius}),null!==this.boundingBox&&(r.boundingBox={min:r.boundingBox.min.toArray(),max:r.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(r.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=n(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const i=e.shapes;if(Array.isArray(i))for(let e=0,r=i.length;e<r;e++){const r=i[e];n(t.shapes,r)}else n(t.shapes,i)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(n(t.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let i=0,r=this.material.length;i<r;i++)e.push(n(t.materials,this.material[i]));r.material=e}else r.material=n(t.materials,this.material);if(this.children.length>0){r.children=[];for(let e=0;e<this.children.length;e++)r.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){r.animations=[];for(let e=0;e<this.animations.length;e++){const i=this.animations[e];r.animations.push(n(t.animations,i))}}if(e){const e=a(t.geometries),r=a(t.materials),n=a(t.textures),s=a(t.images),o=a(t.shapes),l=a(t.skeletons),c=a(t.animations),h=a(t.nodes);e.length>0&&(i.geometries=e),r.length>0&&(i.materials=r),n.length>0&&(i.textures=n),s.length>0&&(i.images=s),o.length>0&&(i.shapes=o),l.length>0&&(i.skeletons=l),c.length>0&&(i.animations=c),h.length>0&&(i.nodes=h)}return i.object=r,i;function a(t){const e=[];for(const i in t){const r=t[i];delete r.metadata,e.push(r)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let i=0;i<t.children.length;i++){const e=t.children[i];this.add(e.clone())}return this}}Ji.DEFAULT_UP=new Xe(0,1,0),Ji.DEFAULT_MATRIX_AUTO_UPDATE=!0,Ji.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Ki=new Xe,Zi=new Xe,$i=new Xe,Qi=new Xe,tr=new Xe,er=new Xe,ir=new Xe,rr=new Xe,nr=new Xe,ar=new Xe,sr=new ke,or=new ke,lr=new ke;let cr=class t{constructor(t=new Xe,e=new Xe,i=new Xe){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,r){r.subVectors(i,e),Ki.subVectors(t,e),r.cross(Ki);const n=r.lengthSq();return n>0?r.multiplyScalar(1/Math.sqrt(n)):r.set(0,0,0)}static getBarycoord(t,e,i,r,n){Ki.subVectors(r,e),Zi.subVectors(i,e),$i.subVectors(t,e);const a=Ki.dot(Ki),s=Ki.dot(Zi),o=Ki.dot($i),l=Zi.dot(Zi),c=Zi.dot($i),h=a*l-s*s;if(0===h)return n.set(0,0,0),null;const d=1/h,u=(l*o-s*c)*d,p=(a*c-s*o)*d;return n.set(1-u-p,p,u)}static containsPoint(t,e,i,r){return null!==this.getBarycoord(t,e,i,r,Qi)&&(Qi.x>=0&&Qi.y>=0&&Qi.x+Qi.y<=1)}static getInterpolation(t,e,i,r,n,a,s,o){return null===this.getBarycoord(t,e,i,r,Qi)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(n,Qi.x),o.addScaledVector(a,Qi.y),o.addScaledVector(s,Qi.z),o)}static getInterpolatedAttribute(t,e,i,r,n,a){return sr.setScalar(0),or.setScalar(0),lr.setScalar(0),sr.fromBufferAttribute(t,e),or.fromBufferAttribute(t,i),lr.fromBufferAttribute(t,r),a.setScalar(0),a.addScaledVector(sr,n.x),a.addScaledVector(or,n.y),a.addScaledVector(lr,n.z),a}static isFrontFacing(t,e,i,r){return Ki.subVectors(i,e),Zi.subVectors(t,e),Ki.cross(Zi).dot(r)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,r){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[r]),this}setFromAttributeAndIndices(t,e,i,r){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,r),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Ki.subVectors(this.c,this.b),Zi.subVectors(this.a,this.b),.5*Ki.cross(Zi).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return t.getNormal(this.a,this.b,this.c,e)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,i){return t.getBarycoord(e,this.a,this.b,this.c,i)}getInterpolation(e,i,r,n,a){return t.getInterpolation(e,this.a,this.b,this.c,i,r,n,a)}containsPoint(e){return t.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return t.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,r=this.b,n=this.c;let a,s;tr.subVectors(r,i),er.subVectors(n,i),rr.subVectors(t,i);const o=tr.dot(rr),l=er.dot(rr);if(o<=0&&l<=0)return e.copy(i);nr.subVectors(t,r);const c=tr.dot(nr),h=er.dot(nr);if(c>=0&&h<=c)return e.copy(r);const d=o*h-c*l;if(d<=0&&o>=0&&c<=0)return a=o/(o-c),e.copy(i).addScaledVector(tr,a);ar.subVectors(t,n);const u=tr.dot(ar),p=er.dot(ar);if(p>=0&&u<=p)return e.copy(n);const _=u*l-o*p;if(_<=0&&l>=0&&p<=0)return s=l/(l-p),e.copy(i).addScaledVector(er,s);const m=c*p-u*h;if(m<=0&&h-c>=0&&u-p>=0)return ir.subVectors(n,r),s=(h-c)/(h-c+(u-p)),e.copy(r).addScaledVector(ir,s);const f=1/(m+_+d);return a=_*f,s=d*f,e.copy(i).addScaledVector(tr,a).addScaledVector(er,s)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}};const hr={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},dr={h:0,s:0,l:0},ur={h:0,s:0,l:0};function pr(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+6*(e-t)*(2/3-i):t}class _r{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,i)}set(t,e,i){if(void 0===e&&void 0===i){const e=t;e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e)}else this.setRGB(t,e,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=qt){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,Pe.toWorkingColorSpace(this,e),this}setRGB(t,e,i,r=Pe.workingColorSpace){return this.r=t,this.g=e,this.b=i,Pe.toWorkingColorSpace(this,r),this}setHSL(t,e,i,r=Pe.workingColorSpace){var n;if(t=(t%(n=1)+n)%n,e=_e(e,0,1),i=_e(i,0,1),0===e)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+e):i+e-i*e,n=2*i-r;this.r=pr(n,r,t+1/3),this.g=pr(n,r,t),this.b=pr(n,r,t-1/3)}return Pe.toWorkingColorSpace(this,r),this}setStyle(t,e=qt){function i(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(t)){let n;const a=r[1],s=r[2];switch(a){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return i(n[4]),this.setRGB(Math.min(255,parseInt(n[1],10))/255,Math.min(255,parseInt(n[2],10))/255,Math.min(255,parseInt(n[3],10))/255,e);if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return i(n[4]),this.setRGB(Math.min(100,parseInt(n[1],10))/100,Math.min(100,parseInt(n[2],10))/100,Math.min(100,parseInt(n[3],10))/100,e);break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return i(n[4]),this.setHSL(parseFloat(n[1])/360,parseFloat(n[2])/100,parseFloat(n[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(t)){const i=r[1],n=i.length;if(3===n)return this.setRGB(parseInt(i.charAt(0),16)/15,parseInt(i.charAt(1),16)/15,parseInt(i.charAt(2),16)/15,e);if(6===n)return this.setHex(parseInt(i,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=qt){const i=hr[t.toLowerCase()];return void 0!==i?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Ie(t.r),this.g=Ie(t.g),this.b=Ie(t.b),this}copyLinearToSRGB(t){return this.r=Le(t.r),this.g=Le(t.g),this.b=Le(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=qt){return Pe.fromWorkingColorSpace(mr.copy(this),t),65536*Math.round(_e(255*mr.r,0,255))+256*Math.round(_e(255*mr.g,0,255))+Math.round(_e(255*mr.b,0,255))}getHexString(t=qt){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Pe.workingColorSpace){Pe.fromWorkingColorSpace(mr.copy(this),e);const i=mr.r,r=mr.g,n=mr.b,a=Math.max(i,r,n),s=Math.min(i,r,n);let o,l;const c=(s+a)/2;if(s===a)o=0,l=0;else{const t=a-s;switch(l=c<=.5?t/(a+s):t/(2-a-s),a){case i:o=(r-n)/t+(r<n?6:0);break;case r:o=(n-i)/t+2;break;case n:o=(i-r)/t+4}o/=6}return t.h=o,t.s=l,t.l=c,t}getRGB(t,e=Pe.workingColorSpace){return Pe.fromWorkingColorSpace(mr.copy(this),e),t.r=mr.r,t.g=mr.g,t.b=mr.b,t}getStyle(t=qt){Pe.fromWorkingColorSpace(mr.copy(this),t);const e=mr.r,i=mr.g,r=mr.b;return t!==qt?`color(${t} ${e.toFixed(3)} ${i.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(255*e)},${Math.round(255*i)},${Math.round(255*r)})`}offsetHSL(t,e,i){return this.getHSL(dr),this.setHSL(dr.h+t,dr.s+e,dr.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(dr),t.getHSL(ur);const i=me(dr.h,ur.h,e),r=me(dr.s,ur.s,e),n=me(dr.l,ur.l,e);return this.setHSL(i,r,n),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,i=this.g,r=this.b,n=t.elements;return this.r=n[0]*e+n[3]*i+n[6]*r,this.g=n[1]*e+n[4]*i+n[7]*r,this.b=n[2]*e+n[5]*i+n[8]*r,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const mr=new _r;_r.NAMES=hr;let fr=0;class gr extends ce{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:fr++}),this.uuid=pe(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=p,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new _r(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Zt,this.stencilZFail=Zt,this.stencilZPass=Zt,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const i=t[e];if(void 0===i){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const r=this[e];void 0!==r?r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[e]=i:console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`)}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function r(t){const e=[];for(const i in t){const r=t[i];delete r.metadata,e.push(r)}return e}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.dispersion&&(i.dispersion=this.dispersion),void 0!==this.iridescence&&(i.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(i.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),void 0!==this.anisotropy&&(i.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapRotation&&(i.envMapRotation=this.envMapRotation.toArray()),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),0!==this.side&&(i.side=this.side),!0===this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=!0),204!==this.blendSrc&&(i.blendSrc=this.blendSrc),205!==this.blendDst&&(i.blendDst=this.blendDst),this.blendEquation!==p&&(i.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(i.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(i.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(i.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(i.depthFunc=this.depthFunc),!1===this.depthTest&&(i.depthTest=this.depthTest),!1===this.depthWrite&&(i.depthWrite=this.depthWrite),!1===this.colorWrite&&(i.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(i.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(i.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(i.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Zt&&(i.stencilFail=this.stencilFail),this.stencilZFail!==Zt&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==Zt&&(i.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(i.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaHash&&(i.alphaHash=!0),!0===this.alphaToCoverage&&(i.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=!0),!0===this.forceSinglePass&&(i.forceSinglePass=!0),!0===this.wireframe&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=!0),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),!1===this.fog&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData),e){const e=r(t.textures),n=r(t.images);e.length>0&&(i.textures=e),n.length>0&&(i.images=n)}return i}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(null!==e){const t=e.length;i=new Array(t);for(let r=0;r!==t;++r)i[r]=e[r].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class wr extends gr{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new _r(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Li,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const vr=new Xe,br=new ve;let yr=0;class xr{constructor(t,e,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:yr++}),this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=i,this.usage=35044,this.updateRanges=[],this.gpuType=rt,this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let r=0,n=this.itemSize;r<n;r++)this.array[t+r]=e.array[i+r];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,i=this.count;e<i;e++)br.fromBufferAttribute(this,e),br.applyMatrix3(t),this.setXY(e,br.x,br.y);else if(3===this.itemSize)for(let e=0,i=this.count;e<i;e++)vr.fromBufferAttribute(this,e),vr.applyMatrix3(t),this.setXYZ(e,vr.x,vr.y,vr.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)vr.fromBufferAttribute(this,e),vr.applyMatrix4(t),this.setXYZ(e,vr.x,vr.y,vr.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)vr.fromBufferAttribute(this,e),vr.applyNormalMatrix(t),this.setXYZ(e,vr.x,vr.y,vr.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)vr.fromBufferAttribute(this,e),vr.transformDirection(t),this.setXYZ(e,vr.x,vr.y,vr.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let i=this.array[t*this.itemSize+e];return this.normalized&&(i=fe(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=ge(i,this.array)),this.array[t*this.itemSize+e]=i,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=fe(e,this.array)),e}setX(t,e){return this.normalized&&(e=ge(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=fe(e,this.array)),e}setY(t,e){return this.normalized&&(e=ge(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=fe(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ge(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=fe(e,this.array)),e}setW(t,e){return this.normalized&&(e=ge(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=ge(e,this.array),i=ge(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,r){return t*=this.itemSize,this.normalized&&(e=ge(e,this.array),i=ge(i,this.array),r=ge(r,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=r,this}setXYZW(t,e,i,r,n){return t*=this.itemSize,this.normalized&&(e=ge(e,this.array),i=ge(i,this.array),r=ge(r,this.array),n=ge(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=r,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),35044!==this.usage&&(t.usage=this.usage),t}}class Sr extends xr{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class Mr extends xr{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class Er extends xr{constructor(t,e,i){super(new Float32Array(t),e,i)}}let Tr=0;const Ar=new xi,Rr=new Ji,Cr=new Xe,Pr=new Je,Ir=new Je,Lr=new Xe;class Dr extends ce{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Tr++}),this.uuid=pe(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(xe(t)?Mr:Sr)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(void 0!==i){const e=(new be).getNormalMatrix(t);i.applyNormalMatrix(e),i.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(t),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Ar.makeRotationFromQuaternion(t),this.applyMatrix4(Ar),this}rotateX(t){return Ar.makeRotationX(t),this.applyMatrix4(Ar),this}rotateY(t){return Ar.makeRotationY(t),this.applyMatrix4(Ar),this}rotateZ(t){return Ar.makeRotationZ(t),this.applyMatrix4(Ar),this}translate(t,e,i){return Ar.makeTranslation(t,e,i),this.applyMatrix4(Ar),this}scale(t,e,i){return Ar.makeScale(t,e,i),this.applyMatrix4(Ar),this}lookAt(t){return Rr.lookAt(t),Rr.updateMatrix(),this.applyMatrix4(Rr.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Cr).negate(),this.translate(Cr.x,Cr.y,Cr.z),this}setFromPoints(t){const e=this.getAttribute("position");if(void 0===e){const e=[];for(let i=0,r=t.length;i<r;i++){const r=t[i];e.push(r.x,r.y,r.z||0)}this.setAttribute("position",new Er(e,3))}else{const i=Math.min(t.length,e.count);for(let r=0;r<i;r++){const i=t[r];e.setXYZ(r,i.x,i.y,i.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Je);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),void this.boundingBox.set(new Xe(-1/0,-1/0,-1/0),new Xe(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,r=e.length;i<r;i++){const t=e[i];Pr.setFromBufferAttribute(t),this.morphTargetsRelative?(Lr.addVectors(this.boundingBox.min,Pr.min),this.boundingBox.expandByPoint(Lr),Lr.addVectors(this.boundingBox.max,Pr.max),this.boundingBox.expandByPoint(Lr)):(this.boundingBox.expandByPoint(Pr.min),this.boundingBox.expandByPoint(Pr.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new pi);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),void this.boundingSphere.set(new Xe,1/0);if(t){const i=this.boundingSphere.center;if(Pr.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const i=e[t];Ir.setFromBufferAttribute(i),this.morphTargetsRelative?(Lr.addVectors(Pr.min,Ir.min),Pr.expandByPoint(Lr),Lr.addVectors(Pr.max,Ir.max),Pr.expandByPoint(Lr)):(Pr.expandByPoint(Ir.min),Pr.expandByPoint(Ir.max))}Pr.getCenter(i);let r=0;for(let e=0,n=t.count;e<n;e++)Lr.fromBufferAttribute(t,e),r=Math.max(r,i.distanceToSquared(Lr));if(e)for(let n=0,a=e.length;n<a;n++){const a=e[n],s=this.morphTargetsRelative;for(let e=0,n=a.count;e<n;e++)Lr.fromBufferAttribute(a,e),s&&(Cr.fromBufferAttribute(t,e),Lr.add(Cr)),r=Math.max(r,i.distanceToSquared(Lr))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const i=e.position,r=e.normal,n=e.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new xr(new Float32Array(4*i.count),4));const a=this.getAttribute("tangent"),s=[],o=[];for(let S=0;S<i.count;S++)s[S]=new Xe,o[S]=new Xe;const l=new Xe,c=new Xe,h=new Xe,d=new ve,u=new ve,p=new ve,_=new Xe,m=new Xe;function f(t,e,r){l.fromBufferAttribute(i,t),c.fromBufferAttribute(i,e),h.fromBufferAttribute(i,r),d.fromBufferAttribute(n,t),u.fromBufferAttribute(n,e),p.fromBufferAttribute(n,r),c.sub(l),h.sub(l),u.sub(d),p.sub(d);const a=1/(u.x*p.y-p.x*u.y);isFinite(a)&&(_.copy(c).multiplyScalar(p.y).addScaledVector(h,-u.y).multiplyScalar(a),m.copy(h).multiplyScalar(u.x).addScaledVector(c,-p.x).multiplyScalar(a),s[t].add(_),s[e].add(_),s[r].add(_),o[t].add(m),o[e].add(m),o[r].add(m))}let g=this.groups;0===g.length&&(g=[{start:0,count:t.count}]);for(let S=0,M=g.length;S<M;++S){const e=g[S],i=e.start;for(let r=i,n=i+e.count;r<n;r+=3)f(t.getX(r+0),t.getX(r+1),t.getX(r+2))}const w=new Xe,v=new Xe,b=new Xe,y=new Xe;function x(t){b.fromBufferAttribute(r,t),y.copy(b);const e=s[t];w.copy(e),w.sub(b.multiplyScalar(b.dot(e))).normalize(),v.crossVectors(y,e);const i=v.dot(o[t])<0?-1:1;a.setXYZW(t,w.x,w.y,w.z,i)}for(let S=0,M=g.length;S<M;++S){const e=g[S],i=e.start;for(let r=i,n=i+e.count;r<n;r+=3)x(t.getX(r+0)),x(t.getX(r+1)),x(t.getX(r+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let i=this.getAttribute("normal");if(void 0===i)i=new xr(new Float32Array(3*e.count),3),this.setAttribute("normal",i);else for(let t=0,e=i.count;t<e;t++)i.setXYZ(t,0,0,0);const r=new Xe,n=new Xe,a=new Xe,s=new Xe,o=new Xe,l=new Xe,c=new Xe,h=new Xe;if(t)for(let d=0,u=t.count;d<u;d+=3){const u=t.getX(d+0),p=t.getX(d+1),_=t.getX(d+2);r.fromBufferAttribute(e,u),n.fromBufferAttribute(e,p),a.fromBufferAttribute(e,_),c.subVectors(a,n),h.subVectors(r,n),c.cross(h),s.fromBufferAttribute(i,u),o.fromBufferAttribute(i,p),l.fromBufferAttribute(i,_),s.add(c),o.add(c),l.add(c),i.setXYZ(u,s.x,s.y,s.z),i.setXYZ(p,o.x,o.y,o.z),i.setXYZ(_,l.x,l.y,l.z)}else for(let t=0,d=e.count;t<d;t+=3)r.fromBufferAttribute(e,t+0),n.fromBufferAttribute(e,t+1),a.fromBufferAttribute(e,t+2),c.subVectors(a,n),h.subVectors(r,n),c.cross(h),i.setXYZ(t+0,c.x,c.y,c.z),i.setXYZ(t+1,c.x,c.y,c.z),i.setXYZ(t+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)Lr.fromBufferAttribute(t,e),Lr.normalize(),t.setXYZ(e,Lr.x,Lr.y,Lr.z)}toNonIndexed(){function t(t,e){const i=t.array,r=t.itemSize,n=t.normalized,a=new i.constructor(e.length*r);let s=0,o=0;for(let l=0,c=e.length;l<c;l++){s=t.isInterleavedBufferAttribute?e[l]*t.data.stride+t.offset:e[l]*r;for(let t=0;t<r;t++)a[o++]=i[s++]}return new xr(a,r,n)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Dr,i=this.index.array,r=this.attributes;for(const s in r){const n=t(r[s],i);e.setAttribute(s,n)}const n=this.morphAttributes;for(const s in n){const r=[],a=n[s];for(let e=0,n=a.length;e<n;e++){const n=t(a[e],i);r.push(n)}e.morphAttributes[s]=r}e.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let s=0,o=a.length;s<o;s++){const t=a[s];e.addGroup(t.start,t.count,t.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const o in i){const e=i[o];t.data.attributes[o]=e.toJSON(t.data)}const r={};let n=!1;for(const o in this.morphAttributes){const e=this.morphAttributes[o],i=[];for(let r=0,n=e.length;r<n;r++){const n=e[r];i.push(n.toJSON(t.data))}i.length>0&&(r[o]=i,n=!0)}n&&(t.data.morphAttributes=r,t.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(t.data.groups=JSON.parse(JSON.stringify(a)));const s=this.boundingSphere;return null!==s&&(t.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;null!==i&&this.setIndex(i.clone());const r=t.attributes;for(const l in r){const t=r[l];this.setAttribute(l,t.clone(e))}const n=t.morphAttributes;for(const l in n){const t=[],i=n[l];for(let r=0,n=i.length;r<n;r++)t.push(i[r].clone(e));this.morphAttributes[l]=t}this.morphTargetsRelative=t.morphTargetsRelative;const a=t.groups;for(let l=0,c=a.length;l<c;l++){const t=a[l];this.addGroup(t.start,t.count,t.materialIndex)}const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Ur=new xi,Nr=new yi,Fr=new pi,Or=new Xe,zr=new Xe,Br=new Xe,kr=new Xe,Hr=new Xe,Vr=new Xe,Gr=new Xe,jr=new Xe;class Wr extends Ji{constructor(t=new Dr,e=new wr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const i=t[e[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=i.length;t<e;t++){const e=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}getVertexPosition(t,e){const i=this.geometry,r=i.attributes.position,n=i.morphAttributes.position,a=i.morphTargetsRelative;e.fromBufferAttribute(r,t);const s=this.morphTargetInfluences;if(n&&s){Vr.set(0,0,0);for(let i=0,r=n.length;i<r;i++){const r=s[i],o=n[i];0!==r&&(Hr.fromBufferAttribute(o,t),a?Vr.addScaledVector(Hr,r):Vr.addScaledVector(Hr.sub(e),r))}e.add(Vr)}return e}raycast(t,e){const i=this.geometry,r=this.material,n=this.matrixWorld;if(void 0!==r){if(null===i.boundingSphere&&i.computeBoundingSphere(),Fr.copy(i.boundingSphere),Fr.applyMatrix4(n),Nr.copy(t.ray).recast(t.near),!1===Fr.containsPoint(Nr.origin)){if(null===Nr.intersectSphere(Fr,Or))return;if(Nr.origin.distanceToSquared(Or)>(t.far-t.near)**2)return}Ur.copy(n).invert(),Nr.copy(t.ray).applyMatrix4(Ur),null!==i.boundingBox&&!1===Nr.intersectsBox(i.boundingBox)||this._computeIntersections(t,e,Nr)}}_computeIntersections(t,e,i){let r;const n=this.geometry,a=this.material,s=n.index,o=n.attributes.position,l=n.attributes.uv,c=n.attributes.uv1,h=n.attributes.normal,d=n.groups,u=n.drawRange;if(null!==s)if(Array.isArray(a))for(let p=0,_=d.length;p<_;p++){const n=d[p],o=a[n.materialIndex];for(let a=Math.max(n.start,u.start),d=Math.min(s.count,Math.min(n.start+n.count,u.start+u.count));a<d;a+=3){r=Xr(this,o,t,i,l,c,h,s.getX(a),s.getX(a+1),s.getX(a+2)),r&&(r.faceIndex=Math.floor(a/3),r.face.materialIndex=n.materialIndex,e.push(r))}}else{for(let n=Math.max(0,u.start),o=Math.min(s.count,u.start+u.count);n<o;n+=3){r=Xr(this,a,t,i,l,c,h,s.getX(n),s.getX(n+1),s.getX(n+2)),r&&(r.faceIndex=Math.floor(n/3),e.push(r))}}else if(void 0!==o)if(Array.isArray(a))for(let p=0,_=d.length;p<_;p++){const n=d[p],s=a[n.materialIndex];for(let a=Math.max(n.start,u.start),d=Math.min(o.count,Math.min(n.start+n.count,u.start+u.count));a<d;a+=3){r=Xr(this,s,t,i,l,c,h,a,a+1,a+2),r&&(r.faceIndex=Math.floor(a/3),r.face.materialIndex=n.materialIndex,e.push(r))}}else{for(let n=Math.max(0,u.start),s=Math.min(o.count,u.start+u.count);n<s;n+=3){r=Xr(this,a,t,i,l,c,h,n,n+1,n+2),r&&(r.faceIndex=Math.floor(n/3),e.push(r))}}}}function Xr(t,e,i,r,n,a,s,o,l,c){t.getVertexPosition(o,zr),t.getVertexPosition(l,Br),t.getVertexPosition(c,kr);const h=function(t,e,i,r,n,a,s,o){let l;if(l=1===e.side?r.intersectTriangle(s,a,n,!0,o):r.intersectTriangle(n,a,s,0===e.side,o),null===l)return null;jr.copy(o),jr.applyMatrix4(t.matrixWorld);const c=i.ray.origin.distanceTo(jr);return c<i.near||c>i.far?null:{distance:c,point:jr.clone(),object:t}}(t,e,i,r,zr,Br,kr,Gr);if(h){const t=new Xe;cr.getBarycoord(Gr,zr,Br,kr,t),n&&(h.uv=cr.getInterpolatedAttribute(n,o,l,c,t,new ve)),a&&(h.uv1=cr.getInterpolatedAttribute(a,o,l,c,t,new ve)),s&&(h.normal=cr.getInterpolatedAttribute(s,o,l,c,t,new Xe),h.normal.dot(r.direction)>0&&h.normal.multiplyScalar(-1));const e={a:o,b:l,c:c,normal:new Xe,materialIndex:0};cr.getNormal(zr,Br,kr,e.normal),h.face=e,h.barycoord=t}return h}class qr extends Dr{constructor(t=1,e=1,i=1,r=1,n=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:r,heightSegments:n,depthSegments:a};const s=this;r=Math.floor(r),n=Math.floor(n),a=Math.floor(a);const o=[],l=[],c=[],h=[];let d=0,u=0;function p(t,e,i,r,n,a,p,_,m,f,g){const w=a/m,v=p/f,b=a/2,y=p/2,x=_/2,S=m+1,M=f+1;let E=0,T=0;const A=new Xe;for(let s=0;s<M;s++){const a=s*v-y;for(let o=0;o<S;o++){const d=o*w-b;A[t]=d*r,A[e]=a*n,A[i]=x,l.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[i]=_>0?1:-1,c.push(A.x,A.y,A.z),h.push(o/m),h.push(1-s/f),E+=1}}for(let s=0;s<f;s++)for(let t=0;t<m;t++){const e=d+t+S*s,i=d+t+S*(s+1),r=d+(t+1)+S*(s+1),n=d+(t+1)+S*s;o.push(e,i,n),o.push(i,r,n),T+=6}s.addGroup(u,T,g),u+=T,d+=E}p("z","y","x",-1,-1,i,e,t,a,n,0),p("z","y","x",1,-1,i,e,-t,a,n,1),p("x","z","y",1,1,t,i,e,r,a,2),p("x","z","y",1,-1,t,i,-e,r,a,3),p("x","y","z",1,-1,t,e,i,r,n,4),p("x","y","z",-1,-1,t,e,-i,r,n,5),this.setIndex(o),this.setAttribute("position",new Er(l,3)),this.setAttribute("normal",new Er(c,3)),this.setAttribute("uv",new Er(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new qr(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Yr(t){const e={};for(const i in t){e[i]={};for(const r in t[i]){const n=t[i][r];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?n.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[i][r]=null):e[i][r]=n.clone():Array.isArray(n)?e[i][r]=n.slice():e[i][r]=n}}return e}function Jr(t){const e={};for(let i=0;i<t.length;i++){const r=Yr(t[i]);for(const t in r)e[t]=r[t]}return e}function Kr(t){const e=t.getRenderTarget();return null===e?t.outputColorSpace:!0===e.isXRRenderTarget?e.texture.colorSpace:Pe.workingColorSpace}const Zr={clone:Yr,merge:Jr};class $r extends gr{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Yr(t.uniforms),this.uniformsGroups=function(t){const e=[];for(let i=0;i<t.length;i++)e.push(t[i].clone());return e}(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const r in this.uniforms){const i=this.uniforms[r].value;i&&i.isTexture?e.uniforms[r]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[r]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[r]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[r]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[r]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[r]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[r]={type:"m4",value:i.toArray()}:e.uniforms[r]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const i={};for(const r in this.extensions)!0===this.extensions[r]&&(i[r]=!0);return Object.keys(i).length>0&&(e.extensions=i),e}}class Qr extends Ji{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new xi,this.projectionMatrix=new xi,this.projectionMatrixInverse=new xi,this.coordinateSystem=oe}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}const tn=new Xe,en=new ve,rn=new ve;class nn extends Qr{constructor(t=50,e=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*ue*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*de*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*ue*Math.atan(Math.tan(.5*de*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,i){tn.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(tn.x,tn.y).multiplyScalar(-t/tn.z),tn.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(tn.x,tn.y).multiplyScalar(-t/tn.z)}getViewSize(t,e){return this.getViewBounds(t,en,rn),e.subVectors(rn,en)}setViewOffset(t,e,i,r,n,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=r,this.view.width=n,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*de*this.fov)/this.zoom,i=2*e,r=this.aspect*i,n=-.5*r;const a=this.view;if(null!==this.view&&this.view.enabled){const t=a.fullWidth,s=a.fullHeight;n+=a.offsetX*r/t,e-=a.offsetY*i/s,r*=a.width/t,i*=a.height/s}const s=this.filmOffset;0!==s&&(n+=t*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(n,n+r,e,e-i,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const an=-90;class sn extends Ji{constructor(t,e,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new nn(an,1,t,e);r.layers=this.layers,this.add(r);const n=new nn(an,1,t,e);n.layers=this.layers,this.add(n);const a=new nn(an,1,t,e);a.layers=this.layers,this.add(a);const s=new nn(an,1,t,e);s.layers=this.layers,this.add(s);const o=new nn(an,1,t,e);o.layers=this.layers,this.add(o);const l=new nn(an,1,t,e);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[i,r,n,a,s,o]=e;for(const l of e)this.remove(l);if(t===oe)i.up.set(0,1,0),i.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),n.up.set(0,0,-1),n.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),s.up.set(0,1,0),s.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else{if(t!==le)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);i.up.set(0,-1,0),i.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),n.up.set(0,0,1),n.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),s.up.set(0,-1,0),s.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1)}for(const l of e)this.add(l),l.updateMatrixWorld()}update(t,e){null===this.parent&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:r}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[n,a,s,o,l,c]=this.children,h=t.getRenderTarget(),d=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),p=t.xr.enabled;t.xr.enabled=!1;const _=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,t.setRenderTarget(i,0,r),t.render(e,n),t.setRenderTarget(i,1,r),t.render(e,a),t.setRenderTarget(i,2,r),t.render(e,s),t.setRenderTarget(i,3,r),t.render(e,o),t.setRenderTarget(i,4,r),t.render(e,l),i.texture.generateMipmaps=_,t.setRenderTarget(i,5,r),t.render(e,c),t.setRenderTarget(h,d,u),t.xr.enabled=p,i.texture.needsPMREMUpdate=!0}}class on extends Be{constructor(t=[],e=301,i,r,n,a,s,o,l,c){super(t,e,i,r,n,a,s,o,l,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class ln extends Ve{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const i={width:t,height:t,depth:1},r=[i,i,i,i,i,i];this.texture=new on(r,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:Y}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},r=new qr(5,5,5),n=new $r({name:"CubemapFromEquirect",uniforms:Yr(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:1,blending:0});n.uniforms.tEquirect.value=e;const a=new Wr(r,n),s=e.minFilter;e.minFilter===K&&(e.minFilter=Y);return new sn(1,10,this).update(t,a),e.minFilter=s,a.geometry.dispose(),a.material.dispose(),this}clear(t,e=!0,i=!0,r=!0){const n=t.getRenderTarget();for(let a=0;a<6;a++)t.setRenderTarget(this,a),t.clear(e,i,r);t.setRenderTarget(n)}}class cn extends Ji{constructor(){super(),this.isGroup=!0,this.type="Group"}}const hn={type:"move"};class dn{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new cn,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new cn,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Xe,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Xe),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new cn,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Xe,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Xe),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const i of t.hand.values())this._getHandJoint(e,i)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,i){let r=null,n=null,a=null;const s=this._targetRay,o=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState){if(l&&t.hand){a=!0;for(const a of t.hand.values()){const t=e.getJointPose(a,i),r=this._getHandJoint(l,a);null!==t&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.matrixWorldNeedsUpdate=!0,r.jointRadius=t.radius),r.visible=null!==t}const r=l.joints["index-finger-tip"],n=l.joints["thumb-tip"],s=r.position.distanceTo(n.position),o=.02,c=.005;l.inputState.pinching&&s>o+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&s<=o-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(n=e.getPose(t.gripSpace,i),null!==n&&(o.matrix.fromArray(n.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,n.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(n.linearVelocity)):o.hasLinearVelocity=!1,n.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(n.angularVelocity)):o.hasAngularVelocity=!1));null!==s&&(r=e.getPose(t.targetRaySpace,i),null===r&&null!==n&&(r=n),null!==r&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.matrixWorldNeedsUpdate=!0,r.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(r.linearVelocity)):s.hasLinearVelocity=!1,r.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(r.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(hn)))}return null!==s&&(s.visible=null!==r),null!==o&&(o.visible=null!==n),null!==l&&(l.visible=null!==a),this}_getHandJoint(t,e){if(void 0===t.joints[e.jointName]){const i=new cn;i.matrixAutoUpdate=!1,i.visible=!1,t.joints[e.jointName]=i,t.add(i)}return t.joints[e.jointName]}}class un{constructor(t,e=1,i=1e3){this.isFog=!0,this.name="",this.color=new _r(t),this.near=e,this.far=i}clone(){return new un(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}let pn=class extends Ji{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Li,this.environmentIntensity=1,this.environmentRotation=new Li,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),1!==this.environmentIntensity&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}};const _n=new Xe,mn=new Xe,fn=new be;class gn{constructor(t=new Xe(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,i,r){return this.normal.set(t,e,i),this.constant=r,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,i){const r=_n.subVectors(i,e).cross(mn.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(r,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const i=t.delta(_n),r=this.normal.dot(i);if(0===r)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const n=-(t.start.dot(this.normal)+this.constant)/r;return n<0||n>1?null:e.copy(t.start).addScaledVector(i,n)}intersectsLine(t){const e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const i=e||fn.getNormalMatrix(t),r=this.coplanarPoint(_n).applyMatrix4(t),n=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(n),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const wn=new pi,vn=new Xe;class bn{constructor(t=new gn,e=new gn,i=new gn,r=new gn,n=new gn,a=new gn){this.planes=[t,e,i,r,n,a]}set(t,e,i,r,n,a){const s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(i),s[3].copy(r),s[4].copy(n),s[5].copy(a),this}copy(t){const e=this.planes;for(let i=0;i<6;i++)e[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t,e=2e3){const i=this.planes,r=t.elements,n=r[0],a=r[1],s=r[2],o=r[3],l=r[4],c=r[5],h=r[6],d=r[7],u=r[8],p=r[9],_=r[10],m=r[11],f=r[12],g=r[13],w=r[14],v=r[15];if(i[0].setComponents(o-n,d-l,m-u,v-f).normalize(),i[1].setComponents(o+n,d+l,m+u,v+f).normalize(),i[2].setComponents(o+a,d+c,m+p,v+g).normalize(),i[3].setComponents(o-a,d-c,m-p,v-g).normalize(),i[4].setComponents(o-s,d-h,m-_,v-w).normalize(),e===oe)i[5].setComponents(o+s,d+h,m+_,v+w).normalize();else{if(e!==le)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);i[5].setComponents(s,h,_,w).normalize()}return this}intersectsObject(t){if(void 0!==t.boundingSphere)null===t.boundingSphere&&t.computeBoundingSphere(),wn.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;null===e.boundingSphere&&e.computeBoundingSphere(),wn.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(wn)}intersectsSprite(t){return wn.center.set(0,0,0),wn.radius=.7071067811865476,wn.applyMatrix4(t.matrixWorld),this.intersectsSphere(wn)}intersectsSphere(t){const e=this.planes,i=t.center,r=-t.radius;for(let n=0;n<6;n++){if(e[n].distanceToPoint(i)<r)return!1}return!0}intersectsBox(t){const e=this.planes;for(let i=0;i<6;i++){const r=e[i];if(vn.x=r.normal.x>0?t.max.x:t.min.x,vn.y=r.normal.y>0?t.max.y:t.min.y,vn.z=r.normal.z>0?t.max.z:t.min.z,r.distanceToPoint(vn)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}class yn extends gr{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new _r(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const xn=new Xe,Sn=new Xe,Mn=new xi,En=new yi,Tn=new pi,An=new Xe,Rn=new Xe;class Cn extends Ji{constructor(t=new Dr,e=new yn){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,i=[0];for(let t=1,r=e.count;t<r;t++)xn.fromBufferAttribute(e,t-1),Sn.fromBufferAttribute(e,t),i[t]=i[t-1],i[t]+=xn.distanceTo(Sn);t.setAttribute("lineDistance",new Er(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const i=this.geometry,r=this.matrixWorld,n=t.params.Line.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),Tn.copy(i.boundingSphere),Tn.applyMatrix4(r),Tn.radius+=n,!1===t.ray.intersectsSphere(Tn))return;Mn.copy(r).invert(),En.copy(t.ray).applyMatrix4(Mn);const s=n/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,l=this.isLineSegments?2:1,c=i.index,h=i.attributes.position;if(null!==c){const i=Math.max(0,a.start),r=Math.min(c.count,a.start+a.count);for(let n=i,a=r-1;n<a;n+=l){const i=c.getX(n),r=c.getX(n+1),a=Pn(this,t,En,o,i,r,n);a&&e.push(a)}if(this.isLineLoop){const n=c.getX(r-1),a=c.getX(i),s=Pn(this,t,En,o,n,a,r-1);s&&e.push(s)}}else{const i=Math.max(0,a.start),r=Math.min(h.count,a.start+a.count);for(let n=i,a=r-1;n<a;n+=l){const i=Pn(this,t,En,o,n,n+1,n);i&&e.push(i)}if(this.isLineLoop){const n=Pn(this,t,En,o,r-1,i,r-1);n&&e.push(n)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const i=t[e[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=i.length;t<e;t++){const e=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}function Pn(t,e,i,r,n,a,s){const o=t.geometry.attributes.position;xn.fromBufferAttribute(o,n),Sn.fromBufferAttribute(o,a);if(i.distanceSqToSegment(xn,Sn,An,Rn)>r)return;An.applyMatrix4(t.matrixWorld);const l=e.ray.origin.distanceTo(An);return l<e.near||l>e.far?void 0:{distance:l,point:Rn.clone().applyMatrix4(t.matrixWorld),index:s,face:null,faceIndex:null,barycoord:null,object:t}}const In=new Xe,Ln=new Xe;class Dn extends Cn{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,i=[];for(let t=0,r=e.count;t<r;t+=2)In.fromBufferAttribute(e,t),Ln.fromBufferAttribute(e,t+1),i[t]=0===t?0:i[t-1],i[t+1]=i[t]+In.distanceTo(Ln);t.setAttribute("lineDistance",new Er(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Un extends gr{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new _r(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const Nn=new xi,Fn=new yi,On=new pi,zn=new Xe;class Bn extends Ji{constructor(t=new Dr,e=new Un){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const i=this.geometry,r=this.matrixWorld,n=t.params.Points.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),On.copy(i.boundingSphere),On.applyMatrix4(r),On.radius+=n,!1===t.ray.intersectsSphere(On))return;Nn.copy(r).invert(),Fn.copy(t.ray).applyMatrix4(Nn);const s=n/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,l=i.index,c=i.attributes.position;if(null!==l){for(let i=Math.max(0,a.start),n=Math.min(l.count,a.start+a.count);i<n;i++){const n=l.getX(i);zn.fromBufferAttribute(c,n),kn(zn,n,o,r,t,e,this)}}else{for(let i=Math.max(0,a.start),n=Math.min(c.count,a.start+a.count);i<n;i++)zn.fromBufferAttribute(c,i),kn(zn,i,o,r,t,e,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const i=t[e[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=i.length;t<e;t++){const e=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}function kn(t,e,i,r,n,a,s){const o=Fn.distanceSqToPoint(t);if(o<i){const i=new Xe;Fn.closestPointToPoint(t,i),i.applyMatrix4(r);const l=n.ray.origin.distanceTo(i);if(l<n.near||l>n.far)return;a.push({distance:l,distanceToRay:Math.sqrt(o),point:i,index:e,face:null,faceIndex:null,barycoord:null,object:s})}}class Hn extends Be{constructor(t,e,i=1014,r,n,a,s=1003,o=1003,l,c=1026){if(c!==ht&&c!==dt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,r,n,a,s,o,c,i,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new Fe(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return null!==this.compareFunction&&(e.compareFunction=this.compareFunction),e}}class Vn{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,e){const i=this.getUtoTmapping(t);return this.getPoint(i,e)}getPoints(t=5){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return e}getSpacedPoints(t=5){const e=[];for(let i=0;i<=t;i++)e.push(this.getPointAt(i/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let i,r=this.getPoint(0),n=0;e.push(0);for(let a=1;a<=t;a++)i=this.getPoint(a/t),n+=i.distanceTo(r),e.push(n),r=i;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e=null){const i=this.getLengths();let r=0;const n=i.length;let a;a=e||t*i[n-1];let s,o=0,l=n-1;for(;o<=l;)if(r=Math.floor(o+(l-o)/2),s=i[r]-a,s<0)o=r+1;else{if(!(s>0)){l=r;break}l=r-1}if(r=l,i[r]===a)return r/(n-1);const c=i[r];return(r+(a-c)/(i[r+1]-c))/(n-1)}getTangent(t,e){const i=1e-4;let r=t-i,n=t+i;r<0&&(r=0),n>1&&(n=1);const a=this.getPoint(r),s=this.getPoint(n),o=e||(a.isVector2?new ve:new Xe);return o.copy(s).sub(a).normalize(),o}getTangentAt(t,e){const i=this.getUtoTmapping(t);return this.getTangent(i,e)}computeFrenetFrames(t,e=!1){const i=new Xe,r=[],n=[],a=[],s=new Xe,o=new xi;for(let u=0;u<=t;u++){const e=u/t;r[u]=this.getTangentAt(e,new Xe)}n[0]=new Xe,a[0]=new Xe;let l=Number.MAX_VALUE;const c=Math.abs(r[0].x),h=Math.abs(r[0].y),d=Math.abs(r[0].z);c<=l&&(l=c,i.set(1,0,0)),h<=l&&(l=h,i.set(0,1,0)),d<=l&&i.set(0,0,1),s.crossVectors(r[0],i).normalize(),n[0].crossVectors(r[0],s),a[0].crossVectors(r[0],n[0]);for(let u=1;u<=t;u++){if(n[u]=n[u-1].clone(),a[u]=a[u-1].clone(),s.crossVectors(r[u-1],r[u]),s.length()>Number.EPSILON){s.normalize();const t=Math.acos(_e(r[u-1].dot(r[u]),-1,1));n[u].applyMatrix4(o.makeRotationAxis(s,t))}a[u].crossVectors(r[u],n[u])}if(!0===e){let e=Math.acos(_e(n[0].dot(n[t]),-1,1));e/=t,r[0].dot(s.crossVectors(n[0],n[t]))>0&&(e=-e);for(let i=1;i<=t;i++)n[i].applyMatrix4(o.makeRotationAxis(r[i],e*i)),a[i].crossVectors(r[i],n[i])}return{tangents:r,normals:n,binormals:a}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Gn extends Vn{constructor(t=0,e=0,i=1,r=1,n=0,a=2*Math.PI,s=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=i,this.yRadius=r,this.aStartAngle=n,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(t,e=new ve){const i=e,r=2*Math.PI;let n=this.aEndAngle-this.aStartAngle;const a=Math.abs(n)<Number.EPSILON;for(;n<0;)n+=r;for(;n>r;)n-=r;n<Number.EPSILON&&(n=a?0:r),!0!==this.aClockwise||a||(n===r?n=-r:n-=r);const s=this.aStartAngle+t*n;let o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),i=o-this.aX,r=l-this.aY;o=i*t-r*e+this.aX,l=i*e+r*t+this.aY}return i.set(o,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}function jn(){let t=0,e=0,i=0,r=0;function n(n,a,s,o){t=n,e=s,i=-3*n+3*a-2*s-o,r=2*n-2*a+s+o}return{initCatmullRom:function(t,e,i,r,a){n(e,i,a*(i-t),a*(r-e))},initNonuniformCatmullRom:function(t,e,i,r,a,s,o){let l=(e-t)/a-(i-t)/(a+s)+(i-e)/s,c=(i-e)/s-(r-e)/(s+o)+(r-i)/o;l*=s,c*=s,n(e,i,l,c)},calc:function(n){const a=n*n;return t+e*n+i*a+r*(a*n)}}}const Wn=new Xe,Xn=new jn,qn=new jn,Yn=new jn;function Jn(t,e,i,r,n){const a=.5*(r-e),s=.5*(n-i),o=t*t;return(2*i-2*r+a+s)*(t*o)+(-3*i+3*r-2*a-s)*o+a*t+i}function Kn(t,e,i,r){return function(t,e){const i=1-t;return i*i*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,i)+function(t,e){return t*t*e}(t,r)}function Zn(t,e,i,r,n){return function(t,e){const i=1-t;return i*i*i*e}(t,e)+function(t,e){const i=1-t;return 3*i*i*t*e}(t,i)+function(t,e){return 3*(1-t)*t*t*e}(t,r)+function(t,e){return t*t*t*e}(t,n)}class $n extends Vn{constructor(t=new ve,e=new ve,i=new ve,r=new ve){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=i,this.v3=r}getPoint(t,e=new ve){const i=e,r=this.v0,n=this.v1,a=this.v2,s=this.v3;return i.set(Zn(t,r.x,n.x,a.x,s.x),Zn(t,r.y,n.y,a.y,s.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Qn extends Vn{constructor(t=new ve,e=new ve){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new ve){const i=e;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new ve){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class ta extends Vn{constructor(t=new ve,e=new ve,i=new ve){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new ve){const i=e,r=this.v0,n=this.v1,a=this.v2;return i.set(Kn(t,r.x,n.x,a.x),Kn(t,r.y,n.y,a.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class ea extends Vn{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new ve){const i=e,r=this.points,n=(r.length-1)*t,a=Math.floor(n),s=n-a,o=r[0===a?a:a-1],l=r[a],c=r[a>r.length-2?r.length-1:a+1],h=r[a>r.length-3?r.length-1:a+2];return i.set(Jn(s,o.x,l.x,c.x,h.x),Jn(s,o.y,l.y,c.y,h.y)),i}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push((new ve).fromArray(i))}return this}}var ia=Object.freeze({__proto__:null,ArcCurve:class extends Gn{constructor(t,e,i,r,n,a){super(t,e,i,i,r,n,a),this.isArcCurve=!0,this.type="ArcCurve"}},CatmullRomCurve3:class extends Vn{constructor(t=[],e=!1,i="centripetal",r=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=i,this.tension=r}getPoint(t,e=new Xe){const i=e,r=this.points,n=r.length,a=(n-(this.closed?0:1))*t;let s,o,l=Math.floor(a),c=a-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/n)+1)*n:0===c&&l===n-1&&(l=n-2,c=1),this.closed||l>0?s=r[(l-1)%n]:(Wn.subVectors(r[0],r[1]).add(r[0]),s=Wn);const h=r[l%n],d=r[(l+1)%n];if(this.closed||l+2<n?o=r[(l+2)%n]:(Wn.subVectors(r[n-1],r[n-2]).add(r[n-1]),o=Wn),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(h),t),i=Math.pow(h.distanceToSquared(d),t),r=Math.pow(d.distanceToSquared(o),t);i<1e-4&&(i=1),e<1e-4&&(e=i),r<1e-4&&(r=i),Xn.initNonuniformCatmullRom(s.x,h.x,d.x,o.x,e,i,r),qn.initNonuniformCatmullRom(s.y,h.y,d.y,o.y,e,i,r),Yn.initNonuniformCatmullRom(s.z,h.z,d.z,o.z,e,i,r)}else"catmullrom"===this.curveType&&(Xn.initCatmullRom(s.x,h.x,d.x,o.x,this.tension),qn.initCatmullRom(s.y,h.y,d.y,o.y,this.tension),Yn.initCatmullRom(s.z,h.z,d.z,o.z,this.tension));return i.set(Xn.calc(c),qn.calc(c),Yn.calc(c)),i}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push((new Xe).fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}},CubicBezierCurve:$n,CubicBezierCurve3:class extends Vn{constructor(t=new Xe,e=new Xe,i=new Xe,r=new Xe){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=i,this.v3=r}getPoint(t,e=new Xe){const i=e,r=this.v0,n=this.v1,a=this.v2,s=this.v3;return i.set(Zn(t,r.x,n.x,a.x,s.x),Zn(t,r.y,n.y,a.y,s.y),Zn(t,r.z,n.z,a.z,s.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}},EllipseCurve:Gn,LineCurve:Qn,LineCurve3:class extends Vn{constructor(t=new Xe,e=new Xe){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new Xe){const i=e;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new Xe){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},QuadraticBezierCurve:ta,QuadraticBezierCurve3:class extends Vn{constructor(t=new Xe,e=new Xe,i=new Xe){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new Xe){const i=e,r=this.v0,n=this.v1,a=this.v2;return i.set(Kn(t,r.x,n.x,a.x),Kn(t,r.y,n.y,a.y),Kn(t,r.z,n.z,a.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},SplineCurve:ea});class ra extends Vn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const i=!0===t.isVector2?"LineCurve":"LineCurve3";this.curves.push(new ia[i](e,t))}return this}getPoint(t,e){const i=t*this.getLength(),r=this.getCurveLengths();let n=0;for(;n<r.length;){if(r[n]>=i){const t=r[n]-i,a=this.curves[n],s=a.getLength(),o=0===s?0:1-t/s;return a.getPointAt(o,e)}n++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let i=0,r=this.curves.length;i<r;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let i;for(let r=0,n=this.curves;r<n.length;r++){const a=n[r],s=a.isEllipseCurve?2*t:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?t*a.points.length:t,o=a.getPoints(s);for(let t=0;t<o.length;t++){const r=o[t];i&&i.equals(r)||(e.push(r),i=r)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,i=t.curves.length;e<i;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,i=this.curves.length;e<i;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,i=t.curves.length;e<i;e++){const i=t.curves[e];this.curves.push((new ia[i.type]).fromJSON(i))}return this}}class na extends ra{constructor(t){super(),this.type="Path",this.currentPoint=new ve,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,i=t.length;e<i;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const i=new Qn(this.currentPoint.clone(),new ve(t,e));return this.curves.push(i),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,i,r){const n=new ta(this.currentPoint.clone(),new ve(t,e),new ve(i,r));return this.curves.push(n),this.currentPoint.set(i,r),this}bezierCurveTo(t,e,i,r,n,a){const s=new $n(this.currentPoint.clone(),new ve(t,e),new ve(i,r),new ve(n,a));return this.curves.push(s),this.currentPoint.set(n,a),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),i=new ea(e);return this.curves.push(i),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,i,r,n,a){const s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+s,e+o,i,r,n,a),this}absarc(t,e,i,r,n,a){return this.absellipse(t,e,i,i,r,n,a),this}ellipse(t,e,i,r,n,a,s,o){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,i,r,n,a,s,o),this}absellipse(t,e,i,r,n,a,s,o){const l=new Gn(t,e,i,r,n,a,s,o);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class aa extends Dr{constructor(t=1,e=1,i=1,r=32,n=1,a=!1,s=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:i,radialSegments:r,heightSegments:n,openEnded:a,thetaStart:s,thetaLength:o};const l=this;r=Math.floor(r),n=Math.floor(n);const c=[],h=[],d=[],u=[];let p=0;const _=[],m=i/2;let f=0;function g(i){const n=p,a=new ve,_=new Xe;let g=0;const w=!0===i?t:e,v=!0===i?1:-1;for(let t=1;t<=r;t++)h.push(0,m*v,0),d.push(0,v,0),u.push(.5,.5),p++;const b=p;for(let t=0;t<=r;t++){const e=t/r*o+s,i=Math.cos(e),n=Math.sin(e);_.x=w*n,_.y=m*v,_.z=w*i,h.push(_.x,_.y,_.z),d.push(0,v,0),a.x=.5*i+.5,a.y=.5*n*v+.5,u.push(a.x,a.y),p++}for(let t=0;t<r;t++){const e=n+t,r=b+t;!0===i?c.push(r,r+1,e):c.push(r+1,r,e),g+=3}l.addGroup(f,g,!0===i?1:2),f+=g}!function(){const a=new Xe,g=new Xe;let w=0;const v=(e-t)/i;for(let l=0;l<=n;l++){const c=[],f=l/n,w=f*(e-t)+t;for(let t=0;t<=r;t++){const e=t/r,n=e*o+s,l=Math.sin(n),_=Math.cos(n);g.x=w*l,g.y=-f*i+m,g.z=w*_,h.push(g.x,g.y,g.z),a.set(l,v,_).normalize(),d.push(a.x,a.y,a.z),u.push(e,1-f),c.push(p++)}_.push(c)}for(let i=0;i<r;i++)for(let r=0;r<n;r++){const a=_[r][i],s=_[r+1][i],o=_[r+1][i+1],l=_[r][i+1];(t>0||0!==r)&&(c.push(a,s,l),w+=3),(e>0||r!==n-1)&&(c.push(s,o,l),w+=3)}l.addGroup(f,w,0),f+=w}(),!1===a&&(t>0&&g(!0),e>0&&g(!1)),this.setIndex(c),this.setAttribute("position",new Er(h,3)),this.setAttribute("normal",new Er(d,3)),this.setAttribute("uv",new Er(u,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new aa(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}let sa=class extends na{constructor(t){super(t),this.uuid=pe(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let i=0,r=this.holes.length;i<r;i++)e[i]=this.holes[i].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,i=t.holes.length;e<i;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,i=this.holes.length;e<i;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,i=t.holes.length;e<i;e++){const i=t.holes[e];this.holes.push((new na).fromJSON(i))}return this}};function oa(t,e,i=2){const r=e&&e.length,n=r?e[0]*i:t.length;let a=la(t,0,n,i,!0);const s=[];if(!a||a.next===a.prev)return s;let o,l,c;if(r&&(a=function(t,e,i,r){const n=[];for(let a=0,s=e.length;a<s;a++){const i=la(t,e[a]*r,a<s-1?e[a+1]*r:t.length,r,!1);i===i.next&&(i.steiner=!0),n.push(va(i))}n.sort(ma);for(let a=0;a<n.length;a++)i=fa(n[a],i);return i}(t,e,a,i)),t.length>80*i){o=1/0,l=1/0;let e=-1/0,r=-1/0;for(let a=i;a<n;a+=i){const i=t[a],n=t[a+1];i<o&&(o=i),n<l&&(l=n),i>e&&(e=i),n>r&&(r=n)}c=Math.max(e-o,r-l),c=0!==c?32767/c:0}return ha(a,s,i,o,l,c,0),s}function la(t,e,i,r,n){let a;if(n===function(t,e,i,r){let n=0;for(let a=e,s=i-r;a<i;a+=r)n+=(t[s]-t[a])*(t[a+1]+t[s+1]),s=a;return n}(t,e,i,r)>0)for(let s=e;s<i;s+=r)a=Pa(s/r|0,t[s],t[s+1],a);else for(let s=i-r;s>=e;s-=r)a=Pa(s/r|0,t[s],t[s+1],a);return a&&Ma(a,a.next)&&(Ia(a),a=a.next),a}function ca(t,e){if(!t)return t;e||(e=t);let i,r=t;do{if(i=!1,r.steiner||!Ma(r,r.next)&&0!==Sa(r.prev,r,r.next))r=r.next;else{if(Ia(r),r=e=r.prev,r===r.next)break;i=!0}}while(i||r!==e);return e}function ha(t,e,i,r,n,a,s){if(!t)return;!s&&a&&function(t,e,i,r){let n=t;do{0===n.z&&(n.z=wa(n.x,n.y,e,i,r)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next}while(n!==t);n.prevZ.nextZ=null,n.prevZ=null,function(t){let e,i=1;do{let r,n=t;t=null;let a=null;for(e=0;n;){e++;let s=n,o=0;for(let t=0;t<i&&(o++,s=s.nextZ,s);t++);let l=i;for(;o>0||l>0&&s;)0!==o&&(0===l||!s||n.z<=s.z)?(r=n,n=n.nextZ,o--):(r=s,s=s.nextZ,l--),a?a.nextZ=r:t=r,r.prevZ=a,a=r;n=s}a.nextZ=null,i*=2}while(e>1)}(n)}(t,r,n,a);let o=t;for(;t.prev!==t.next;){const l=t.prev,c=t.next;if(a?ua(t,r,n,a):da(t))e.push(l.i,t.i,c.i),Ia(t),t=c.next,o=c.next;else if((t=c)===o){s?1===s?ha(t=pa(ca(t),e),e,i,r,n,a,2):2===s&&_a(t,e,i,r,n,a):ha(ca(t),e,i,r,n,a,1);break}}}function da(t){const e=t.prev,i=t,r=t.next;if(Sa(e,i,r)>=0)return!1;const n=e.x,a=i.x,s=r.x,o=e.y,l=i.y,c=r.y,h=Math.min(n,a,s),d=Math.min(o,l,c),u=Math.max(n,a,s),p=Math.max(o,l,c);let _=r.next;for(;_!==e;){if(_.x>=h&&_.x<=u&&_.y>=d&&_.y<=p&&ya(n,o,a,l,s,c,_.x,_.y)&&Sa(_.prev,_,_.next)>=0)return!1;_=_.next}return!0}function ua(t,e,i,r){const n=t.prev,a=t,s=t.next;if(Sa(n,a,s)>=0)return!1;const o=n.x,l=a.x,c=s.x,h=n.y,d=a.y,u=s.y,p=Math.min(o,l,c),_=Math.min(h,d,u),m=Math.max(o,l,c),f=Math.max(h,d,u),g=wa(p,_,e,i,r),w=wa(m,f,e,i,r);let v=t.prevZ,b=t.nextZ;for(;v&&v.z>=g&&b&&b.z<=w;){if(v.x>=p&&v.x<=m&&v.y>=_&&v.y<=f&&v!==n&&v!==s&&ya(o,h,l,d,c,u,v.x,v.y)&&Sa(v.prev,v,v.next)>=0)return!1;if(v=v.prevZ,b.x>=p&&b.x<=m&&b.y>=_&&b.y<=f&&b!==n&&b!==s&&ya(o,h,l,d,c,u,b.x,b.y)&&Sa(b.prev,b,b.next)>=0)return!1;b=b.nextZ}for(;v&&v.z>=g;){if(v.x>=p&&v.x<=m&&v.y>=_&&v.y<=f&&v!==n&&v!==s&&ya(o,h,l,d,c,u,v.x,v.y)&&Sa(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;b&&b.z<=w;){if(b.x>=p&&b.x<=m&&b.y>=_&&b.y<=f&&b!==n&&b!==s&&ya(o,h,l,d,c,u,b.x,b.y)&&Sa(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function pa(t,e){let i=t;do{const r=i.prev,n=i.next.next;!Ma(r,n)&&Ea(r,i,i.next,n)&&Ra(r,n)&&Ra(n,r)&&(e.push(r.i,i.i,n.i),Ia(i),Ia(i.next),i=t=n),i=i.next}while(i!==t);return ca(i)}function _a(t,e,i,r,n,a){let s=t;do{let t=s.next.next;for(;t!==s.prev;){if(s.i!==t.i&&xa(s,t)){let o=Ca(s,t);return s=ca(s,s.next),o=ca(o,o.next),ha(s,e,i,r,n,a,0),void ha(o,e,i,r,n,a,0)}t=t.next}s=s.next}while(s!==t)}function ma(t,e){let i=t.x-e.x;if(0===i&&(i=t.y-e.y,0===i)){i=(t.next.y-t.y)/(t.next.x-t.x)-(e.next.y-e.y)/(e.next.x-e.x)}return i}function fa(t,e){const i=function(t,e){let i=e;const r=t.x,n=t.y;let a,s=-1/0;if(Ma(t,i))return i;do{if(Ma(t,i.next))return i.next;if(n<=i.y&&n>=i.next.y&&i.next.y!==i.y){const t=i.x+(n-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(t<=r&&t>s&&(s=t,a=i.x<i.next.x?i:i.next,t===r))return a}i=i.next}while(i!==e);if(!a)return null;const o=a,l=a.x,c=a.y;let h=1/0;i=a;do{if(r>=i.x&&i.x>=l&&r!==i.x&&ba(n<c?r:s,n,l,c,n<c?s:r,n,i.x,i.y)){const e=Math.abs(n-i.y)/(r-i.x);Ra(i,t)&&(e<h||e===h&&(i.x>a.x||i.x===a.x&&ga(a,i)))&&(a=i,h=e)}i=i.next}while(i!==o);return a}(t,e);if(!i)return e;const r=Ca(i,t);return ca(r,r.next),ca(i,i.next)}function ga(t,e){return Sa(t.prev,t,e.prev)<0&&Sa(e.next,t,t.next)<0}function wa(t,e,i,r,n){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-i)*n|0)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-r)*n|0)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function va(t){let e=t,i=t;do{(e.x<i.x||e.x===i.x&&e.y<i.y)&&(i=e),e=e.next}while(e!==t);return i}function ba(t,e,i,r,n,a,s,o){return(n-s)*(e-o)>=(t-s)*(a-o)&&(t-s)*(r-o)>=(i-s)*(e-o)&&(i-s)*(a-o)>=(n-s)*(r-o)}function ya(t,e,i,r,n,a,s,o){return!(t===s&&e===o)&&ba(t,e,i,r,n,a,s,o)}function xa(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let i=t;do{if(i.i!==t.i&&i.next.i!==t.i&&i.i!==e.i&&i.next.i!==e.i&&Ea(i,i.next,t,e))return!0;i=i.next}while(i!==t);return!1}(t,e)&&(Ra(t,e)&&Ra(e,t)&&function(t,e){let i=t,r=!1;const n=(t.x+e.x)/2,a=(t.y+e.y)/2;do{i.y>a!=i.next.y>a&&i.next.y!==i.y&&n<(i.next.x-i.x)*(a-i.y)/(i.next.y-i.y)+i.x&&(r=!r),i=i.next}while(i!==t);return r}(t,e)&&(Sa(t.prev,t,e.prev)||Sa(t,e.prev,e))||Ma(t,e)&&Sa(t.prev,t,t.next)>0&&Sa(e.prev,e,e.next)>0)}function Sa(t,e,i){return(e.y-t.y)*(i.x-e.x)-(e.x-t.x)*(i.y-e.y)}function Ma(t,e){return t.x===e.x&&t.y===e.y}function Ea(t,e,i,r){const n=Aa(Sa(t,e,i)),a=Aa(Sa(t,e,r)),s=Aa(Sa(i,r,t)),o=Aa(Sa(i,r,e));return n!==a&&s!==o||(!(0!==n||!Ta(t,i,e))||(!(0!==a||!Ta(t,r,e))||(!(0!==s||!Ta(i,t,r))||!(0!==o||!Ta(i,e,r)))))}function Ta(t,e,i){return e.x<=Math.max(t.x,i.x)&&e.x>=Math.min(t.x,i.x)&&e.y<=Math.max(t.y,i.y)&&e.y>=Math.min(t.y,i.y)}function Aa(t){return t>0?1:t<0?-1:0}function Ra(t,e){return Sa(t.prev,t,t.next)<0?Sa(t,e,t.next)>=0&&Sa(t,t.prev,e)>=0:Sa(t,e,t.prev)<0||Sa(t,t.next,e)<0}function Ca(t,e){const i=La(t.i,t.x,t.y),r=La(e.i,e.x,e.y),n=t.next,a=e.prev;return t.next=e,e.prev=t,i.next=n,n.prev=i,r.next=i,i.prev=r,a.next=r,r.prev=a,r}function Pa(t,e,i,r){const n=La(t,e,i);return r?(n.next=r.next,n.prev=r,r.next.prev=n,r.next=n):(n.prev=n,n.next=n),n}function Ia(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function La(t,e,i){return{i:t,x:e,y:i,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}class Da{static triangulate(t,e,i=2){return oa(t,e,i)}}class Ua{static area(t){const e=t.length;let i=0;for(let r=e-1,n=0;n<e;r=n++)i+=t[r].x*t[n].y-t[n].x*t[r].y;return.5*i}static isClockWise(t){return Ua.area(t)<0}static triangulateShape(t,e){const i=[],r=[],n=[];Na(t),Fa(i,t);let a=t.length;e.forEach(Na);for(let o=0;o<e.length;o++)r.push(a),a+=e[o].length,Fa(i,e[o]);const s=Da.triangulate(i,r);for(let o=0;o<s.length;o+=3)n.push(s.slice(o,o+3));return n}}function Na(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Fa(t,e){for(let i=0;i<e.length;i++)t.push(e[i].x),t.push(e[i].y)}class Oa extends Dr{constructor(t=new sa([new ve(.5,.5),new ve(-.5,.5),new ve(-.5,-.5),new ve(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const i=this,r=[],n=[];for(let s=0,o=t.length;s<o;s++){a(t[s])}function a(t){const a=[],s=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1,l=void 0!==e.depth?e.depth:1;let c=void 0===e.bevelEnabled||e.bevelEnabled,h=void 0!==e.bevelThickness?e.bevelThickness:.2,d=void 0!==e.bevelSize?e.bevelSize:h-.1,u=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const _=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:za;let f,g,w,v,b,y=!1;_&&(f=_.getSpacedPoints(o),y=!0,c=!1,g=_.computeFrenetFrames(o,!1),w=new Xe,v=new Xe,b=new Xe),c||(p=0,h=0,d=0,u=0);const x=t.extractPoints(s);let S=x.shape;const M=x.holes;if(!Ua.isClockWise(S)){S=S.reverse();for(let t=0,e=M.length;t<e;t++){const e=M[t];Ua.isClockWise(e)&&(M[t]=e.reverse())}}function E(t){const e=1e-10*1e-10;let i=t[0];for(let r=1;r<=t.length;r++){const n=r%t.length,a=t[n],s=a.x-i.x,o=a.y-i.y,l=s*s+o*o,c=Math.max(Math.abs(a.x),Math.abs(a.y),Math.abs(i.x),Math.abs(i.y));l<=e*c*c?(t.splice(n,1),r--):i=a}}E(S),M.forEach(E);const T=M.length,A=S;for(let e=0;e<T;e++){const t=M[e];S=S.concat(t)}function R(t,e,i){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().addScaledVector(e,i)}const C=S.length;function P(t,e,i){let r,n,a;const s=t.x-e.x,o=t.y-e.y,l=i.x-t.x,c=i.y-t.y,h=s*s+o*o,d=s*c-o*l;if(Math.abs(d)>Number.EPSILON){const d=Math.sqrt(h),u=Math.sqrt(l*l+c*c),p=e.x-o/d,_=e.y+s/d,m=((i.x-c/u-p)*c-(i.y+l/u-_)*l)/(s*c-o*l);r=p+s*m-t.x,n=_+o*m-t.y;const f=r*r+n*n;if(f<=2)return new ve(r,n);a=Math.sqrt(f/2)}else{let t=!1;s>Number.EPSILON?l>Number.EPSILON&&(t=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(c)&&(t=!0),t?(r=-o,n=s,a=Math.sqrt(h)):(r=s,n=o,a=Math.sqrt(h/2))}return new ve(r/a,n/a)}const I=[];for(let e=0,i=A.length,r=i-1,n=e+1;e<i;e++,r++,n++)r===i&&(r=0),n===i&&(n=0),I[e]=P(A[e],A[r],A[n]);const L=[];let D,U=I.concat();for(let e=0,i=T;e<i;e++){const t=M[e];D=[];for(let e=0,i=t.length,r=i-1,n=e+1;e<i;e++,r++,n++)r===i&&(r=0),n===i&&(n=0),D[e]=P(t[e],t[r],t[n]);L.push(D),U=U.concat(D)}const N=[],F=[];for(let e=0;e<p;e++){const t=e/p,i=h*Math.cos(t*Math.PI/2),r=d*Math.sin(t*Math.PI/2)+u;for(let e=0,n=A.length;e<n;e++){const n=R(A[e],I[e],r);H(n.x,n.y,-i),0==t&&N.push(n)}for(let e=0,n=T;e<n;e++){const n=M[e];D=L[e];const a=[];for(let e=0,s=n.length;e<s;e++){const s=R(n[e],D[e],r);H(s.x,s.y,-i),0==t&&a.push(s)}0==t&&F.push(a)}}const O=Ua.triangulateShape(N,F),z=O.length,B=d+u;for(let e=0;e<C;e++){const t=c?R(S[e],U[e],B):S[e];y?(v.copy(g.normals[0]).multiplyScalar(t.x),w.copy(g.binormals[0]).multiplyScalar(t.y),b.copy(f[0]).add(v).add(w),H(b.x,b.y,b.z)):H(t.x,t.y,0)}for(let e=1;e<=o;e++)for(let t=0;t<C;t++){const i=c?R(S[t],U[t],B):S[t];y?(v.copy(g.normals[e]).multiplyScalar(i.x),w.copy(g.binormals[e]).multiplyScalar(i.y),b.copy(f[e]).add(v).add(w),H(b.x,b.y,b.z)):H(i.x,i.y,l/o*e)}for(let e=p-1;e>=0;e--){const t=e/p,i=h*Math.cos(t*Math.PI/2),r=d*Math.sin(t*Math.PI/2)+u;for(let e=0,n=A.length;e<n;e++){const t=R(A[e],I[e],r);H(t.x,t.y,l+i)}for(let e=0,n=M.length;e<n;e++){const t=M[e];D=L[e];for(let e=0,n=t.length;e<n;e++){const n=R(t[e],D[e],r);y?H(n.x,n.y+f[o-1].y,f[o-1].x+i):H(n.x,n.y,l+i)}}}function k(t,e){let i=t.length;for(;--i>=0;){const r=i;let n=i-1;n<0&&(n=t.length-1);for(let t=0,i=o+2*p;t<i;t++){const i=C*t,a=C*(t+1);G(e+r+i,e+n+i,e+n+a,e+r+a)}}}function H(t,e,i){a.push(t),a.push(e),a.push(i)}function V(t,e,n){j(t),j(e),j(n);const a=r.length/3,s=m.generateTopUV(i,r,a-3,a-2,a-1);W(s[0]),W(s[1]),W(s[2])}function G(t,e,n,a){j(t),j(e),j(a),j(e),j(n),j(a);const s=r.length/3,o=m.generateSideWallUV(i,r,s-6,s-3,s-2,s-1);W(o[0]),W(o[1]),W(o[3]),W(o[1]),W(o[2]),W(o[3])}function j(t){r.push(a[3*t+0]),r.push(a[3*t+1]),r.push(a[3*t+2])}function W(t){n.push(t.x),n.push(t.y)}!function(){const t=r.length/3;if(c){let t=0,e=C*t;for(let i=0;i<z;i++){const t=O[i];V(t[2]+e,t[1]+e,t[0]+e)}t=o+2*p,e=C*t;for(let i=0;i<z;i++){const t=O[i];V(t[0]+e,t[1]+e,t[2]+e)}}else{for(let t=0;t<z;t++){const e=O[t];V(e[2],e[1],e[0])}for(let t=0;t<z;t++){const e=O[t];V(e[0]+C*o,e[1]+C*o,e[2]+C*o)}}i.addGroup(t,r.length/3-t,0)}(),function(){const t=r.length/3;let e=0;k(A,e),e+=A.length;for(let i=0,r=M.length;i<r;i++){const t=M[i];k(t,e),e+=t.length}i.addGroup(t,r.length/3-t,1)}()}this.setAttribute("position",new Er(r,3)),this.setAttribute("uv",new Er(n,2)),this.computeVertexNormals()}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return function(t,e,i){if(i.shapes=[],Array.isArray(t))for(let r=0,n=t.length;r<n;r++){const e=t[r];i.shapes.push(e.uuid)}else i.shapes.push(t.uuid);i.options=Object.assign({},e),void 0!==e.extrudePath&&(i.options.extrudePath=e.extrudePath.toJSON());return i}(this.parameters.shapes,this.parameters.options,t)}static fromJSON(t,e){const i=[];for(let n=0,a=t.shapes.length;n<a;n++){const r=e[t.shapes[n]];i.push(r)}const r=t.options.extrudePath;return void 0!==r&&(t.options.extrudePath=(new ia[r.type]).fromJSON(r)),new Oa(i,t.options)}}const za={generateTopUV:function(t,e,i,r,n){const a=e[3*i],s=e[3*i+1],o=e[3*r],l=e[3*r+1],c=e[3*n],h=e[3*n+1];return[new ve(a,s),new ve(o,l),new ve(c,h)]},generateSideWallUV:function(t,e,i,r,n,a){const s=e[3*i],o=e[3*i+1],l=e[3*i+2],c=e[3*r],h=e[3*r+1],d=e[3*r+2],u=e[3*n],p=e[3*n+1],_=e[3*n+2],m=e[3*a],f=e[3*a+1],g=e[3*a+2];return Math.abs(o-h)<Math.abs(s-c)?[new ve(s,1-l),new ve(c,1-d),new ve(u,1-_),new ve(m,1-g)]:[new ve(o,1-l),new ve(h,1-d),new ve(p,1-_),new ve(f,1-g)]}};class Ba extends Dr{constructor(t=1,e=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:r};const n=t/2,a=e/2,s=Math.floor(i),o=Math.floor(r),l=s+1,c=o+1,h=t/s,d=e/o,u=[],p=[],_=[],m=[];for(let f=0;f<c;f++){const t=f*d-a;for(let e=0;e<l;e++){const i=e*h-n;p.push(i,-t,0),_.push(0,0,1),m.push(e/s),m.push(1-f/o)}}for(let f=0;f<o;f++)for(let t=0;t<s;t++){const e=t+l*f,i=t+l*(f+1),r=t+1+l*(f+1),n=t+1+l*f;u.push(e,i,n),u.push(i,r,n)}this.setIndex(u),this.setAttribute("position",new Er(p,3)),this.setAttribute("normal",new Er(_,3)),this.setAttribute("uv",new Er(m,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ba(t.width,t.height,t.widthSegments,t.heightSegments)}}class ka extends Dr{constructor(t=1,e=32,i=16,r=0,n=2*Math.PI,a=0,s=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:r,phiLength:n,thetaStart:a,thetaLength:s},e=Math.max(3,Math.floor(e)),i=Math.max(2,Math.floor(i));const o=Math.min(a+s,Math.PI);let l=0;const c=[],h=new Xe,d=new Xe,u=[],p=[],_=[],m=[];for(let f=0;f<=i;f++){const u=[],g=f/i;let w=0;0===f&&0===a?w=.5/e:f===i&&o===Math.PI&&(w=-.5/e);for(let i=0;i<=e;i++){const o=i/e;h.x=-t*Math.cos(r+o*n)*Math.sin(a+g*s),h.y=t*Math.cos(a+g*s),h.z=t*Math.sin(r+o*n)*Math.sin(a+g*s),p.push(h.x,h.y,h.z),d.copy(h).normalize(),_.push(d.x,d.y,d.z),m.push(o+w,1-g),u.push(l++)}c.push(u)}for(let f=0;f<i;f++)for(let t=0;t<e;t++){const e=c[f][t+1],r=c[f][t],n=c[f+1][t],s=c[f+1][t+1];(0!==f||a>0)&&u.push(e,r,s),(f!==i-1||o<Math.PI)&&u.push(r,n,s)}this.setIndex(u),this.setAttribute("position",new Er(p,3)),this.setAttribute("normal",new Er(_,3)),this.setAttribute("uv",new Er(m,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ka(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Ha extends gr{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new _r(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _r(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Li,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Va extends gr{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Ga extends gr{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const ja={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class Wa{constructor(t,e,i){const r=this;let n,a=!1,s=0,o=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(t){o++,!1===a&&void 0!==r.onStart&&r.onStart(t,s,o),a=!0},this.itemEnd=function(t){s++,void 0!==r.onProgress&&r.onProgress(t,s,o),s===o&&(a=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(t){void 0!==r.onError&&r.onError(t)},this.resolveURL=function(t){return n?n(t):t},this.setURLModifier=function(t){return n=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,i=l.length;e<i;e+=2){const i=l[e],r=l[e+1];if(i.global&&(i.lastIndex=0),i.test(t))return r}return null}}}const Xa=new Wa;class qa{constructor(t){this.manager=void 0!==t?t:Xa,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const i=this;return new Promise((function(r,n){i.load(t,r,e,n)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}qa.DEFAULT_MATERIAL_NAME="__DEFAULT";class Ya extends qa{constructor(t){super(t)}load(t,e,i,r){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const n=this,a=ja.get(t);if(void 0!==a)return n.manager.itemStart(t),setTimeout((function(){e&&e(a),n.manager.itemEnd(t)}),0),a;const s=Se("img");function o(){c(),ja.add(t,this),e&&e(this),n.manager.itemEnd(t)}function l(e){c(),r&&r(e),n.manager.itemError(t),n.manager.itemEnd(t)}function c(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==t.slice(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),n.manager.itemStart(t),s.src=t,s}}class Ja extends qa{constructor(t){super(t)}load(t,e,i,r){const n=new Be,a=new Ya(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,(function(t){n.image=t,n.needsUpdate=!0,void 0!==e&&e(n)}),i,r),n}}class Ka extends Ji{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new _r(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),void 0!==this.target&&(e.object.target=this.target.uuid),e}}class Za extends Ka{constructor(t,e,i){super(t,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Ji.DEFAULT_UP),this.updateMatrix(),this.groundColor=new _r(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const $a=new xi,Qa=new Xe,ts=new Xe;class es{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ve(512,512),this.map=null,this.mapPass=null,this.matrix=new xi,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new bn,this._frameExtents=new ve(1,1),this._viewportCount=1,this._viewports=[new ke(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,i=this.matrix;Qa.setFromMatrixPosition(t.matrixWorld),e.position.copy(Qa),ts.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(ts),e.updateMatrixWorld(),$a.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix($a),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply($a)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 1!==this.intensity&&(t.intensity=this.intensity),0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class is extends Qr{constructor(t=-1,e=1,i=1,r=-1,n=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=r,this.near=n,this.far=a,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,i,r,n,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=r,this.view.width=n,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let n=i-t,a=i+t,s=r+e,o=r-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;n+=t*this.view.offsetX,a=n+t*this.view.width,s-=e*this.view.offsetY,o=s-e*this.view.height}this.projectionMatrix.makeOrthographic(n,a,s,o,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}class rs extends es{constructor(){super(new is(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class ns extends Ka{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Ji.DEFAULT_UP),this.updateMatrix(),this.target=new Ji,this.shadow=new rs}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class as{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new Xe)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const i=t.x,r=t.y,n=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.282095),e.addScaledVector(a[1],.488603*r),e.addScaledVector(a[2],.488603*n),e.addScaledVector(a[3],.488603*i),e.addScaledVector(a[4],i*r*1.092548),e.addScaledVector(a[5],r*n*1.092548),e.addScaledVector(a[6],.315392*(3*n*n-1)),e.addScaledVector(a[7],i*n*1.092548),e.addScaledVector(a[8],.546274*(i*i-r*r)),e}getIrradianceAt(t,e){const i=t.x,r=t.y,n=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.886227),e.addScaledVector(a[1],1.023328*r),e.addScaledVector(a[2],1.023328*n),e.addScaledVector(a[3],1.023328*i),e.addScaledVector(a[4],.858086*i*r),e.addScaledVector(a[5],.858086*r*n),e.addScaledVector(a[6],.743125*n*n-.247708),e.addScaledVector(a[7],.858086*i*n),e.addScaledVector(a[8],.429043*(i*i-r*r)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(t.coefficients[i],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let i=0;i<9;i++)this.coefficients[i].lerp(t.coefficients[i],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(t,e+3*r);return this}toArray(t=[],e=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(t,e+3*r);return t}static getBasisAt(t,e){const i=t.x,r=t.y,n=t.z;e[0]=.282095,e[1]=.488603*r,e[2]=.488603*n,e[3]=.488603*i,e[4]=1.092548*i*r,e[5]=1.092548*r*n,e[6]=.315392*(3*n*n-1),e[7]=1.092548*i*n,e[8]=.546274*(i*i-r*r)}}class ss extends Ka{constructor(t=new as,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class os extends nn{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t,this.index=0}}class ls{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=cs(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=cs();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function cs(){return performance.now()}class hs{constructor(t=1,e=0,i=0){this.radius=t,this.phi=e,this.theta=i}set(t,e,i){return this.radius=t,this.phi=e,this.theta=i,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=_e(this.phi,t,Math.PI-t),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,i){return this.radius=Math.sqrt(t*t+e*e+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,i),this.phi=Math.acos(_e(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class ds extends Dn{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],i=new Dr;i.setAttribute("position",new Er(e,3)),i.setAttribute("color",new Er([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));super(i,new yn({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(t,e,i){const r=new _r,n=this.geometry.attributes.color.array;return r.set(t),r.toArray(n,0),r.toArray(n,3),r.set(e),r.toArray(n,6),r.toArray(n,9),r.set(i),r.toArray(n,12),r.toArray(n,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class us extends ce{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(t){void 0!==t?(null!==this.domElement&&this.disconnect(),this.domElement=t):console.warn("THREE.Controls: connect() now requires an element.")}disconnect(){}dispose(){}update(){}}function ps(t,e,i,r){const n=function(t){switch(t){case Z:case $:return{byteLength:1,components:1};case tt:case Q:case nt:return{byteLength:2,components:1};case at:case st:return{byteLength:2,components:4};case it:case et:case rt:return{byteLength:4,components:1};case lt:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${t}.`)}(r);switch(i){case 1021:case 1024:return t*e;case 1025:return t*e*2;case 1028:case ut:return t*e/n.components*n.byteLength;case 1030:case pt:return t*e*2/n.components*n.byteLength;case 1022:return t*e*3/n.components*n.byteLength;case ct:case _t:return t*e*4/n.components*n.byteLength;case mt:case ft:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*8;case gt:case wt:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case bt:case xt:return Math.max(t,16)*Math.max(e,8)/4;case vt:case yt:return Math.max(t,8)*Math.max(e,8)/2;case St:case Mt:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*8;case Et:case Tt:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case At:return Math.floor((t+4)/5)*Math.floor((e+3)/4)*16;case Rt:return Math.floor((t+4)/5)*Math.floor((e+4)/5)*16;case Ct:return Math.floor((t+5)/6)*Math.floor((e+4)/5)*16;case Pt:return Math.floor((t+5)/6)*Math.floor((e+5)/6)*16;case It:return Math.floor((t+7)/8)*Math.floor((e+4)/5)*16;case Lt:return Math.floor((t+7)/8)*Math.floor((e+5)/6)*16;case Dt:return Math.floor((t+7)/8)*Math.floor((e+7)/8)*16;case Ut:return Math.floor((t+9)/10)*Math.floor((e+4)/5)*16;case Nt:return Math.floor((t+9)/10)*Math.floor((e+5)/6)*16;case Ft:return Math.floor((t+9)/10)*Math.floor((e+7)/8)*16;case Ot:return Math.floor((t+9)/10)*Math.floor((e+9)/10)*16;case zt:return Math.floor((t+11)/12)*Math.floor((e+9)/10)*16;case Bt:return Math.floor((t+11)/12)*Math.floor((e+11)/12)*16;case kt:case Ht:case Vt:return Math.ceil(t/4)*Math.ceil(e/4)*16;case 36283:case Gt:return Math.ceil(t/4)*Math.ceil(e/4)*8;case jt:case Wt:return Math.ceil(t/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${i} format.`)}
/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
function _s(){let t=null,e=!1,i=null,r=null;function n(e,a){i(e,a),r=t.requestAnimationFrame(n)}return{start:function(){!0!==e&&null!==i&&(r=t.requestAnimationFrame(n),e=!0)},stop:function(){t.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(t){i=t},setContext:function(e){t=e}}}function ms(t){const e=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e.get(t)},remove:function(i){i.isInterleavedBufferAttribute&&(i=i.data);const r=e.get(i);r&&(t.deleteBuffer(r.buffer),e.delete(i))},update:function(i,r){if(i.isInterleavedBufferAttribute&&(i=i.data),i.isGLBufferAttribute){const t=e.get(i);return void((!t||t.version<i.version)&&e.set(i,{buffer:i.buffer,type:i.type,bytesPerElement:i.elementSize,version:i.version}))}const n=e.get(i);if(void 0===n)e.set(i,function(e,i){const r=e.array,n=e.usage,a=r.byteLength,s=t.createBuffer();let o;if(t.bindBuffer(i,s),t.bufferData(i,r,n),e.onUploadCallback(),r instanceof Float32Array)o=t.FLOAT;else if(r instanceof Uint16Array)o=e.isFloat16BufferAttribute?t.HALF_FLOAT:t.UNSIGNED_SHORT;else if(r instanceof Int16Array)o=t.SHORT;else if(r instanceof Uint32Array)o=t.UNSIGNED_INT;else if(r instanceof Int32Array)o=t.INT;else if(r instanceof Int8Array)o=t.BYTE;else if(r instanceof Uint8Array)o=t.UNSIGNED_BYTE;else{if(!(r instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+r);o=t.UNSIGNED_BYTE}return{buffer:s,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version,size:a}}(i,r));else if(n.version<i.version){if(n.size!==i.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function(e,i,r){const n=i.array,a=i.updateRanges;if(t.bindBuffer(r,e),0===a.length)t.bufferSubData(r,0,n);else{a.sort(((t,e)=>t.start-e.start));let e=0;for(let t=1;t<a.length;t++){const i=a[e],r=a[t];r.start<=i.start+i.count+1?i.count=Math.max(i.count,r.start+r.count-i.start):(++e,a[e]=r)}a.length=e+1;for(let i=0,s=a.length;i<s;i++){const e=a[i];t.bufferSubData(r,e.start*n.BYTES_PER_ELEMENT,n,e.start,e.count)}i.clearUpdateRanges()}i.onUploadCallback()}(n.buffer,i,r),n.version=i.version}}}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:i}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=i);const fs={alphahash_fragment:"#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\t#ifdef ALPHA_TO_COVERAGE\n\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\tif ( diffuseColor.a < alphaTest ) discard;\n\t#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n\t#if ! defined( GL_ANGLE_multi_draw )\n\t#define gl_DrawID _gl_DrawID\n\tuniform int _gl_DrawID;\n\t#endif\n\tuniform highp sampler2D batchingTexture;\n\tuniform highp usampler2D batchingIdTexture;\n\tmat4 getBatchingMatrix( const in float i ) {\n\t\tint size = textureSize( batchingTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n\tfloat getIndirectIndex( const in int i ) {\n\t\tint size = textureSize( batchingIdTexture, 0 ).x;\n\t\tint x = i % size;\n\t\tint y = i / size;\n\t\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\n\t}\n#endif\n#ifdef USE_BATCHING_COLOR\n\tuniform sampler2D batchingColorTexture;\n\tvec3 getBatchingColor( const in float i ) {\n\t\tint size = textureSize( batchingColorTexture, 0 ).x;\n\t\tint j = int( i );\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\n\t}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#ifdef ALPHA_TO_COVERAGE\n\t\tfloat distanceToPlane, distanceGradient;\n\t\tfloat clipOpacity = 1.0;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\tif ( clipOpacity == 0.0 ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tfloat unionClipOpacity = 1.0;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\t\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tclipOpacity *= 1.0 - unionClipOpacity;\n\t\t#endif\n\t\tdiffuseColor.a *= clipOpacity;\n\t\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tbool clipped = true;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tif ( clipped ) discard;\n\t\t#endif\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif\n#ifdef USE_BATCHING_COLOR\n\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\n\tvColor.xyz *= batchingColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n\tmat3 bm = mat3( batchingMatrix );\n\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n\ttransformedNormal = bm * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = bm * transformedTangent;\n\t#endif\n#endif\n#ifdef USE_INSTANCING\n\tmat3 im = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n\ttransformedNormal = im * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = im * transformedTangent;\n\t#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\n\t\temissiveColor = sRGBTransferEOTF( emissiveColor );\n\t#endif\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"vec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferEOTF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform mat3 envMapRotation;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif ( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_DISPERSION\n\tmaterial.dispersion = dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tif( material.anisotropy == 0.0 ) {\n\t\tanisotropyV = vec2( 1.0, 0.0 );\n\t} else {\n\t\tanisotropyV /= material.anisotropy;\n\t\tmaterial.anisotropy = saturate( material.anisotropy );\n\t}\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\tfloat dispersion;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometryNormal;\n\t\tvec3 viewDir = geometryViewDir;\n\t\tvec3 position = geometryPosition;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvFragDepth = 1.0 + gl_Position.w;\n\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphinstance_vertex:"#ifdef USE_INSTANCING_MORPH\n\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n\t}\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_INSTANCING_MORPH\n\t\tuniform float morphTargetBaseInfluence;\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t#endif\n\tuniform sampler2DArray morphTargetsTexture;\n\tuniform ivec2 morphTargetsTextureSize;\n\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t}\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\nconst float Inv255 = 1. / 255.;\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\nvec4 packDepthToRGBA( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec4( 0., 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec4( 1., 1., 1., 1. );\n\tfloat vuf;\n\tfloat af = modf( v * PackFactors.a, vuf );\n\tfloat bf = modf( vuf * ShiftRight8, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\n}\nvec3 packDepthToRGB( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec3( 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec3( 1., 1., 1. );\n\tfloat vuf;\n\tfloat bf = modf( v * PackFactors.b, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\n}\nvec2 packDepthToRG( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec2( 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec2( 1., 1. );\n\tfloat vuf;\n\tfloat gf = modf( v * 256., vuf );\n\treturn vec2( vuf * Inv255, gf );\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors4 );\n}\nfloat unpackRGBToDepth( const in vec3 v ) {\n\treturn dot( v, UnpackFactors3 );\n}\nfloat unpackRGToDepth( const in vec2 v ) {\n\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\n}\nvec4 pack2HalfToRGBA( const in vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( const in vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n\tmvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tfloat shadow = 1.0;\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\t\n\t\tfloat lightToPositionLength = length( lightToPosition );\n\t\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\n\t\t\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\t\tdp += shadowBias;\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\t\tshadow = (\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t\t) * ( 1.0 / 9.0 );\n\t\t\t#else\n\t\t\t\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tint size = textureSize( boneTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 CineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n\tvec3( 0.6274, 0.0691, 0.0164 ),\n\tvec3( 0.3293, 0.9195, 0.0880 ),\n\tvec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n\tvec3 x2 = x * x;\n\tvec3 x4 = x2 * x2;\n\treturn + 15.5 * x4 * x2\n\t\t- 40.14 * x4 * x\n\t\t+ 31.96 * x4\n\t\t- 6.868 * x2 * x\n\t\t+ 0.4298 * x2\n\t\t+ 0.1191 * x\n\t\t- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n\tconst mat3 AgXInsetMatrix = mat3(\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n\t);\n\tconst mat3 AgXOutsetMatrix = mat3(\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n\t);\n\tconst float AgxMinEv = - 12.47393;\tconst float AgxMaxEv = 4.026069;\n\tcolor *= toneMappingExposure;\n\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n\tcolor = AgXInsetMatrix * color;\n\tcolor = max( color, 1e-10 );\tcolor = log2( color );\n\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n\tcolor = clamp( color, 0.0, 1.0 );\n\tcolor = agxDefaultContrastApprox( color );\n\tcolor = AgXOutsetMatrix * color;\n\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n\tcolor = clamp( color, 0.0, 1.0 );\n\treturn color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n\tconst float StartCompression = 0.8 - 0.04;\n\tconst float Desaturation = 0.15;\n\tcolor *= toneMappingExposure;\n\tfloat x = min( color.r, min( color.g, color.b ) );\n\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n\tcolor -= offset;\n\tfloat peak = max( color.r, max( color.g, color.b ) );\n\tif ( peak < StartCompression ) return color;\n\tfloat d = 1. - StartCompression;\n\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\n\tcolor *= newPeak / peak;\n\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\n\treturn mix( color, vec3( newPeak ), g );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec4 transmittedLight;\n\t\tvec3 transmittance;\n\t\t#ifdef USE_DISPERSION\n\t\t\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\n\t\t\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\n\t\t\tfor ( int i = 0; i < 3; i ++ ) {\n\t\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\n\t\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\t\trefractionCoords += 1.0;\n\t\t\t\trefractionCoords /= 2.0;\n\t\t\t\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\n\t\t\t\ttransmittedLight[ i ] = transmissionSample[ i ];\n\t\t\t\ttransmittedLight.a += transmissionSample.a;\n\t\t\t\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\n\t\t\t}\n\t\t\ttransmittedLight.a /= 3.0;\n\t\t#else\n\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\trefractionCoords += 1.0;\n\t\t\trefractionCoords /= 2.0;\n\t\t\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\t\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\t#endif\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_BATCHING\n\t\tworldPosition = batchingMatrix * worldPosition;\n\t#endif\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#elif DEPTH_PACKING == 3202\n\t\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\n\t#elif DEPTH_PACKING == 3203\n\t\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n\tuniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix[ 3 ];\n\tvec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}"},gs={common:{diffuse:{value:new _r(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new be},alphaMap:{value:null},alphaMapTransform:{value:new be},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new be}},envmap:{envMap:{value:null},envMapRotation:{value:new be},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new be}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new be}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new be},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new be},normalScale:{value:new ve(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new be},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new be}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new be}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new be}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new _r(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new _r(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new be},alphaTest:{value:0},uvTransform:{value:new be}},sprite:{diffuse:{value:new _r(16777215)},opacity:{value:1},center:{value:new ve(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new be},alphaMap:{value:null},alphaMapTransform:{value:new be},alphaTest:{value:0}}},ws={basic:{uniforms:Jr([gs.common,gs.specularmap,gs.envmap,gs.aomap,gs.lightmap,gs.fog]),vertexShader:fs.meshbasic_vert,fragmentShader:fs.meshbasic_frag},lambert:{uniforms:Jr([gs.common,gs.specularmap,gs.envmap,gs.aomap,gs.lightmap,gs.emissivemap,gs.bumpmap,gs.normalmap,gs.displacementmap,gs.fog,gs.lights,{emissive:{value:new _r(0)}}]),vertexShader:fs.meshlambert_vert,fragmentShader:fs.meshlambert_frag},phong:{uniforms:Jr([gs.common,gs.specularmap,gs.envmap,gs.aomap,gs.lightmap,gs.emissivemap,gs.bumpmap,gs.normalmap,gs.displacementmap,gs.fog,gs.lights,{emissive:{value:new _r(0)},specular:{value:new _r(1118481)},shininess:{value:30}}]),vertexShader:fs.meshphong_vert,fragmentShader:fs.meshphong_frag},standard:{uniforms:Jr([gs.common,gs.envmap,gs.aomap,gs.lightmap,gs.emissivemap,gs.bumpmap,gs.normalmap,gs.displacementmap,gs.roughnessmap,gs.metalnessmap,gs.fog,gs.lights,{emissive:{value:new _r(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:fs.meshphysical_vert,fragmentShader:fs.meshphysical_frag},toon:{uniforms:Jr([gs.common,gs.aomap,gs.lightmap,gs.emissivemap,gs.bumpmap,gs.normalmap,gs.displacementmap,gs.gradientmap,gs.fog,gs.lights,{emissive:{value:new _r(0)}}]),vertexShader:fs.meshtoon_vert,fragmentShader:fs.meshtoon_frag},matcap:{uniforms:Jr([gs.common,gs.bumpmap,gs.normalmap,gs.displacementmap,gs.fog,{matcap:{value:null}}]),vertexShader:fs.meshmatcap_vert,fragmentShader:fs.meshmatcap_frag},points:{uniforms:Jr([gs.points,gs.fog]),vertexShader:fs.points_vert,fragmentShader:fs.points_frag},dashed:{uniforms:Jr([gs.common,gs.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:fs.linedashed_vert,fragmentShader:fs.linedashed_frag},depth:{uniforms:Jr([gs.common,gs.displacementmap]),vertexShader:fs.depth_vert,fragmentShader:fs.depth_frag},normal:{uniforms:Jr([gs.common,gs.bumpmap,gs.normalmap,gs.displacementmap,{opacity:{value:1}}]),vertexShader:fs.meshnormal_vert,fragmentShader:fs.meshnormal_frag},sprite:{uniforms:Jr([gs.sprite,gs.fog]),vertexShader:fs.sprite_vert,fragmentShader:fs.sprite_frag},background:{uniforms:{uvTransform:{value:new be},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:fs.background_vert,fragmentShader:fs.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new be}},vertexShader:fs.backgroundCube_vert,fragmentShader:fs.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:fs.cube_vert,fragmentShader:fs.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:fs.equirect_vert,fragmentShader:fs.equirect_frag},distanceRGBA:{uniforms:Jr([gs.common,gs.displacementmap,{referencePosition:{value:new Xe},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:fs.distanceRGBA_vert,fragmentShader:fs.distanceRGBA_frag},shadow:{uniforms:Jr([gs.lights,gs.fog,{color:{value:new _r(0)},opacity:{value:1}}]),vertexShader:fs.shadow_vert,fragmentShader:fs.shadow_frag}};ws.physical={uniforms:Jr([ws.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new be},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new be},clearcoatNormalScale:{value:new ve(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new be},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new be},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new be},sheen:{value:0},sheenColor:{value:new _r(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new be},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new be},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new be},transmissionSamplerSize:{value:new ve},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new be},attenuationDistance:{value:0},attenuationColor:{value:new _r(0)},specularColor:{value:new _r(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new be},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new be},anisotropyVector:{value:new ve},anisotropyMap:{value:null},anisotropyMapTransform:{value:new be}}]),vertexShader:fs.meshphysical_vert,fragmentShader:fs.meshphysical_frag};const vs={r:0,b:0,g:0},bs=new Li,ys=new xi;function xs(t,e,i,r,n,a,s){const o=new _r(0);let l,c,h=!0===a?0:1,d=null,u=0,p=null;function _(t){let r=!0===t.isScene?t.background:null;if(r&&r.isTexture){r=(t.backgroundBlurriness>0?i:e).get(r)}return r}function m(e,i){e.getRGB(vs,Kr(t)),r.buffers.color.setClear(vs.r,vs.g,vs.b,i,s)}return{getClearColor:function(){return o},setClearColor:function(t,e=1){o.set(t),h=e,m(o,h)},getClearAlpha:function(){return h},setClearAlpha:function(t){h=t,m(o,h)},render:function(e){let i=!1;const n=_(e);null===n?m(o,h):n&&n.isColor&&(m(n,1),i=!0);const a=t.xr.getEnvironmentBlendMode();"additive"===a?r.buffers.color.setClear(0,0,0,1,s):"alpha-blend"===a&&r.buffers.color.setClear(0,0,0,0,s),(t.autoClear||i)&&(r.buffers.depth.setTest(!0),r.buffers.depth.setMask(!0),r.buffers.color.setMask(!0),t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil))},addToRenderList:function(e,i){const r=_(i);r&&(r.isCubeTexture||r.mapping===H)?(void 0===c&&(c=new Wr(new qr(1,1,1),new $r({name:"BackgroundCubeMaterial",uniforms:Yr(ws.backgroundCube.uniforms),vertexShader:ws.backgroundCube.vertexShader,fragmentShader:ws.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(t,e,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(c)),bs.copy(i.backgroundRotation),bs.x*=-1,bs.y*=-1,bs.z*=-1,r.isCubeTexture&&!1===r.isRenderTargetTexture&&(bs.y*=-1,bs.z*=-1),c.material.uniforms.envMap.value=r,c.material.uniforms.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,c.material.uniforms.backgroundBlurriness.value=i.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=i.backgroundIntensity,c.material.uniforms.backgroundRotation.value.setFromMatrix4(ys.makeRotationFromEuler(bs)),c.material.toneMapped=Pe.getTransfer(r.colorSpace)!==Kt,d===r&&u===r.version&&p===t.toneMapping||(c.material.needsUpdate=!0,d=r,u=r.version,p=t.toneMapping),c.layers.enableAll(),e.unshift(c,c.geometry,c.material,0,0,null)):r&&r.isTexture&&(void 0===l&&(l=new Wr(new Ba(2,2),new $r({name:"BackgroundMaterial",uniforms:Yr(ws.background.uniforms),vertexShader:ws.background.vertexShader,fragmentShader:ws.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(l)),l.material.uniforms.t2D.value=r,l.material.uniforms.backgroundIntensity.value=i.backgroundIntensity,l.material.toneMapped=Pe.getTransfer(r.colorSpace)!==Kt,!0===r.matrixAutoUpdate&&r.updateMatrix(),l.material.uniforms.uvTransform.value.copy(r.matrix),d===r&&u===r.version&&p===t.toneMapping||(l.material.needsUpdate=!0,d=r,u=r.version,p=t.toneMapping),l.layers.enableAll(),e.unshift(l,l.geometry,l.material,0,0,null))},dispose:function(){void 0!==c&&(c.geometry.dispose(),c.material.dispose(),c=void 0),void 0!==l&&(l.geometry.dispose(),l.material.dispose(),l=void 0)}}}function Ss(t,e){const i=t.getParameter(t.MAX_VERTEX_ATTRIBS),r={},n=c(null);let a=n,s=!1;function o(e){return t.bindVertexArray(e)}function l(e){return t.deleteVertexArray(e)}function c(t){const e=[],r=[],n=[];for(let a=0;a<i;a++)e[a]=0,r[a]=0,n[a]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:r,attributeDivisors:n,object:t,attributes:{},index:null}}function h(){const t=a.newAttributes;for(let e=0,i=t.length;e<i;e++)t[e]=0}function d(t){u(t,0)}function u(e,i){const r=a.newAttributes,n=a.enabledAttributes,s=a.attributeDivisors;r[e]=1,0===n[e]&&(t.enableVertexAttribArray(e),n[e]=1),s[e]!==i&&(t.vertexAttribDivisor(e,i),s[e]=i)}function p(){const e=a.newAttributes,i=a.enabledAttributes;for(let r=0,n=i.length;r<n;r++)i[r]!==e[r]&&(t.disableVertexAttribArray(r),i[r]=0)}function _(e,i,r,n,a,s,o){!0===o?t.vertexAttribIPointer(e,i,r,a,s):t.vertexAttribPointer(e,i,r,n,a,s)}function m(){f(),s=!0,a!==n&&(a=n,o(a.object))}function f(){n.geometry=null,n.program=null,n.wireframe=!1}return{setup:function(i,n,l,m,f){let g=!1;const w=function(e,i,n){const a=!0===n.wireframe;let s=r[e.id];void 0===s&&(s={},r[e.id]=s);let o=s[i.id];void 0===o&&(o={},s[i.id]=o);let l=o[a];void 0===l&&(l=c(t.createVertexArray()),o[a]=l);return l}(m,l,n);a!==w&&(a=w,o(a.object)),g=function(t,e,i,r){const n=a.attributes,s=e.attributes;let o=0;const l=i.getAttributes();for(const a in l){if(l[a].location>=0){const e=n[a];let i=s[a];if(void 0===i&&("instanceMatrix"===a&&t.instanceMatrix&&(i=t.instanceMatrix),"instanceColor"===a&&t.instanceColor&&(i=t.instanceColor)),void 0===e)return!0;if(e.attribute!==i)return!0;if(i&&e.data!==i.data)return!0;o++}}return a.attributesNum!==o||a.index!==r}(i,m,l,f),g&&function(t,e,i,r){const n={},s=e.attributes;let o=0;const l=i.getAttributes();for(const a in l){if(l[a].location>=0){let e=s[a];void 0===e&&("instanceMatrix"===a&&t.instanceMatrix&&(e=t.instanceMatrix),"instanceColor"===a&&t.instanceColor&&(e=t.instanceColor));const i={};i.attribute=e,e&&e.data&&(i.data=e.data),n[a]=i,o++}}a.attributes=n,a.attributesNum=o,a.index=r}(i,m,l,f),null!==f&&e.update(f,t.ELEMENT_ARRAY_BUFFER),(g||s)&&(s=!1,function(i,r,n,a){h();const s=a.attributes,o=n.getAttributes(),l=r.defaultAttributeValues;for(const c in o){const r=o[c];if(r.location>=0){let n=s[c];if(void 0===n&&("instanceMatrix"===c&&i.instanceMatrix&&(n=i.instanceMatrix),"instanceColor"===c&&i.instanceColor&&(n=i.instanceColor)),void 0!==n){const s=n.normalized,o=n.itemSize,l=e.get(n);if(void 0===l)continue;const c=l.buffer,h=l.type,p=l.bytesPerElement,m=h===t.INT||h===t.UNSIGNED_INT||n.gpuType===et;if(n.isInterleavedBufferAttribute){const e=n.data,l=e.stride,f=n.offset;if(e.isInstancedInterleavedBuffer){for(let t=0;t<r.locationSize;t++)u(r.location+t,e.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=e.meshPerAttribute*e.count)}else for(let t=0;t<r.locationSize;t++)d(r.location+t);t.bindBuffer(t.ARRAY_BUFFER,c);for(let t=0;t<r.locationSize;t++)_(r.location+t,o/r.locationSize,h,s,l*p,(f+o/r.locationSize*t)*p,m)}else{if(n.isInstancedBufferAttribute){for(let t=0;t<r.locationSize;t++)u(r.location+t,n.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let t=0;t<r.locationSize;t++)d(r.location+t);t.bindBuffer(t.ARRAY_BUFFER,c);for(let t=0;t<r.locationSize;t++)_(r.location+t,o/r.locationSize,h,s,o*p,o/r.locationSize*t*p,m)}}else if(void 0!==l){const e=l[c];if(void 0!==e)switch(e.length){case 2:t.vertexAttrib2fv(r.location,e);break;case 3:t.vertexAttrib3fv(r.location,e);break;case 4:t.vertexAttrib4fv(r.location,e);break;default:t.vertexAttrib1fv(r.location,e)}}}}p()}(i,n,l,m),null!==f&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e.get(f).buffer))},reset:m,resetDefaultState:f,dispose:function(){m();for(const t in r){const e=r[t];for(const t in e){const i=e[t];for(const t in i)l(i[t].object),delete i[t];delete e[t]}delete r[t]}},releaseStatesOfGeometry:function(t){if(void 0===r[t.id])return;const e=r[t.id];for(const i in e){const t=e[i];for(const e in t)l(t[e].object),delete t[e];delete e[i]}delete r[t.id]},releaseStatesOfProgram:function(t){for(const e in r){const i=r[e];if(void 0===i[t.id])continue;const n=i[t.id];for(const t in n)l(n[t].object),delete n[t];delete i[t.id]}},initAttributes:h,enableAttribute:d,disableUnusedAttributes:p}}function Ms(t,e,i){let r;function n(e,n,a){0!==a&&(t.drawArraysInstanced(r,e,n,a),i.update(n,r,a))}this.setMode=function(t){r=t},this.render=function(e,n){t.drawArrays(r,e,n),i.update(n,r,1)},this.renderInstances=n,this.renderMultiDraw=function(t,n,a){if(0===a)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(r,t,0,n,0,a);let s=0;for(let e=0;e<a;e++)s+=n[e];i.update(s,r,1)},this.renderMultiDrawInstances=function(t,a,s,o){if(0===s)return;const l=e.get("WEBGL_multi_draw");if(null===l)for(let e=0;e<t.length;e++)n(t[e],a[e],o[e]);else{l.multiDrawArraysInstancedWEBGL(r,t,0,a,0,o,0,s);let e=0;for(let t=0;t<s;t++)e+=a[t]*o[t];i.update(e,r,1)}}}function Es(t,e,i,r){let n;function a(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let s=void 0!==i.precision?i.precision:"highp";const o=a(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);const l=!0===i.logarithmicDepthBuffer,c=!0===i.reverseDepthBuffer&&e.has("EXT_clip_control"),h=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),d=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS);return{isWebGL2:!0,getMaxAnisotropy:function(){if(void 0!==n)return n;if(!0===e.has("EXT_texture_filter_anisotropic")){const i=e.get("EXT_texture_filter_anisotropic");n=t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:a,textureFormatReadable:function(e){return e===ct||r.convert(e)===t.getParameter(t.IMPLEMENTATION_COLOR_READ_FORMAT)},textureTypeReadable:function(i){const n=i===nt&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(i!==Z&&r.convert(i)!==t.getParameter(t.IMPLEMENTATION_COLOR_READ_TYPE)&&i!==rt&&!n)},precision:s,logarithmicDepthBuffer:l,reverseDepthBuffer:c,maxTextures:h,maxVertexTextures:d,maxTextureSize:t.getParameter(t.MAX_TEXTURE_SIZE),maxCubemapSize:t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),maxAttributes:t.getParameter(t.MAX_VERTEX_ATTRIBS),maxVertexUniforms:t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),maxVaryings:t.getParameter(t.MAX_VARYING_VECTORS),maxFragmentUniforms:t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),vertexTextures:d>0,maxSamples:t.getParameter(t.MAX_SAMPLES)}}function Ts(t){const e=this;let i=null,r=0,n=!1,a=!1;const s=new gn,o=new be,l={value:null,needsUpdate:!1};function c(t,i,r,n){const a=null!==t?t.length:0;let c=null;if(0!==a){if(c=l.value,!0!==n||null===c){const e=r+4*a,n=i.matrixWorldInverse;o.getNormalMatrix(n),(null===c||c.length<e)&&(c=new Float32Array(e));for(let i=0,l=r;i!==a;++i,l+=4)s.copy(t[i]).applyMatrix4(n,o),s.normal.toArray(c,l),c[l+3]=s.constant}l.value=c,l.needsUpdate=!0}return e.numPlanes=a,e.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e){const i=0!==t.length||e||0!==r||n;return n=e,r=t.length,i},this.beginShadows=function(){a=!0,c(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(t,e){i=c(t,e,0)},this.setState=function(s,o,h){const d=s.clippingPlanes,u=s.clipIntersection,p=s.clipShadows,_=t.get(s);if(!n||null===d||0===d.length||a&&!p)a?c(null):function(){l.value!==i&&(l.value=i,l.needsUpdate=r>0);e.numPlanes=r,e.numIntersection=0}();else{const t=a?0:r,e=4*t;let n=_.clippingState||null;l.value=n,n=c(d,o,e,h);for(let r=0;r!==e;++r)n[r]=i[r];_.clippingState=n,this.numIntersection=u?this.numPlanes:0,this.numPlanes+=t}}}function As(t){let e=new WeakMap;function i(t,e){return 303===e?t.mapping=B:304===e&&(t.mapping=k),t}function r(t){const i=t.target;i.removeEventListener("dispose",r);const n=e.get(i);void 0!==n&&(e.delete(i),n.dispose())}return{get:function(n){if(n&&n.isTexture){const a=n.mapping;if(303===a||304===a){if(e.has(n)){return i(e.get(n).texture,n.mapping)}{const a=n.image;if(a&&a.height>0){const s=new ln(a.height);return s.fromEquirectangularTexture(t,n),e.set(n,s),n.addEventListener("dispose",r),i(s.texture,n.mapping)}return null}}}return n},dispose:function(){e=new WeakMap}}}const Rs=[.125,.215,.35,.446,.526,.582],Cs=20,Ps=new is,Is=new _r;let Ls=null,Ds=0,Us=0,Ns=!1;const Fs=(1+Math.sqrt(5))/2,Os=1/Fs,zs=[new Xe(-Fs,Os,0),new Xe(Fs,Os,0),new Xe(-Os,0,Fs),new Xe(Os,0,Fs),new Xe(0,Fs,-Os),new Xe(0,Fs,Os),new Xe(-1,1,-1),new Xe(1,1,-1),new Xe(-1,1,1),new Xe(1,1,1)],Bs=new Xe;class ks{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,i=.1,r=100,n={}){const{size:a=256,position:s=Bs}=n;Ls=this._renderer.getRenderTarget(),Ds=this._renderer.getActiveCubeFace(),Us=this._renderer.getActiveMipmapLevel(),Ns=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(a);const o=this._allocateTargets();return o.depthBuffer=!0,this._sceneToCubeUV(t,i,r,o,s),e>0&&this._blur(o,0,0,e),this._applyPMREM(o),this._cleanup(o),o}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=js(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=Gs(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Ls,Ds,Us),this._renderer.xr.enabled=Ns,t.scissorTest=!1,Vs(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===B||t.mapping===k?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Ls=this._renderer.getRenderTarget(),Ds=this._renderer.getActiveCubeFace(),Us=this._renderer.getActiveMipmapLevel(),Ns=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=e||this._allocateTargets();return this._textureToCubeUV(t,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,i={magFilter:Y,minFilter:Y,generateMipmaps:!1,type:nt,format:ct,colorSpace:Yt,depthBuffer:!1},r=Hs(t,e,i);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Hs(t,e,i);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(t){const e=[],i=[],r=[];let n=t;const a=t-4+1+Rs.length;for(let s=0;s<a;s++){const a=Math.pow(2,n);i.push(a);let o=1/a;s>t-4?o=Rs[s-t+4-1]:0===s&&(o=0),r.push(o);const l=1/(a-2),c=-l,h=1+l,d=[c,c,h,c,h,h,c,c,h,h,c,h],u=6,p=6,_=3,m=2,f=1,g=new Float32Array(_*p*u),w=new Float32Array(m*p*u),v=new Float32Array(f*p*u);for(let t=0;t<u;t++){const e=t%3*2/3-1,i=t>2?0:-1,r=[e,i,0,e+2/3,i,0,e+2/3,i+1,0,e,i,0,e+2/3,i+1,0,e,i+1,0];g.set(r,_*p*t),w.set(d,m*p*t);const n=[t,t,t,t,t,t];v.set(n,f*p*t)}const b=new Dr;b.setAttribute("position",new xr(g,_)),b.setAttribute("uv",new xr(w,m)),b.setAttribute("faceIndex",new xr(v,f)),e.push(b),n>4&&n--}return{lodPlanes:e,sizeLods:i,sigmas:r}}(r)),this._blurMaterial=function(t,e,i){const r=new Float32Array(Cs),n=new Xe(0,1,0),a=new $r({name:"SphericalGaussianBlur",defines:{n:Cs,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/i,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:Ws(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1});return a}(r,t,e)}return r}_compileMaterial(t){const e=new Wr(this._lodPlanes[0],t);this._renderer.compile(e,Ps)}_sceneToCubeUV(t,e,i,r,n){const a=new nn(90,1,e,i),s=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],l=this._renderer,c=l.autoClear,h=l.toneMapping;l.getClearColor(Is),l.toneMapping=0,l.autoClear=!1;const d=new wr({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),u=new Wr(new qr,d);let p=!1;const _=t.background;_?_.isColor&&(d.color.copy(_),t.background=null,p=!0):(d.color.copy(Is),p=!0);for(let m=0;m<6;m++){const e=m%3;0===e?(a.up.set(0,s[m],0),a.position.set(n.x,n.y,n.z),a.lookAt(n.x+o[m],n.y,n.z)):1===e?(a.up.set(0,0,s[m]),a.position.set(n.x,n.y,n.z),a.lookAt(n.x,n.y+o[m],n.z)):(a.up.set(0,s[m],0),a.position.set(n.x,n.y,n.z),a.lookAt(n.x,n.y,n.z+o[m]));const i=this._cubeSize;Vs(r,e*i,m>2?i:0,i,i),l.setRenderTarget(r),p&&l.render(u,a),l.render(t,a)}u.geometry.dispose(),u.material.dispose(),l.toneMapping=h,l.autoClear=c,t.background=_}_textureToCubeUV(t,e){const i=this._renderer,r=t.mapping===B||t.mapping===k;r?(null===this._cubemapMaterial&&(this._cubemapMaterial=js()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=Gs());const n=r?this._cubemapMaterial:this._equirectMaterial,a=new Wr(this._lodPlanes[0],n);n.uniforms.envMap.value=t;const s=this._cubeSize;Vs(e,0,0,3*s,2*s),i.setRenderTarget(e),i.render(a,Ps)}_applyPMREM(t){const e=this._renderer,i=e.autoClear;e.autoClear=!1;const r=this._lodPlanes.length;for(let n=1;n<r;n++){const e=Math.sqrt(this._sigmas[n]*this._sigmas[n]-this._sigmas[n-1]*this._sigmas[n-1]),i=zs[(r-n-1)%zs.length];this._blur(t,n-1,n,e,i)}e.autoClear=i}_blur(t,e,i,r,n){const a=this._pingPongRenderTarget;this._halfBlur(t,a,e,i,r,"latitudinal",n),this._halfBlur(a,t,i,i,r,"longitudinal",n)}_halfBlur(t,e,i,r,n,a,s){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new Wr(this._lodPlanes[r],l),h=l.uniforms,d=this._sizeLods[i]-1,u=isFinite(n)?Math.PI/(2*d):2*Math.PI/39,p=n/u,_=isFinite(n)?1+Math.floor(3*p):Cs;_>Cs&&console.warn(`sigmaRadians, ${n}, is too large and will clip, as it requested ${_} samples when the maximum is set to 20`);const m=[];let f=0;for(let v=0;v<Cs;++v){const t=v/p,e=Math.exp(-t*t/2);m.push(e),0===v?f+=e:v<_&&(f+=2*e)}for(let v=0;v<m.length;v++)m[v]=m[v]/f;h.envMap.value=t.texture,h.samples.value=_,h.weights.value=m,h.latitudinal.value="latitudinal"===a,s&&(h.poleAxis.value=s);const{_lodMax:g}=this;h.dTheta.value=u,h.mipInt.value=g-i;const w=this._sizeLods[r];Vs(e,3*w*(r>g-4?r-g+4:0),4*(this._cubeSize-w),3*w,2*w),o.setRenderTarget(e),o.render(c,Ps)}}function Hs(t,e,i){const r=new Ve(t,e,i);return r.texture.mapping=H,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function Vs(t,e,i,r,n){t.viewport.set(e,i,r,n),t.scissor.set(e,i,r,n)}function Gs(){return new $r({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Ws(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function js(){return new $r({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Ws(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function Ws(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function Xs(t){let e=new WeakMap,i=null;function r(t){const i=t.target;i.removeEventListener("dispose",r);const n=e.get(i);void 0!==n&&(e.delete(i),n.dispose())}return{get:function(n){if(n&&n.isTexture){const a=n.mapping,s=303===a||304===a,o=a===B||a===k;if(s||o){let a=e.get(n);const l=void 0!==a?a.texture.pmremVersion:0;if(n.isRenderTargetTexture&&n.pmremVersion!==l)return null===i&&(i=new ks(t)),a=s?i.fromEquirectangular(n,a):i.fromCubemap(n,a),a.texture.pmremVersion=n.pmremVersion,e.set(n,a),a.texture;if(void 0!==a)return a.texture;{const l=n.image;return s&&l&&l.height>0||o&&l&&function(t){let e=0;const i=6;for(let r=0;r<i;r++)void 0!==t[r]&&e++;return e===i}(l)?(null===i&&(i=new ks(t)),a=s?i.fromEquirectangular(n):i.fromCubemap(n),a.texture.pmremVersion=n.pmremVersion,e.set(n,a),n.addEventListener("dispose",r),a.texture):null}}}return n},dispose:function(){e=new WeakMap,null!==i&&(i.dispose(),i=null)}}}function qs(t){const e={};function i(i){if(void 0!==e[i])return e[i];let r;switch(i){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(i)}return e[i]=r,r}return{has:function(t){return null!==i(t)},init:function(){i("EXT_color_buffer_float"),i("WEBGL_clip_cull_distance"),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float"),i("WEBGL_multisampled_render_to_texture"),i("WEBGL_render_shared_exponent")},get:function(t){const e=i(t);return null===e&&Te("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function Ys(t,e,i,r){const n={},a=new WeakMap;function s(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const i in o.attributes)e.remove(o.attributes[i]);o.removeEventListener("dispose",s),delete n[o.id];const l=a.get(o);l&&(e.remove(l),a.delete(o)),r.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,i.memory.geometries--}function o(t){const i=[],r=t.index,n=t.attributes.position;let s=0;if(null!==r){const t=r.array;s=r.version;for(let e=0,r=t.length;e<r;e+=3){const r=t[e+0],n=t[e+1],a=t[e+2];i.push(r,n,n,a,a,r)}}else{if(void 0===n)return;{const t=n.array;s=n.version;for(let e=0,r=t.length/3-1;e<r;e+=3){const t=e+0,r=e+1,n=e+2;i.push(t,r,r,n,n,t)}}}const o=new(xe(i)?Mr:Sr)(i,1);o.version=s;const l=a.get(t);l&&e.remove(l),a.set(t,o)}return{get:function(t,e){return!0===n[e.id]||(e.addEventListener("dispose",s),n[e.id]=!0,i.memory.geometries++),e},update:function(i){const r=i.attributes;for(const n in r)e.update(r[n],t.ARRAY_BUFFER)},getWireframeAttribute:function(t){const e=a.get(t);if(e){const i=t.index;null!==i&&e.version<i.version&&o(t)}else o(t);return a.get(t)}}}function Js(t,e,i){let r,n,a;function s(e,s,o){0!==o&&(t.drawElementsInstanced(r,s,n,e*a,o),i.update(s,r,o))}this.setMode=function(t){r=t},this.setIndex=function(t){n=t.type,a=t.bytesPerElement},this.render=function(e,s){t.drawElements(r,s,n,e*a),i.update(s,r,1)},this.renderInstances=s,this.renderMultiDraw=function(t,a,s){if(0===s)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(r,a,0,n,t,0,s);let o=0;for(let e=0;e<s;e++)o+=a[e];i.update(o,r,1)},this.renderMultiDrawInstances=function(t,o,l,c){if(0===l)return;const h=e.get("WEBGL_multi_draw");if(null===h)for(let e=0;e<t.length;e++)s(t[e]/a,o[e],c[e]);else{h.multiDrawElementsInstancedWEBGL(r,o,0,n,t,0,c,0,l);let e=0;for(let t=0;t<l;t++)e+=o[t]*c[t];i.update(e,r,1)}}}function Ks(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(i,r,n){switch(e.calls++,r){case t.TRIANGLES:e.triangles+=n*(i/3);break;case t.LINES:e.lines+=n*(i/2);break;case t.LINE_STRIP:e.lines+=n*(i-1);break;case t.LINE_LOOP:e.lines+=n*i;break;case t.POINTS:e.points+=n*i;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r)}}}}function Zs(t,e,i){const r=new WeakMap,n=new ke;return{update:function(a,s,o){const l=a.morphTargetInfluences,c=s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color,h=void 0!==c?c.length:0;let d=r.get(s);if(void 0===d||d.count!==h){void 0!==d&&d.texture.dispose();const u=void 0!==s.morphAttributes.position,p=void 0!==s.morphAttributes.normal,_=void 0!==s.morphAttributes.color,m=s.morphAttributes.position||[],f=s.morphAttributes.normal||[],g=s.morphAttributes.color||[];let w=0;!0===u&&(w=1),!0===p&&(w=2),!0===_&&(w=3);let v=s.attributes.position.count*w,b=1;v>e.maxTextureSize&&(b=Math.ceil(v/e.maxTextureSize),v=e.maxTextureSize);const y=new Float32Array(v*b*4*h),x=new Ge(y,v,b,h);x.type=rt,x.needsUpdate=!0;const S=4*w;for(let E=0;E<h;E++){const T=m[E],A=f[E],R=g[E],C=v*b*4*E;for(let P=0;P<T.count;P++){const I=P*S;!0===u&&(n.fromBufferAttribute(T,P),y[C+I+0]=n.x,y[C+I+1]=n.y,y[C+I+2]=n.z,y[C+I+3]=0),!0===p&&(n.fromBufferAttribute(A,P),y[C+I+4]=n.x,y[C+I+5]=n.y,y[C+I+6]=n.z,y[C+I+7]=0),!0===_&&(n.fromBufferAttribute(R,P),y[C+I+8]=n.x,y[C+I+9]=n.y,y[C+I+10]=n.z,y[C+I+11]=4===R.itemSize?n.w:1)}}function M(){x.dispose(),r.delete(s),s.removeEventListener("dispose",M)}d={count:h,texture:x,size:new ve(v,b)},r.set(s,d),s.addEventListener("dispose",M)}if(!0===a.isInstancedMesh&&null!==a.morphTexture)o.getUniforms().setValue(t,"morphTexture",a.morphTexture,i);else{let L=0;for(let U=0;U<l.length;U++)L+=l[U];const D=s.morphTargetsRelative?1:1-L;o.getUniforms().setValue(t,"morphTargetBaseInfluence",D),o.getUniforms().setValue(t,"morphTargetInfluences",l)}o.getUniforms().setValue(t,"morphTargetsTexture",d.texture,i),o.getUniforms().setValue(t,"morphTargetsTextureSize",d.size)}}}function $s(t,e,i,r){let n=new WeakMap;function a(t){const e=t.target;e.removeEventListener("dispose",a),i.remove(e.instanceMatrix),null!==e.instanceColor&&i.remove(e.instanceColor)}return{update:function(s){const o=r.render.frame,l=s.geometry,c=e.get(s,l);if(n.get(c)!==o&&(e.update(c),n.set(c,o)),s.isInstancedMesh&&(!1===s.hasEventListener("dispose",a)&&s.addEventListener("dispose",a),n.get(s)!==o&&(i.update(s.instanceMatrix,t.ARRAY_BUFFER),null!==s.instanceColor&&i.update(s.instanceColor,t.ARRAY_BUFFER),n.set(s,o))),s.isSkinnedMesh){const t=s.skeleton;n.get(t)!==o&&(t.update(),n.set(t,o))}return c},dispose:function(){n=new WeakMap}}}const Qs=new Be,to=new Hn(1,1),eo=new Ge,io=new je,ro=new on,no=[],ao=[],so=new Float32Array(16),oo=new Float32Array(9),lo=new Float32Array(4);function co(t,e,i){const r=t[0];if(r<=0||r>0)return t;const n=e*i;let a=no[n];if(void 0===a&&(a=new Float32Array(n),no[n]=a),0!==e){r.toArray(a,0);for(let r=1,n=0;r!==e;++r)n+=i,t[r].toArray(a,n)}return a}function ho(t,e){if(t.length!==e.length)return!1;for(let i=0,r=t.length;i<r;i++)if(t[i]!==e[i])return!1;return!0}function uo(t,e){for(let i=0,r=e.length;i<r;i++)t[i]=e[i]}function po(t,e){let i=ao[e];void 0===i&&(i=new Int32Array(e),ao[e]=i);for(let r=0;r!==e;++r)i[r]=t.allocateTextureUnit();return i}function _o(t,e){const i=this.cache;i[0]!==e&&(t.uniform1f(this.addr,e),i[0]=e)}function mo(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),i[0]=e.x,i[1]=e.y);else{if(ho(i,e))return;t.uniform2fv(this.addr,e),uo(i,e)}}function fo(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),i[0]=e.x,i[1]=e.y,i[2]=e.z);else if(void 0!==e.r)i[0]===e.r&&i[1]===e.g&&i[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),i[0]=e.r,i[1]=e.g,i[2]=e.b);else{if(ho(i,e))return;t.uniform3fv(this.addr,e),uo(i,e)}}function go(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z&&i[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=e.w);else{if(ho(i,e))return;t.uniform4fv(this.addr,e),uo(i,e)}}function wo(t,e){const i=this.cache,r=e.elements;if(void 0===r){if(ho(i,e))return;t.uniformMatrix2fv(this.addr,!1,e),uo(i,e)}else{if(ho(i,r))return;lo.set(r),t.uniformMatrix2fv(this.addr,!1,lo),uo(i,r)}}function vo(t,e){const i=this.cache,r=e.elements;if(void 0===r){if(ho(i,e))return;t.uniformMatrix3fv(this.addr,!1,e),uo(i,e)}else{if(ho(i,r))return;oo.set(r),t.uniformMatrix3fv(this.addr,!1,oo),uo(i,r)}}function bo(t,e){const i=this.cache,r=e.elements;if(void 0===r){if(ho(i,e))return;t.uniformMatrix4fv(this.addr,!1,e),uo(i,e)}else{if(ho(i,r))return;so.set(r),t.uniformMatrix4fv(this.addr,!1,so),uo(i,r)}}function yo(t,e){const i=this.cache;i[0]!==e&&(t.uniform1i(this.addr,e),i[0]=e)}function xo(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y||(t.uniform2i(this.addr,e.x,e.y),i[0]=e.x,i[1]=e.y);else{if(ho(i,e))return;t.uniform2iv(this.addr,e),uo(i,e)}}function So(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z||(t.uniform3i(this.addr,e.x,e.y,e.z),i[0]=e.x,i[1]=e.y,i[2]=e.z);else{if(ho(i,e))return;t.uniform3iv(this.addr,e),uo(i,e)}}function Mo(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z&&i[3]===e.w||(t.uniform4i(this.addr,e.x,e.y,e.z,e.w),i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=e.w);else{if(ho(i,e))return;t.uniform4iv(this.addr,e),uo(i,e)}}function Eo(t,e){const i=this.cache;i[0]!==e&&(t.uniform1ui(this.addr,e),i[0]=e)}function To(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y||(t.uniform2ui(this.addr,e.x,e.y),i[0]=e.x,i[1]=e.y);else{if(ho(i,e))return;t.uniform2uiv(this.addr,e),uo(i,e)}}function Ao(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z||(t.uniform3ui(this.addr,e.x,e.y,e.z),i[0]=e.x,i[1]=e.y,i[2]=e.z);else{if(ho(i,e))return;t.uniform3uiv(this.addr,e),uo(i,e)}}function Ro(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z&&i[3]===e.w||(t.uniform4ui(this.addr,e.x,e.y,e.z,e.w),i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=e.w);else{if(ho(i,e))return;t.uniform4uiv(this.addr,e),uo(i,e)}}function Co(t,e,i){const r=this.cache,n=i.allocateTextureUnit();let a;r[0]!==n&&(t.uniform1i(this.addr,n),r[0]=n),this.type===t.SAMPLER_2D_SHADOW?(to.compareFunction=515,a=to):a=Qs,i.setTexture2D(e||a,n)}function Po(t,e,i){const r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(t.uniform1i(this.addr,n),r[0]=n),i.setTexture3D(e||io,n)}function Io(t,e,i){const r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(t.uniform1i(this.addr,n),r[0]=n),i.setTextureCube(e||ro,n)}function Lo(t,e,i){const r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(t.uniform1i(this.addr,n),r[0]=n),i.setTexture2DArray(e||eo,n)}function Do(t,e){t.uniform1fv(this.addr,e)}function Uo(t,e){const i=co(e,this.size,2);t.uniform2fv(this.addr,i)}function No(t,e){const i=co(e,this.size,3);t.uniform3fv(this.addr,i)}function Fo(t,e){const i=co(e,this.size,4);t.uniform4fv(this.addr,i)}function Oo(t,e){const i=co(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,i)}function zo(t,e){const i=co(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,i)}function Bo(t,e){const i=co(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,i)}function ko(t,e){t.uniform1iv(this.addr,e)}function Ho(t,e){t.uniform2iv(this.addr,e)}function Vo(t,e){t.uniform3iv(this.addr,e)}function Go(t,e){t.uniform4iv(this.addr,e)}function jo(t,e){t.uniform1uiv(this.addr,e)}function Wo(t,e){t.uniform2uiv(this.addr,e)}function Xo(t,e){t.uniform3uiv(this.addr,e)}function qo(t,e){t.uniform4uiv(this.addr,e)}function Yo(t,e,i){const r=this.cache,n=e.length,a=po(i,n);ho(r,a)||(t.uniform1iv(this.addr,a),uo(r,a));for(let s=0;s!==n;++s)i.setTexture2D(e[s]||Qs,a[s])}function Jo(t,e,i){const r=this.cache,n=e.length,a=po(i,n);ho(r,a)||(t.uniform1iv(this.addr,a),uo(r,a));for(let s=0;s!==n;++s)i.setTexture3D(e[s]||io,a[s])}function Ko(t,e,i){const r=this.cache,n=e.length,a=po(i,n);ho(r,a)||(t.uniform1iv(this.addr,a),uo(r,a));for(let s=0;s!==n;++s)i.setTextureCube(e[s]||ro,a[s])}function Zo(t,e,i){const r=this.cache,n=e.length,a=po(i,n);ho(r,a)||(t.uniform1iv(this.addr,a),uo(r,a));for(let s=0;s!==n;++s)i.setTexture2DArray(e[s]||eo,a[s])}class $o{constructor(t,e,i){this.id=t,this.addr=i,this.cache=[],this.type=e.type,this.setValue=function(t){switch(t){case 5126:return _o;case 35664:return mo;case 35665:return fo;case 35666:return go;case 35674:return wo;case 35675:return vo;case 35676:return bo;case 5124:case 35670:return yo;case 35667:case 35671:return xo;case 35668:case 35672:return So;case 35669:case 35673:return Mo;case 5125:return Eo;case 36294:return To;case 36295:return Ao;case 36296:return Ro;case 35678:case 36198:case 36298:case 36306:case 35682:return Co;case 35679:case 36299:case 36307:return Po;case 35680:case 36300:case 36308:case 36293:return Io;case 36289:case 36303:case 36311:case 36292:return Lo}}(e.type)}}class Qo{constructor(t,e,i){this.id=t,this.addr=i,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Do;case 35664:return Uo;case 35665:return No;case 35666:return Fo;case 35674:return Oo;case 35675:return zo;case 35676:return Bo;case 5124:case 35670:return ko;case 35667:case 35671:return Ho;case 35668:case 35672:return Vo;case 35669:case 35673:return Go;case 5125:return jo;case 36294:return Wo;case 36295:return Xo;case 36296:return qo;case 35678:case 36198:case 36298:case 36306:case 35682:return Yo;case 35679:case 36299:case 36307:return Jo;case 35680:case 36300:case 36308:case 36293:return Ko;case 36289:case 36303:case 36311:case 36292:return Zo}}(e.type)}}class tl{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,i){const r=this.seq;for(let n=0,a=r.length;n!==a;++n){const a=r[n];a.setValue(t,e[a.id],i)}}}const el=/(\w+)(\])?(\[|\.)?/g;function il(t,e){t.seq.push(e),t.map[e.id]=e}function rl(t,e,i){const r=t.name,n=r.length;for(el.lastIndex=0;;){const a=el.exec(r),s=el.lastIndex;let o=a[1];const l="]"===a[2],c=a[3];if(l&&(o|=0),void 0===c||"["===c&&s+2===n){il(i,void 0===c?new $o(o,t,e):new Qo(o,t,e));break}{let t=i.map[o];void 0===t&&(t=new tl(o),il(i,t)),i=t}}}class nl{constructor(t,e){this.seq=[],this.map={};const i=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let r=0;r<i;++r){const i=t.getActiveUniform(e,r);rl(i,t.getUniformLocation(e,i.name),this)}}setValue(t,e,i,r){const n=this.map[e];void 0!==n&&n.setValue(t,i,r)}setOptional(t,e,i){const r=e[i];void 0!==r&&this.setValue(t,i,r)}static upload(t,e,i,r){for(let n=0,a=e.length;n!==a;++n){const a=e[n],s=i[a.id];!1!==s.needsUpdate&&a.setValue(t,s.value,r)}}static seqWithValue(t,e){const i=[];for(let r=0,n=t.length;r!==n;++r){const n=t[r];n.id in e&&i.push(n)}return i}}function al(t,e,i){const r=t.createShader(e);return t.shaderSource(r,i),t.compileShader(r),r}let sl=0;const ol=new be;function ll(t,e,i){const r=t.getShaderParameter(e,t.COMPILE_STATUS),n=t.getShaderInfoLog(e).trim();if(r&&""===n)return"";const a=/ERROR: 0:(\d+)/.exec(n);if(a){const r=parseInt(a[1]);return i.toUpperCase()+"\n\n"+n+"\n\n"+function(t,e){const i=t.split("\n"),r=[],n=Math.max(e-6,0),a=Math.min(e+6,i.length);for(let s=n;s<a;s++){const t=s+1;r.push(`${t===e?">":" "} ${t}: ${i[s]}`)}return r.join("\n")}(t.getShaderSource(e),r)}return n}function cl(t,e){const i=function(t){Pe._getMatrix(ol,Pe.workingColorSpace,t);const e=`mat3( ${ol.elements.map((t=>t.toFixed(4)))} )`;switch(Pe.getTransfer(t)){case Jt:return[e,"LinearTransferOETF"];case Kt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",t),[e,"LinearTransferOETF"]}}(e);return[`vec4 ${t}( vec4 value ) {`,`\treturn ${i[1]}( vec4( value.rgb * ${i[0]}, value.a ) );`,"}"].join("\n")}function hl(t,e){let i;switch(e){case 1:i="Linear";break;case 2:i="Reinhard";break;case 3:i="Cineon";break;case 4:i="ACESFilmic";break;case 6:i="AgX";break;case 7:i="Neutral";break;case 5:i="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),i="Linear"}return"vec3 "+t+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}const dl=new Xe;function ul(){Pe.getLuminanceCoefficients(dl);return["float luminance( const in vec3 rgb ) {",`\tconst vec3 weights = vec3( ${dl.x.toFixed(4)}, ${dl.y.toFixed(4)}, ${dl.z.toFixed(4)} );`,"\treturn dot( weights, rgb );","}"].join("\n")}function pl(t){return""!==t}function _l(t,e){const i=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,i).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function ml(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const fl=/^[ \t]*#include +<([\w\d./]+)>/gm;function gl(t){return t.replace(fl,vl)}const wl=new Map;function vl(t,e){let i=fs[e];if(void 0===i){const t=wl.get(e);if(void 0===t)throw new Error("Can not resolve #include <"+e+">");i=fs[t],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,t)}return gl(i)}const bl=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function yl(t){return t.replace(bl,xl)}function xl(t,e,i,r){let n="";for(let a=parseInt(e);a<parseInt(i);a++)n+=r.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return n}function Sl(t){let e=`precision ${t.precision} float;\n\tprecision ${t.precision} int;\n\tprecision ${t.precision} sampler2D;\n\tprecision ${t.precision} samplerCube;\n\tprecision ${t.precision} sampler3D;\n\tprecision ${t.precision} sampler2DArray;\n\tprecision ${t.precision} sampler2DShadow;\n\tprecision ${t.precision} samplerCubeShadow;\n\tprecision ${t.precision} sampler2DArrayShadow;\n\tprecision ${t.precision} isampler2D;\n\tprecision ${t.precision} isampler3D;\n\tprecision ${t.precision} isamplerCube;\n\tprecision ${t.precision} isampler2DArray;\n\tprecision ${t.precision} usampler2D;\n\tprecision ${t.precision} usampler3D;\n\tprecision ${t.precision} usamplerCube;\n\tprecision ${t.precision} usampler2DArray;\n\t`;return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Ml(t,e,i,r){const n=t.getContext(),a=i.defines;let s=i.vertexShader,o=i.fragmentShader;const l=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(i),c=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case B:case k:e="ENVMAP_TYPE_CUBE";break;case H:e="ENVMAP_TYPE_CUBE_UV"}return e}(i),h=function(t){let e="ENVMAP_MODE_REFLECTION";t.envMap&&t.envMapMode===k&&(e="ENVMAP_MODE_REFRACTION");return e}(i),d=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(i),u=function(t){const e=t.envMapCubeUVHeight;if(null===e)return null;const i=Math.log2(e)-2,r=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,i),112)),texelHeight:r,maxMip:i}}(i),p=function(t){return[t.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",t.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(pl).join("\n")}(i),_=function(t){const e=[];for(const i in t){const r=t[i];!1!==r&&e.push("#define "+i+" "+r)}return e.join("\n")}(a),m=n.createProgram();let f,g,w=i.glslVersion?"#version "+i.glslVersion+"\n":"";i.isRawShaderMaterial?(f=["#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,_].filter(pl).join("\n"),f.length>0&&(f+="\n"),g=["#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,_].filter(pl).join("\n"),g.length>0&&(g+="\n")):(f=[Sl(i),"#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,_,i.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",i.batching?"#define USE_BATCHING":"",i.batchingColor?"#define USE_BATCHING_COLOR":"",i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.instancingMorph?"#define USE_INSTANCING_MORPH":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+h:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",i.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",i.displacementMap?"#define USE_DISPLACEMENTMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.anisotropy?"#define USE_ANISOTROPY":"",i.anisotropyMap?"#define USE_ANISOTROPYMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",i.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaHash?"#define USE_ALPHAHASH":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",i.mapUv?"#define MAP_UV "+i.mapUv:"",i.alphaMapUv?"#define ALPHAMAP_UV "+i.alphaMapUv:"",i.lightMapUv?"#define LIGHTMAP_UV "+i.lightMapUv:"",i.aoMapUv?"#define AOMAP_UV "+i.aoMapUv:"",i.emissiveMapUv?"#define EMISSIVEMAP_UV "+i.emissiveMapUv:"",i.bumpMapUv?"#define BUMPMAP_UV "+i.bumpMapUv:"",i.normalMapUv?"#define NORMALMAP_UV "+i.normalMapUv:"",i.displacementMapUv?"#define DISPLACEMENTMAP_UV "+i.displacementMapUv:"",i.metalnessMapUv?"#define METALNESSMAP_UV "+i.metalnessMapUv:"",i.roughnessMapUv?"#define ROUGHNESSMAP_UV "+i.roughnessMapUv:"",i.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+i.anisotropyMapUv:"",i.clearcoatMapUv?"#define CLEARCOATMAP_UV "+i.clearcoatMapUv:"",i.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+i.clearcoatNormalMapUv:"",i.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+i.clearcoatRoughnessMapUv:"",i.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+i.iridescenceMapUv:"",i.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+i.iridescenceThicknessMapUv:"",i.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+i.sheenColorMapUv:"",i.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+i.sheenRoughnessMapUv:"",i.specularMapUv?"#define SPECULARMAP_UV "+i.specularMapUv:"",i.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+i.specularColorMapUv:"",i.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+i.specularIntensityMapUv:"",i.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+i.transmissionMapUv:"",i.thicknessMapUv?"#define THICKNESSMAP_UV "+i.thicknessMapUv:"",i.vertexTangents&&!1===i.flatShading?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUv1s?"#define USE_UV1":"",i.vertexUv2s?"#define USE_UV2":"",i.vertexUv3s?"#define USE_UV3":"",i.pointsUvs?"#define USE_POINTS_UV":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.morphColors?"#define USE_MORPHCOLORS":"",i.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+i.morphTextureStride:"",i.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+i.morphTargetsCount:"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+l:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.numLightProbes>0?"#define USE_LIGHT_PROBES":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","\tuniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(pl).join("\n"),g=[Sl(i),"#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,_,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+c:"",i.envMap?"#define "+h:"",i.envMap?"#define "+d:"",u?"#define CUBEUV_TEXEL_WIDTH "+u.texelWidth:"",u?"#define CUBEUV_TEXEL_HEIGHT "+u.texelHeight:"",u?"#define CUBEUV_MAX_MIP "+u.maxMip+".0":"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",i.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.anisotropy?"#define USE_ANISOTROPY":"",i.anisotropyMap?"#define USE_ANISOTROPYMAP":"",i.clearcoat?"#define USE_CLEARCOAT":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.dispersion?"#define USE_DISPERSION":"",i.iridescence?"#define USE_IRIDESCENCE":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",i.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaTest?"#define USE_ALPHATEST":"",i.alphaHash?"#define USE_ALPHAHASH":"",i.sheen?"#define USE_SHEEN":"",i.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.vertexTangents&&!1===i.flatShading?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor||i.batchingColor?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUv1s?"#define USE_UV1":"",i.vertexUv2s?"#define USE_UV2":"",i.vertexUv3s?"#define USE_UV3":"",i.pointsUvs?"#define USE_POINTS_UV":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+l:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.numLightProbes>0?"#define USE_LIGHT_PROBES":"",i.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",i.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==i.toneMapping?"#define TONE_MAPPING":"",0!==i.toneMapping?fs.tonemapping_pars_fragment:"",0!==i.toneMapping?hl("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",i.opaque?"#define OPAQUE":"",fs.colorspace_pars_fragment,cl("linearToOutputTexel",i.outputColorSpace),ul(),i.useDepthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(pl).join("\n")),s=gl(s),s=_l(s,i),s=ml(s,i),o=gl(o),o=_l(o,i),o=ml(o,i),s=yl(s),o=yl(o),!0!==i.isRawShaderMaterial&&(w="#version 300 es\n",f=[p,"#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+f,g=["#define varying in",i.glslVersion===se?"":"layout(location = 0) out highp vec4 pc_fragColor;",i.glslVersion===se?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+g);const v=w+f+s,b=w+g+o,y=al(n,n.VERTEX_SHADER,v),x=al(n,n.FRAGMENT_SHADER,b);function S(e){if(t.debug.checkShaderErrors){const i=n.getProgramInfoLog(m).trim(),r=n.getShaderInfoLog(y).trim(),a=n.getShaderInfoLog(x).trim();let s=!0,o=!0;if(!1===n.getProgramParameter(m,n.LINK_STATUS))if(s=!1,"function"==typeof t.debug.onShaderError)t.debug.onShaderError(n,m,y,x);else{const t=ll(n,y,"vertex"),r=ll(n,x,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(m,n.VALIDATE_STATUS)+"\n\nMaterial Name: "+e.name+"\nMaterial Type: "+e.type+"\n\nProgram Info Log: "+i+"\n"+t+"\n"+r)}else""!==i?console.warn("THREE.WebGLProgram: Program Info Log:",i):""!==r&&""!==a||(o=!1);o&&(e.diagnostics={runnable:s,programLog:i,vertexShader:{log:r,prefix:f},fragmentShader:{log:a,prefix:g}})}n.deleteShader(y),n.deleteShader(x),M=new nl(n,m),E=function(t,e){const i={},r=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES);for(let n=0;n<r;n++){const r=t.getActiveAttrib(e,n),a=r.name;let s=1;r.type===t.FLOAT_MAT2&&(s=2),r.type===t.FLOAT_MAT3&&(s=3),r.type===t.FLOAT_MAT4&&(s=4),i[a]={type:r.type,location:t.getAttribLocation(e,a),locationSize:s}}return i}(n,m)}let M,E;n.attachShader(m,y),n.attachShader(m,x),void 0!==i.index0AttributeName?n.bindAttribLocation(m,0,i.index0AttributeName):!0===i.morphTargets&&n.bindAttribLocation(m,0,"position"),n.linkProgram(m),this.getUniforms=function(){return void 0===M&&S(this),M},this.getAttributes=function(){return void 0===E&&S(this),E};let T=!1===i.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===T&&(T=n.getProgramParameter(m,37297)),T},this.destroy=function(){r.releaseStatesOfProgram(this),n.deleteProgram(m),this.program=void 0},this.type=i.shaderType,this.name=i.shaderName,this.id=sl++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=y,this.fragmentShader=x,this}let El=0;class Tl{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,i=t.fragmentShader,r=this._getShaderStage(e),n=this._getShaderStage(i),a=this._getShaderCacheForMaterial(t);return!1===a.has(r)&&(a.add(r),r.usedTimes++),!1===a.has(n)&&(a.add(n),n.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const i of e)i.usedTimes--,0===i.usedTimes&&this.shaderCache.delete(i.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let i=e.get(t);return void 0===i&&(i=new Set,e.set(t,i)),i}_getShaderStage(t){const e=this.shaderCache;let i=e.get(t);return void 0===i&&(i=new Al(t),e.set(t,i)),i}}class Al{constructor(t){this.id=El++,this.code=t,this.usedTimes=0}}function Rl(t,e,i,r,n,a,s){const o=new Di,l=new Tl,c=new Set,h=[],d=n.logarithmicDepthBuffer,u=n.vertexTextures;let p=n.precision;const _={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function m(t){return c.add(t),0===t?"uv":`uv${t}`}return{getParameters:function(a,o,h,f,g){const w=f.fog,v=g.geometry,b=a.isMeshStandardMaterial?f.environment:null,y=(a.isMeshStandardMaterial?i:e).get(a.envMap||b),x=y&&y.mapping===H?y.image.height:null,S=_[a.type];null!==a.precision&&(p=n.getMaxPrecision(a.precision),p!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",p,"instead."));const M=v.morphAttributes.position||v.morphAttributes.normal||v.morphAttributes.color,E=void 0!==M?M.length:0;let T,A,R,C,P=0;if(void 0!==v.morphAttributes.position&&(P=1),void 0!==v.morphAttributes.normal&&(P=2),void 0!==v.morphAttributes.color&&(P=3),S){const t=ws[S];T=t.vertexShader,A=t.fragmentShader}else T=a.vertexShader,A=a.fragmentShader,l.update(a),R=l.getVertexShaderID(a),C=l.getFragmentShaderID(a);const I=t.getRenderTarget(),L=t.state.buffers.depth.getReversed(),D=!0===g.isInstancedMesh,U=!0===g.isBatchedMesh,N=!!a.map,F=!!a.matcap,O=!!y,z=!!a.aoMap,B=!!a.lightMap,k=!!a.bumpMap,V=!!a.normalMap,G=!!a.displacementMap,j=!!a.emissiveMap,W=!!a.metalnessMap,X=!!a.roughnessMap,q=a.anisotropy>0,Y=a.clearcoat>0,J=a.dispersion>0,K=a.iridescence>0,Z=a.sheen>0,$=a.transmission>0,Q=q&&!!a.anisotropyMap,tt=Y&&!!a.clearcoatMap,et=Y&&!!a.clearcoatNormalMap,it=Y&&!!a.clearcoatRoughnessMap,rt=K&&!!a.iridescenceMap,nt=K&&!!a.iridescenceThicknessMap,at=Z&&!!a.sheenColorMap,st=Z&&!!a.sheenRoughnessMap,ot=!!a.specularMap,lt=!!a.specularColorMap,ct=!!a.specularIntensityMap,ht=$&&!!a.transmissionMap,dt=$&&!!a.thicknessMap,ut=!!a.gradientMap,pt=!!a.alphaMap,_t=a.alphaTest>0,mt=!!a.alphaHash,ft=!!a.extensions;let gt=0;a.toneMapped&&(null!==I&&!0!==I.isXRRenderTarget||(gt=t.toneMapping));const wt={shaderID:S,shaderType:a.type,shaderName:a.name,vertexShader:T,fragmentShader:A,defines:a.defines,customVertexShaderID:R,customFragmentShaderID:C,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:p,batching:U,batchingColor:U&&null!==g._colorsTexture,instancing:D,instancingColor:D&&null!==g.instanceColor,instancingMorph:D&&null!==g.morphTexture,supportsVertexTextures:u,outputColorSpace:null===I?t.outputColorSpace:!0===I.isXRRenderTarget?I.texture.colorSpace:Yt,alphaToCoverage:!!a.alphaToCoverage,map:N,matcap:F,envMap:O,envMapMode:O&&y.mapping,envMapCubeUVHeight:x,aoMap:z,lightMap:B,bumpMap:k,normalMap:V,displacementMap:u&&G,emissiveMap:j,normalMapObjectSpace:V&&1===a.normalMapType,normalMapTangentSpace:V&&0===a.normalMapType,metalnessMap:W,roughnessMap:X,anisotropy:q,anisotropyMap:Q,clearcoat:Y,clearcoatMap:tt,clearcoatNormalMap:et,clearcoatRoughnessMap:it,dispersion:J,iridescence:K,iridescenceMap:rt,iridescenceThicknessMap:nt,sheen:Z,sheenColorMap:at,sheenRoughnessMap:st,specularMap:ot,specularColorMap:lt,specularIntensityMap:ct,transmission:$,transmissionMap:ht,thicknessMap:dt,gradientMap:ut,opaque:!1===a.transparent&&1===a.blending&&!1===a.alphaToCoverage,alphaMap:pt,alphaTest:_t,alphaHash:mt,combine:a.combine,mapUv:N&&m(a.map.channel),aoMapUv:z&&m(a.aoMap.channel),lightMapUv:B&&m(a.lightMap.channel),bumpMapUv:k&&m(a.bumpMap.channel),normalMapUv:V&&m(a.normalMap.channel),displacementMapUv:G&&m(a.displacementMap.channel),emissiveMapUv:j&&m(a.emissiveMap.channel),metalnessMapUv:W&&m(a.metalnessMap.channel),roughnessMapUv:X&&m(a.roughnessMap.channel),anisotropyMapUv:Q&&m(a.anisotropyMap.channel),clearcoatMapUv:tt&&m(a.clearcoatMap.channel),clearcoatNormalMapUv:et&&m(a.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:it&&m(a.clearcoatRoughnessMap.channel),iridescenceMapUv:rt&&m(a.iridescenceMap.channel),iridescenceThicknessMapUv:nt&&m(a.iridescenceThicknessMap.channel),sheenColorMapUv:at&&m(a.sheenColorMap.channel),sheenRoughnessMapUv:st&&m(a.sheenRoughnessMap.channel),specularMapUv:ot&&m(a.specularMap.channel),specularColorMapUv:lt&&m(a.specularColorMap.channel),specularIntensityMapUv:ct&&m(a.specularIntensityMap.channel),transmissionMapUv:ht&&m(a.transmissionMap.channel),thicknessMapUv:dt&&m(a.thicknessMap.channel),alphaMapUv:pt&&m(a.alphaMap.channel),vertexTangents:!!v.attributes.tangent&&(V||q),vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!v.attributes.color&&4===v.attributes.color.itemSize,pointsUvs:!0===g.isPoints&&!!v.attributes.uv&&(N||pt),fog:!!w,useFog:!0===a.fog,fogExp2:!!w&&w.isFogExp2,flatShading:!0===a.flatShading,sizeAttenuation:!0===a.sizeAttenuation,logarithmicDepthBuffer:d,reverseDepthBuffer:L,skinning:!0===g.isSkinnedMesh,morphTargets:void 0!==v.morphAttributes.position,morphNormals:void 0!==v.morphAttributes.normal,morphColors:void 0!==v.morphAttributes.color,morphTargetsCount:E,morphTextureStride:P,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numLightProbes:o.numLightProbes,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:a.dithering,shadowMapEnabled:t.shadowMap.enabled&&h.length>0,shadowMapType:t.shadowMap.type,toneMapping:gt,decodeVideoTexture:N&&!0===a.map.isVideoTexture&&Pe.getTransfer(a.map.colorSpace)===Kt,decodeVideoTextureEmissive:j&&!0===a.emissiveMap.isVideoTexture&&Pe.getTransfer(a.emissiveMap.colorSpace)===Kt,premultipliedAlpha:a.premultipliedAlpha,doubleSided:2===a.side,flipSided:1===a.side,useDepthPacking:a.depthPacking>=0,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionClipCullDistance:ft&&!0===a.extensions.clipCullDistance&&r.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(ft&&!0===a.extensions.multiDraw||U)&&r.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:r.has("KHR_parallel_shader_compile"),customProgramCacheKey:a.customProgramCacheKey()};return wt.vertexUv1s=c.has(1),wt.vertexUv2s=c.has(2),wt.vertexUv3s=c.has(3),c.clear(),wt},getProgramCacheKey:function(e){const i=[];if(e.shaderID?i.push(e.shaderID):(i.push(e.customVertexShaderID),i.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)i.push(t),i.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(!function(t,e){t.push(e.precision),t.push(e.outputColorSpace),t.push(e.envMapMode),t.push(e.envMapCubeUVHeight),t.push(e.mapUv),t.push(e.alphaMapUv),t.push(e.lightMapUv),t.push(e.aoMapUv),t.push(e.bumpMapUv),t.push(e.normalMapUv),t.push(e.displacementMapUv),t.push(e.emissiveMapUv),t.push(e.metalnessMapUv),t.push(e.roughnessMapUv),t.push(e.anisotropyMapUv),t.push(e.clearcoatMapUv),t.push(e.clearcoatNormalMapUv),t.push(e.clearcoatRoughnessMapUv),t.push(e.iridescenceMapUv),t.push(e.iridescenceThicknessMapUv),t.push(e.sheenColorMapUv),t.push(e.sheenRoughnessMapUv),t.push(e.specularMapUv),t.push(e.specularColorMapUv),t.push(e.specularIntensityMapUv),t.push(e.transmissionMapUv),t.push(e.thicknessMapUv),t.push(e.combine),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.morphTargetsCount),t.push(e.morphAttributeCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numSpotLightMaps),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.numSpotLightShadowsWithMaps),t.push(e.numLightProbes),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection),t.push(e.depthPacking)}(i,e),function(t,e){o.disableAll(),e.supportsVertexTextures&&o.enable(0);e.instancing&&o.enable(1);e.instancingColor&&o.enable(2);e.instancingMorph&&o.enable(3);e.matcap&&o.enable(4);e.envMap&&o.enable(5);e.normalMapObjectSpace&&o.enable(6);e.normalMapTangentSpace&&o.enable(7);e.clearcoat&&o.enable(8);e.iridescence&&o.enable(9);e.alphaTest&&o.enable(10);e.vertexColors&&o.enable(11);e.vertexAlphas&&o.enable(12);e.vertexUv1s&&o.enable(13);e.vertexUv2s&&o.enable(14);e.vertexUv3s&&o.enable(15);e.vertexTangents&&o.enable(16);e.anisotropy&&o.enable(17);e.alphaHash&&o.enable(18);e.batching&&o.enable(19);e.dispersion&&o.enable(20);e.batchingColor&&o.enable(21);t.push(o.mask),o.disableAll(),e.fog&&o.enable(0);e.useFog&&o.enable(1);e.flatShading&&o.enable(2);e.logarithmicDepthBuffer&&o.enable(3);e.reverseDepthBuffer&&o.enable(4);e.skinning&&o.enable(5);e.morphTargets&&o.enable(6);e.morphNormals&&o.enable(7);e.morphColors&&o.enable(8);e.premultipliedAlpha&&o.enable(9);e.shadowMapEnabled&&o.enable(10);e.doubleSided&&o.enable(11);e.flipSided&&o.enable(12);e.useDepthPacking&&o.enable(13);e.dithering&&o.enable(14);e.transmission&&o.enable(15);e.sheen&&o.enable(16);e.opaque&&o.enable(17);e.pointsUvs&&o.enable(18);e.decodeVideoTexture&&o.enable(19);e.decodeVideoTextureEmissive&&o.enable(20);e.alphaToCoverage&&o.enable(21);t.push(o.mask)}(i,e),i.push(t.outputColorSpace)),i.push(e.customProgramCacheKey),i.join()},getUniforms:function(t){const e=_[t.type];let i;if(e){const t=ws[e];i=Zr.clone(t.uniforms)}else i=t.uniforms;return i},acquireProgram:function(e,i){let r;for(let t=0,n=h.length;t<n;t++){const e=h[t];if(e.cacheKey===i){r=e,++r.usedTimes;break}}return void 0===r&&(r=new Ml(t,i,e,a),h.push(r)),r},releaseProgram:function(t){if(0==--t.usedTimes){const e=h.indexOf(t);h[e]=h[h.length-1],h.pop(),t.destroy()}},releaseShaderCache:function(t){l.remove(t)},programs:h,dispose:function(){l.dispose()}}}function Cl(){let t=new WeakMap;return{has:function(e){return t.has(e)},get:function(e){let i=t.get(e);return void 0===i&&(i={},t.set(e,i)),i},remove:function(e){t.delete(e)},update:function(e,i,r){t.get(e)[i]=r},dispose:function(){t=new WeakMap}}}function Pl(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Il(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Ll(){const t=[];let e=0;const i=[],r=[],n=[];function a(i,r,n,a,s,o){let l=t[e];return void 0===l?(l={id:i.id,object:i,geometry:r,material:n,groupOrder:a,renderOrder:i.renderOrder,z:s,group:o},t[e]=l):(l.id=i.id,l.object=i,l.geometry=r,l.material=n,l.groupOrder=a,l.renderOrder=i.renderOrder,l.z=s,l.group=o),e++,l}return{opaque:i,transmissive:r,transparent:n,init:function(){e=0,i.length=0,r.length=0,n.length=0},push:function(t,e,s,o,l,c){const h=a(t,e,s,o,l,c);s.transmission>0?r.push(h):!0===s.transparent?n.push(h):i.push(h)},unshift:function(t,e,s,o,l,c){const h=a(t,e,s,o,l,c);s.transmission>0?r.unshift(h):!0===s.transparent?n.unshift(h):i.unshift(h)},finish:function(){for(let i=e,r=t.length;i<r;i++){const e=t[i];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(t,e){i.length>1&&i.sort(t||Pl),r.length>1&&r.sort(e||Il),n.length>1&&n.sort(e||Il)}}}function Dl(){let t=new WeakMap;return{get:function(e,i){const r=t.get(e);let n;return void 0===r?(n=new Ll,t.set(e,[n])):i>=r.length?(n=new Ll,r.push(n)):n=r[i],n},dispose:function(){t=new WeakMap}}}function Ul(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let i;switch(e.type){case"DirectionalLight":i={direction:new Xe,color:new _r};break;case"SpotLight":i={position:new Xe,direction:new Xe,color:new _r,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new Xe,color:new _r,distance:0,decay:0};break;case"HemisphereLight":i={direction:new Xe,skyColor:new _r,groundColor:new _r};break;case"RectAreaLight":i={color:new _r,position:new Xe,halfWidth:new Xe,halfHeight:new Xe}}return t[e.id]=i,i}}}let Nl=0;function Fl(t,e){return(e.castShadow?2:0)-(t.castShadow?2:0)+(e.map?1:0)-(t.map?1:0)}function Ol(t){const e=new Ul,i=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let i;switch(e.type){case"DirectionalLight":case"SpotLight":i={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ve};break;case"PointLight":i={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ve,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=i,i}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let o=0;o<9;o++)r.probe.push(new Xe);const n=new Xe,a=new xi,s=new xi;return{setup:function(n){let a=0,s=0,o=0;for(let t=0;t<9;t++)r.probe[t].set(0,0,0);let l=0,c=0,h=0,d=0,u=0,p=0,_=0,m=0,f=0,g=0,w=0;n.sort(Fl);for(let t=0,b=n.length;t<b;t++){const v=n[t],b=v.color,y=v.intensity,x=v.distance,S=v.shadow&&v.shadow.map?v.shadow.map.texture:null;if(v.isAmbientLight)a+=b.r*y,s+=b.g*y,o+=b.b*y;else if(v.isLightProbe){for(let t=0;t<9;t++)r.probe[t].addScaledVector(v.sh.coefficients[t],y);w++}else if(v.isDirectionalLight){const t=e.get(v);if(t.color.copy(v.color).multiplyScalar(v.intensity),v.castShadow){const t=v.shadow,e=i.get(v);e.shadowIntensity=t.intensity,e.shadowBias=t.bias,e.shadowNormalBias=t.normalBias,e.shadowRadius=t.radius,e.shadowMapSize=t.mapSize,r.directionalShadow[l]=e,r.directionalShadowMap[l]=S,r.directionalShadowMatrix[l]=v.shadow.matrix,p++}r.directional[l]=t,l++}else if(v.isSpotLight){const t=e.get(v);t.position.setFromMatrixPosition(v.matrixWorld),t.color.copy(b).multiplyScalar(y),t.distance=x,t.coneCos=Math.cos(v.angle),t.penumbraCos=Math.cos(v.angle*(1-v.penumbra)),t.decay=v.decay,r.spot[h]=t;const n=v.shadow;if(v.map&&(r.spotLightMap[f]=v.map,f++,n.updateMatrices(v),v.castShadow&&g++),r.spotLightMatrix[h]=n.matrix,v.castShadow){const t=i.get(v);t.shadowIntensity=n.intensity,t.shadowBias=n.bias,t.shadowNormalBias=n.normalBias,t.shadowRadius=n.radius,t.shadowMapSize=n.mapSize,r.spotShadow[h]=t,r.spotShadowMap[h]=S,m++}h++}else if(v.isRectAreaLight){const t=e.get(v);t.color.copy(b).multiplyScalar(y),t.halfWidth.set(.5*v.width,0,0),t.halfHeight.set(0,.5*v.height,0),r.rectArea[d]=t,d++}else if(v.isPointLight){const t=e.get(v);if(t.color.copy(v.color).multiplyScalar(v.intensity),t.distance=v.distance,t.decay=v.decay,v.castShadow){const t=v.shadow,e=i.get(v);e.shadowIntensity=t.intensity,e.shadowBias=t.bias,e.shadowNormalBias=t.normalBias,e.shadowRadius=t.radius,e.shadowMapSize=t.mapSize,e.shadowCameraNear=t.camera.near,e.shadowCameraFar=t.camera.far,r.pointShadow[c]=e,r.pointShadowMap[c]=S,r.pointShadowMatrix[c]=v.shadow.matrix,_++}r.point[c]=t,c++}else if(v.isHemisphereLight){const t=e.get(v);t.skyColor.copy(v.color).multiplyScalar(y),t.groundColor.copy(v.groundColor).multiplyScalar(y),r.hemi[u]=t,u++}}d>0&&(!0===t.has("OES_texture_float_linear")?(r.rectAreaLTC1=gs.LTC_FLOAT_1,r.rectAreaLTC2=gs.LTC_FLOAT_2):(r.rectAreaLTC1=gs.LTC_HALF_1,r.rectAreaLTC2=gs.LTC_HALF_2)),r.ambient[0]=a,r.ambient[1]=s,r.ambient[2]=o;const v=r.hash;v.directionalLength===l&&v.pointLength===c&&v.spotLength===h&&v.rectAreaLength===d&&v.hemiLength===u&&v.numDirectionalShadows===p&&v.numPointShadows===_&&v.numSpotShadows===m&&v.numSpotMaps===f&&v.numLightProbes===w||(r.directional.length=l,r.spot.length=h,r.rectArea.length=d,r.point.length=c,r.hemi.length=u,r.directionalShadow.length=p,r.directionalShadowMap.length=p,r.pointShadow.length=_,r.pointShadowMap.length=_,r.spotShadow.length=m,r.spotShadowMap.length=m,r.directionalShadowMatrix.length=p,r.pointShadowMatrix.length=_,r.spotLightMatrix.length=m+f-g,r.spotLightMap.length=f,r.numSpotLightShadowsWithMaps=g,r.numLightProbes=w,v.directionalLength=l,v.pointLength=c,v.spotLength=h,v.rectAreaLength=d,v.hemiLength=u,v.numDirectionalShadows=p,v.numPointShadows=_,v.numSpotShadows=m,v.numSpotMaps=f,v.numLightProbes=w,r.version=Nl++)},setupView:function(t,e){let i=0,o=0,l=0,c=0,h=0;const d=e.matrixWorldInverse;for(let u=0,p=t.length;u<p;u++){const e=t[u];if(e.isDirectionalLight){const t=r.directional[i];t.direction.setFromMatrixPosition(e.matrixWorld),n.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(n),t.direction.transformDirection(d),i++}else if(e.isSpotLight){const t=r.spot[l];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(d),t.direction.setFromMatrixPosition(e.matrixWorld),n.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(n),t.direction.transformDirection(d),l++}else if(e.isRectAreaLight){const t=r.rectArea[c];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(d),s.identity(),a.copy(e.matrixWorld),a.premultiply(d),s.extractRotation(a),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),t.halfWidth.applyMatrix4(s),t.halfHeight.applyMatrix4(s),c++}else if(e.isPointLight){const t=r.point[o];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(d),o++}else if(e.isHemisphereLight){const t=r.hemi[h];t.direction.setFromMatrixPosition(e.matrixWorld),t.direction.transformDirection(d),h++}}},state:r}}function zl(t){const e=new Ol(t),i=[],r=[];const n={lightsArray:i,shadowsArray:r,camera:null,lights:e,transmissionRenderTarget:{}};return{init:function(t){n.camera=t,i.length=0,r.length=0},state:n,setupLights:function(){e.setup(i)},setupLightsView:function(t){e.setupView(i,t)},pushLight:function(t){i.push(t)},pushShadow:function(t){r.push(t)}}}function Bl(t){let e=new WeakMap;return{get:function(i,r=0){const n=e.get(i);let a;return void 0===n?(a=new zl(t),e.set(i,[a])):r>=n.length?(a=new zl(t),n.push(a)):a=n[r],a},dispose:function(){e=new WeakMap}}}function kl(t,e,i){let r=new bn;const n=new ve,a=new ve,s=new ke,o=new Va({depthPacking:3201}),l=new Ga,c={},p=i.maxTextureSize,_={[h]:1,[d]:0,[u]:2},m=new $r({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ve},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),f=m.clone();f.defines.HORIZONTAL_PASS=1;const g=new Dr;g.setAttribute("position",new xr(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const w=new Wr(g,m),v=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1;let b=this.type;function y(i,r){const a=e.update(w);m.defines.VSM_SAMPLES!==i.blurSamples&&(m.defines.VSM_SAMPLES=i.blurSamples,f.defines.VSM_SAMPLES=i.blurSamples,m.needsUpdate=!0,f.needsUpdate=!0),null===i.mapPass&&(i.mapPass=new Ve(n.x,n.y)),m.uniforms.shadow_pass.value=i.map.texture,m.uniforms.resolution.value=i.mapSize,m.uniforms.radius.value=i.radius,t.setRenderTarget(i.mapPass),t.clear(),t.renderBufferDirect(r,null,a,m,w,null),f.uniforms.shadow_pass.value=i.mapPass.texture,f.uniforms.resolution.value=i.mapSize,f.uniforms.radius.value=i.radius,t.setRenderTarget(i.map),t.clear(),t.renderBufferDirect(r,null,a,f,w,null)}function x(e,i,r,n){let a=null;const s=!0===r.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(void 0!==s)a=s;else if(a=!0===r.isPointLight?l:o,t.localClippingEnabled&&!0===i.clipShadows&&Array.isArray(i.clippingPlanes)&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&i.alphaTest>0||i.map&&i.alphaTest>0){const t=a.uuid,e=i.uuid;let r=c[t];void 0===r&&(r={},c[t]=r);let n=r[e];void 0===n&&(n=a.clone(),r[e]=n,i.addEventListener("dispose",M)),a=n}if(a.visible=i.visible,a.wireframe=i.wireframe,a.side=3===n?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:_[i.side],a.alphaMap=i.alphaMap,a.alphaTest=i.alphaTest,a.map=i.map,a.clipShadows=i.clipShadows,a.clippingPlanes=i.clippingPlanes,a.clipIntersection=i.clipIntersection,a.displacementMap=i.displacementMap,a.displacementScale=i.displacementScale,a.displacementBias=i.displacementBias,a.wireframeLinewidth=i.wireframeLinewidth,a.linewidth=i.linewidth,!0===r.isPointLight&&!0===a.isMeshDistanceMaterial){t.properties.get(a).light=r}return a}function S(i,n,a,s,o){if(!1===i.visible)return;if(i.layers.test(n.layers)&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&3===o)&&(!i.frustumCulled||r.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,i.matrixWorld);const r=e.update(i),l=i.material;if(Array.isArray(l)){const e=r.groups;for(let c=0,h=e.length;c<h;c++){const h=e[c],d=l[h.materialIndex];if(d&&d.visible){const e=x(i,d,s,o);i.onBeforeShadow(t,i,n,a,r,e,h),t.renderBufferDirect(a,null,r,e,i,h),i.onAfterShadow(t,i,n,a,r,e,h)}}}else if(l.visible){const e=x(i,l,s,o);i.onBeforeShadow(t,i,n,a,r,e,null),t.renderBufferDirect(a,null,r,e,i,null),i.onAfterShadow(t,i,n,a,r,e,null)}}const l=i.children;for(let t=0,e=l.length;t<e;t++)S(l[t],n,a,s,o)}function M(t){t.target.removeEventListener("dispose",M);for(const e in c){const i=c[e],r=t.target.uuid;if(r in i){i[r].dispose(),delete i[r]}}}this.render=function(e,i,o){if(!1===v.enabled)return;if(!1===v.autoUpdate&&!1===v.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),c=t.getActiveCubeFace(),h=t.getActiveMipmapLevel(),d=t.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);const u=3!==b&&3===this.type,_=3===b&&3!==this.type;for(let m=0,f=e.length;m<f;m++){const l=e[m],c=l.shadow;if(void 0===c){console.warn("THREE.WebGLShadowMap:",l,"has no shadow.");continue}if(!1===c.autoUpdate&&!1===c.needsUpdate)continue;n.copy(c.mapSize);const h=c.getFrameExtents();if(n.multiply(h),a.copy(c.mapSize),(n.x>p||n.y>p)&&(n.x>p&&(a.x=Math.floor(p/h.x),n.x=a.x*h.x,c.mapSize.x=a.x),n.y>p&&(a.y=Math.floor(p/h.y),n.y=a.y*h.y,c.mapSize.y=a.y)),null===c.map||!0===u||!0===_){const t=3!==this.type?{minFilter:W,magFilter:W}:{};null!==c.map&&c.map.dispose(),c.map=new Ve(n.x,n.y,t),c.map.texture.name=l.name+".shadowMap",c.camera.updateProjectionMatrix()}t.setRenderTarget(c.map),t.clear();const f=c.getViewportCount();for(let t=0;t<f;t++){const e=c.getViewport(t);s.set(a.x*e.x,a.y*e.y,a.x*e.z,a.y*e.w),d.viewport(s),c.updateMatrices(l,t),r=c.getFrustum(),S(i,o,c.camera,l,this.type)}!0!==c.isPointLightShadow&&3===this.type&&y(c,o),c.needsUpdate=!1}b=this.type,v.needsUpdate=!1,t.setRenderTarget(l,c,h)}}const Hl={[I]:1,[D]:6,[N]:7,[U]:5,[L]:0,[O]:2,[z]:4,[F]:3};function Vl(t,e){const i=new function(){let e=!1;const i=new ke;let r=null;const n=new ke(0,0,0,0);return{setMask:function(i){r===i||e||(t.colorMask(i,i,i,i),r=i)},setLocked:function(t){e=t},setClear:function(e,r,a,s,o){!0===o&&(e*=s,r*=s,a*=s),i.set(e,r,a,s),!1===n.equals(i)&&(t.clearColor(e,r,a,s),n.copy(i))},reset:function(){e=!1,r=null,n.set(-1,0,0,0)}}},r=new function(){let i=!1,r=!1,n=null,a=null,s=null;return{setReversed:function(t){if(r!==t){const i=e.get("EXT_clip_control");t?i.clipControlEXT(i.LOWER_LEFT_EXT,i.ZERO_TO_ONE_EXT):i.clipControlEXT(i.LOWER_LEFT_EXT,i.NEGATIVE_ONE_TO_ONE_EXT),r=t;const n=s;s=null,this.setClear(n)}},getReversed:function(){return r},setTest:function(e){e?nt(t.DEPTH_TEST):at(t.DEPTH_TEST)},setMask:function(e){n===e||i||(t.depthMask(e),n=e)},setFunc:function(e){if(r&&(e=Hl[e]),a!==e){switch(e){case 0:t.depthFunc(t.NEVER);break;case 1:t.depthFunc(t.ALWAYS);break;case 2:t.depthFunc(t.LESS);break;case 3:default:t.depthFunc(t.LEQUAL);break;case 4:t.depthFunc(t.EQUAL);break;case 5:t.depthFunc(t.GEQUAL);break;case 6:t.depthFunc(t.GREATER);break;case 7:t.depthFunc(t.NOTEQUAL)}a=e}},setLocked:function(t){i=t},setClear:function(e){s!==e&&(r&&(e=1-e),t.clearDepth(e),s=e)},reset:function(){i=!1,n=null,a=null,s=null,r=!1}}},n=new function(){let e=!1,i=null,r=null,n=null,a=null,s=null,o=null,l=null,c=null;return{setTest:function(i){e||(i?nt(t.STENCIL_TEST):at(t.STENCIL_TEST))},setMask:function(r){i===r||e||(t.stencilMask(r),i=r)},setFunc:function(e,i,s){r===e&&n===i&&a===s||(t.stencilFunc(e,i,s),r=e,n=i,a=s)},setOp:function(e,i,r){s===e&&o===i&&l===r||(t.stencilOp(e,i,r),s=e,o=i,l=r)},setLocked:function(t){e=t},setClear:function(e){c!==e&&(t.clearStencil(e),c=e)},reset:function(){e=!1,i=null,r=null,n=null,a=null,s=null,o=null,l=null,c=null}}},a=new WeakMap,s=new WeakMap;let o={},l={},c=new WeakMap,h=[],d=null,u=!1,I=null,L=null,D=null,U=null,N=null,F=null,O=null,z=new _r(0,0,0),B=0,k=!1,H=null,V=null,G=null,j=null,W=null;const X=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let q=!1,Y=0;const J=t.getParameter(t.VERSION);-1!==J.indexOf("WebGL")?(Y=parseFloat(/^WebGL (\d)/.exec(J)[1]),q=Y>=1):-1!==J.indexOf("OpenGL ES")&&(Y=parseFloat(/^OpenGL ES (\d)/.exec(J)[1]),q=Y>=2);let K=null,Z={};const $=t.getParameter(t.SCISSOR_BOX),Q=t.getParameter(t.VIEWPORT),tt=(new ke).fromArray($),et=(new ke).fromArray(Q);function it(e,i,r,n){const a=new Uint8Array(4),s=t.createTexture();t.bindTexture(e,s),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(let o=0;o<r;o++)e===t.TEXTURE_3D||e===t.TEXTURE_2D_ARRAY?t.texImage3D(i,0,t.RGBA,1,1,n,0,t.RGBA,t.UNSIGNED_BYTE,a):t.texImage2D(i+o,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,a);return s}const rt={};function nt(e){!0!==o[e]&&(t.enable(e),o[e]=!0)}function at(e){!1!==o[e]&&(t.disable(e),o[e]=!1)}rt[t.TEXTURE_2D]=it(t.TEXTURE_2D,t.TEXTURE_2D,1),rt[t.TEXTURE_CUBE_MAP]=it(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),rt[t.TEXTURE_2D_ARRAY]=it(t.TEXTURE_2D_ARRAY,t.TEXTURE_2D_ARRAY,1,1),rt[t.TEXTURE_3D]=it(t.TEXTURE_3D,t.TEXTURE_3D,1,1),i.setClear(0,0,0,1),r.setClear(1),n.setClear(0),nt(t.DEPTH_TEST),r.setFunc(3),ct(!1),ht(1),nt(t.CULL_FACE),lt(0);const st={[p]:t.FUNC_ADD,[_]:t.FUNC_SUBTRACT,[m]:t.FUNC_REVERSE_SUBTRACT};st[103]=t.MIN,st[104]=t.MAX;const ot={[f]:t.ZERO,[g]:t.ONE,[w]:t.SRC_COLOR,[b]:t.SRC_ALPHA,[T]:t.SRC_ALPHA_SATURATE,[M]:t.DST_COLOR,[x]:t.DST_ALPHA,[v]:t.ONE_MINUS_SRC_COLOR,[y]:t.ONE_MINUS_SRC_ALPHA,[E]:t.ONE_MINUS_DST_COLOR,[S]:t.ONE_MINUS_DST_ALPHA,[A]:t.CONSTANT_COLOR,[R]:t.ONE_MINUS_CONSTANT_COLOR,[C]:t.CONSTANT_ALPHA,[P]:t.ONE_MINUS_CONSTANT_ALPHA};function lt(e,i,r,n,a,s,o,l,c,h){if(0!==e){if(!1===u&&(nt(t.BLEND),u=!0),5===e)a=a||i,s=s||r,o=o||n,i===L&&a===N||(t.blendEquationSeparate(st[i],st[a]),L=i,N=a),r===D&&n===U&&s===F&&o===O||(t.blendFuncSeparate(ot[r],ot[n],ot[s],ot[o]),D=r,U=n,F=s,O=o),!1!==l.equals(z)&&c===B||(t.blendColor(l.r,l.g,l.b,c),z.copy(l),B=c),I=e,k=!1;else if(e!==I||h!==k){if(L===p&&N===p||(t.blendEquation(t.FUNC_ADD),L=p,N=p),h)switch(e){case 1:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case 2:t.blendFunc(t.ONE,t.ONE);break;case 3:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case 4:t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case 1:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case 2:t.blendFunc(t.SRC_ALPHA,t.ONE);break;case 3:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case 4:t.blendFunc(t.ZERO,t.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}D=null,U=null,F=null,O=null,z.set(0,0,0),B=0,I=e,k=h}}else!0===u&&(at(t.BLEND),u=!1)}function ct(e){H!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),H=e)}function ht(e){0!==e?(nt(t.CULL_FACE),e!==V&&(1===e?t.cullFace(t.BACK):2===e?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):at(t.CULL_FACE),V=e}function dt(e,i,r){e?(nt(t.POLYGON_OFFSET_FILL),j===i&&W===r||(t.polygonOffset(i,r),j=i,W=r)):at(t.POLYGON_OFFSET_FILL)}return{buffers:{color:i,depth:r,stencil:n},enable:nt,disable:at,bindFramebuffer:function(e,i){return l[e]!==i&&(t.bindFramebuffer(e,i),l[e]=i,e===t.DRAW_FRAMEBUFFER&&(l[t.FRAMEBUFFER]=i),e===t.FRAMEBUFFER&&(l[t.DRAW_FRAMEBUFFER]=i),!0)},drawBuffers:function(e,i){let r=h,n=!1;if(e){r=c.get(i),void 0===r&&(r=[],c.set(i,r));const a=e.textures;if(r.length!==a.length||r[0]!==t.COLOR_ATTACHMENT0){for(let e=0,i=a.length;e<i;e++)r[e]=t.COLOR_ATTACHMENT0+e;r.length=a.length,n=!0}}else r[0]!==t.BACK&&(r[0]=t.BACK,n=!0);n&&t.drawBuffers(r)},useProgram:function(e){return d!==e&&(t.useProgram(e),d=e,!0)},setBlending:lt,setMaterial:function(e,a){2===e.side?at(t.CULL_FACE):nt(t.CULL_FACE);let s=1===e.side;a&&(s=!s),ct(s),1===e.blending&&!1===e.transparent?lt(0):lt(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.blendColor,e.blendAlpha,e.premultipliedAlpha),r.setFunc(e.depthFunc),r.setTest(e.depthTest),r.setMask(e.depthWrite),i.setMask(e.colorWrite);const o=e.stencilWrite;n.setTest(o),o&&(n.setMask(e.stencilWriteMask),n.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),n.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),dt(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?nt(t.SAMPLE_ALPHA_TO_COVERAGE):at(t.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:ct,setCullFace:ht,setLineWidth:function(e){e!==G&&(q&&t.lineWidth(e),G=e)},setPolygonOffset:dt,setScissorTest:function(e){e?nt(t.SCISSOR_TEST):at(t.SCISSOR_TEST)},activeTexture:function(e){void 0===e&&(e=t.TEXTURE0+X-1),K!==e&&(t.activeTexture(e),K=e)},bindTexture:function(e,i,r){void 0===r&&(r=null===K?t.TEXTURE0+X-1:K);let n=Z[r];void 0===n&&(n={type:void 0,texture:void 0},Z[r]=n),n.type===e&&n.texture===i||(K!==r&&(t.activeTexture(r),K=r),t.bindTexture(e,i||rt[e]),n.type=e,n.texture=i)},unbindTexture:function(){const e=Z[K];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexImage3D:function(){try{t.compressedTexImage3D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{t.texImage2D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{t.texImage3D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},updateUBOMapping:function(e,i){let r=s.get(i);void 0===r&&(r=new WeakMap,s.set(i,r));let n=r.get(e);void 0===n&&(n=t.getUniformBlockIndex(i,e.name),r.set(e,n))},uniformBlockBinding:function(e,i){const r=s.get(i).get(e);a.get(i)!==r&&(t.uniformBlockBinding(i,r,e.__bindingPointIndex),a.set(i,r))},texStorage2D:function(){try{t.texStorage2D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{t.texStorage3D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{t.texSubImage2D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{t.texSubImage3D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{t.compressedTexSubImage2D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage3D:function(){try{t.compressedTexSubImage3D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(e){!1===tt.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),tt.copy(e))},viewport:function(e){!1===et.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),et.copy(e))},reset:function(){t.disable(t.BLEND),t.disable(t.CULL_FACE),t.disable(t.DEPTH_TEST),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ZERO),t.blendFuncSeparate(t.ONE,t.ZERO,t.ONE,t.ZERO),t.blendColor(0,0,0,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(t.LESS),r.setReversed(!1),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(t.ALWAYS,0,4294967295),t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.clearStencil(0),t.cullFace(t.BACK),t.frontFace(t.CCW),t.polygonOffset(0,0),t.activeTexture(t.TEXTURE0),t.bindFramebuffer(t.FRAMEBUFFER,null),t.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),t.bindFramebuffer(t.READ_FRAMEBUFFER,null),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),o={},K=null,Z={},l={},c=new WeakMap,h=[],d=null,u=!1,I=null,L=null,D=null,U=null,N=null,F=null,O=null,z=new _r(0,0,0),B=0,k=!1,H=null,V=null,G=null,j=null,W=null,tt.set(0,0,t.canvas.width,t.canvas.height),et.set(0,0,t.canvas.width,t.canvas.height),i.reset(),r.reset(),n.reset()}}}function Gl(t,e,i,r,n,a,s){const o=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),c=new ve,h=new WeakMap;let d;const u=new WeakMap;let p=!1;try{p="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch($){}function _(t,e){return p?new OffscreenCanvas(t,e):Se("canvas")}function m(t,e,i){let r=1;const n=H(t);if((n.width>i||n.height>i)&&(r=i/Math.max(n.width,n.height)),r<1){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap||"undefined"!=typeof VideoFrame&&t instanceof VideoFrame){const i=Math.floor(r*n.width),a=Math.floor(r*n.height);void 0===d&&(d=_(i,a));const s=e?_(i,a):d;s.width=i,s.height=a;return s.getContext("2d").drawImage(t,0,0,i,a),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+n.width+"x"+n.height+") to ("+i+"x"+a+")."),s}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+n.width+"x"+n.height+")."),t}return t}function f(t){return t.generateMipmaps}function g(e){t.generateMipmap(e)}function w(e){return e.isWebGLCubeRenderTarget?t.TEXTURE_CUBE_MAP:e.isWebGL3DRenderTarget?t.TEXTURE_3D:e.isWebGLArrayRenderTarget||e.isCompressedArrayTexture?t.TEXTURE_2D_ARRAY:t.TEXTURE_2D}function v(i,r,n,a,s=!1){if(null!==i){if(void 0!==t[i])return t[i];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+i+"'")}let o=r;if(r===t.RED&&(n===t.FLOAT&&(o=t.R32F),n===t.HALF_FLOAT&&(o=t.R16F),n===t.UNSIGNED_BYTE&&(o=t.R8)),r===t.RED_INTEGER&&(n===t.UNSIGNED_BYTE&&(o=t.R8UI),n===t.UNSIGNED_SHORT&&(o=t.R16UI),n===t.UNSIGNED_INT&&(o=t.R32UI),n===t.BYTE&&(o=t.R8I),n===t.SHORT&&(o=t.R16I),n===t.INT&&(o=t.R32I)),r===t.RG&&(n===t.FLOAT&&(o=t.RG32F),n===t.HALF_FLOAT&&(o=t.RG16F),n===t.UNSIGNED_BYTE&&(o=t.RG8)),r===t.RG_INTEGER&&(n===t.UNSIGNED_BYTE&&(o=t.RG8UI),n===t.UNSIGNED_SHORT&&(o=t.RG16UI),n===t.UNSIGNED_INT&&(o=t.RG32UI),n===t.BYTE&&(o=t.RG8I),n===t.SHORT&&(o=t.RG16I),n===t.INT&&(o=t.RG32I)),r===t.RGB_INTEGER&&(n===t.UNSIGNED_BYTE&&(o=t.RGB8UI),n===t.UNSIGNED_SHORT&&(o=t.RGB16UI),n===t.UNSIGNED_INT&&(o=t.RGB32UI),n===t.BYTE&&(o=t.RGB8I),n===t.SHORT&&(o=t.RGB16I),n===t.INT&&(o=t.RGB32I)),r===t.RGBA_INTEGER&&(n===t.UNSIGNED_BYTE&&(o=t.RGBA8UI),n===t.UNSIGNED_SHORT&&(o=t.RGBA16UI),n===t.UNSIGNED_INT&&(o=t.RGBA32UI),n===t.BYTE&&(o=t.RGBA8I),n===t.SHORT&&(o=t.RGBA16I),n===t.INT&&(o=t.RGBA32I)),r===t.RGB&&n===t.UNSIGNED_INT_5_9_9_9_REV&&(o=t.RGB9_E5),r===t.RGBA){const e=s?Jt:Pe.getTransfer(a);n===t.FLOAT&&(o=t.RGBA32F),n===t.HALF_FLOAT&&(o=t.RGBA16F),n===t.UNSIGNED_BYTE&&(o=e===Kt?t.SRGB8_ALPHA8:t.RGBA8),n===t.UNSIGNED_SHORT_4_4_4_4&&(o=t.RGBA4),n===t.UNSIGNED_SHORT_5_5_5_1&&(o=t.RGB5_A1)}return o!==t.R16F&&o!==t.R32F&&o!==t.RG16F&&o!==t.RG32F&&o!==t.RGBA16F&&o!==t.RGBA32F||e.get("EXT_color_buffer_float"),o}function b(e,i){let r;return e?null===i||i===it||i===ot?r=t.DEPTH24_STENCIL8:i===rt?r=t.DEPTH32F_STENCIL8:i===tt&&(r=t.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):null===i||i===it||i===ot?r=t.DEPTH_COMPONENT24:i===rt?r=t.DEPTH_COMPONENT32F:i===tt&&(r=t.DEPTH_COMPONENT16),r}function y(t,e){return!0===f(t)||t.isFramebufferTexture&&t.minFilter!==W&&t.minFilter!==Y?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function x(t){const e=t.target;e.removeEventListener("dispose",x),function(t){const e=r.get(t);if(void 0===e.__webglInit)return;const i=t.source,n=u.get(i);if(n){const r=n[e.__cacheKey];r.usedTimes--,0===r.usedTimes&&M(t),0===Object.keys(n).length&&u.delete(i)}r.remove(t)}(e),e.isVideoTexture&&h.delete(e)}function S(e){const i=e.target;i.removeEventListener("dispose",S),function(e){const i=r.get(e);e.depthTexture&&(e.depthTexture.dispose(),r.remove(e.depthTexture));if(e.isWebGLCubeRenderTarget)for(let r=0;r<6;r++){if(Array.isArray(i.__webglFramebuffer[r]))for(let e=0;e<i.__webglFramebuffer[r].length;e++)t.deleteFramebuffer(i.__webglFramebuffer[r][e]);else t.deleteFramebuffer(i.__webglFramebuffer[r]);i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[r])}else{if(Array.isArray(i.__webglFramebuffer))for(let e=0;e<i.__webglFramebuffer.length;e++)t.deleteFramebuffer(i.__webglFramebuffer[e]);else t.deleteFramebuffer(i.__webglFramebuffer);if(i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&t.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer)for(let e=0;e<i.__webglColorRenderbuffer.length;e++)i.__webglColorRenderbuffer[e]&&t.deleteRenderbuffer(i.__webglColorRenderbuffer[e]);i.__webglDepthRenderbuffer&&t.deleteRenderbuffer(i.__webglDepthRenderbuffer)}const n=e.textures;for(let a=0,o=n.length;a<o;a++){const e=r.get(n[a]);e.__webglTexture&&(t.deleteTexture(e.__webglTexture),s.memory.textures--),r.remove(n[a])}r.remove(e)}(i)}function M(e){const i=r.get(e);t.deleteTexture(i.__webglTexture);const n=e.source;delete u.get(n)[i.__cacheKey],s.memory.textures--}let E=0;function T(e,n){const a=r.get(e);if(e.isVideoTexture&&function(t){const e=s.render.frame;h.get(t)!==e&&(h.set(t,e),t.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&a.__version!==e.version){const t=e.image;if(null===t)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==t.complete)return void L(a,e,n);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}i.bindTexture(t.TEXTURE_2D,a.__webglTexture,t.TEXTURE0+n)}const A={[V]:t.REPEAT,[G]:t.CLAMP_TO_EDGE,[j]:t.MIRRORED_REPEAT},R={[W]:t.NEAREST,[X]:t.NEAREST_MIPMAP_NEAREST,[q]:t.NEAREST_MIPMAP_LINEAR,[Y]:t.LINEAR,[J]:t.LINEAR_MIPMAP_NEAREST,[K]:t.LINEAR_MIPMAP_LINEAR},C={[$t]:t.NEVER,[ae]:t.ALWAYS,[Qt]:t.LESS,[ee]:t.LEQUAL,[te]:t.EQUAL,[ne]:t.GEQUAL,[ie]:t.GREATER,[re]:t.NOTEQUAL};function P(i,a){if(a.type!==rt||!1!==e.has("OES_texture_float_linear")||a.magFilter!==Y&&a.magFilter!==J&&a.magFilter!==q&&a.magFilter!==K&&a.minFilter!==Y&&a.minFilter!==J&&a.minFilter!==q&&a.minFilter!==K||console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),t.texParameteri(i,t.TEXTURE_WRAP_S,A[a.wrapS]),t.texParameteri(i,t.TEXTURE_WRAP_T,A[a.wrapT]),i!==t.TEXTURE_3D&&i!==t.TEXTURE_2D_ARRAY||t.texParameteri(i,t.TEXTURE_WRAP_R,A[a.wrapR]),t.texParameteri(i,t.TEXTURE_MAG_FILTER,R[a.magFilter]),t.texParameteri(i,t.TEXTURE_MIN_FILTER,R[a.minFilter]),a.compareFunction&&(t.texParameteri(i,t.TEXTURE_COMPARE_MODE,t.COMPARE_REF_TO_TEXTURE),t.texParameteri(i,t.TEXTURE_COMPARE_FUNC,C[a.compareFunction])),!0===e.has("EXT_texture_filter_anisotropic")){if(a.magFilter===W)return;if(a.minFilter!==q&&a.minFilter!==K)return;if(a.type===rt&&!1===e.has("OES_texture_float_linear"))return;if(a.anisotropy>1||r.get(a).__currentAnisotropy){const s=e.get("EXT_texture_filter_anisotropic");t.texParameterf(i,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,n.getMaxAnisotropy())),r.get(a).__currentAnisotropy=a.anisotropy}}}function I(e,i){let r=!1;void 0===e.__webglInit&&(e.__webglInit=!0,i.addEventListener("dispose",x));const n=i.source;let a=u.get(n);void 0===a&&(a={},u.set(n,a));const o=function(t){const e=[];return e.push(t.wrapS),e.push(t.wrapT),e.push(t.wrapR||0),e.push(t.magFilter),e.push(t.minFilter),e.push(t.anisotropy),e.push(t.internalFormat),e.push(t.format),e.push(t.type),e.push(t.generateMipmaps),e.push(t.premultiplyAlpha),e.push(t.flipY),e.push(t.unpackAlignment),e.push(t.colorSpace),e.join()}(i);if(o!==e.__cacheKey){void 0===a[o]&&(a[o]={texture:t.createTexture(),usedTimes:0},s.memory.textures++,r=!0),a[o].usedTimes++;const n=a[e.__cacheKey];void 0!==n&&(a[e.__cacheKey].usedTimes--,0===n.usedTimes&&M(i)),e.__cacheKey=o,e.__webglTexture=a[o].texture}return r}function L(e,s,o){let l=t.TEXTURE_2D;(s.isDataArrayTexture||s.isCompressedArrayTexture)&&(l=t.TEXTURE_2D_ARRAY),s.isData3DTexture&&(l=t.TEXTURE_3D);const c=I(e,s),h=s.source;i.bindTexture(l,e.__webglTexture,t.TEXTURE0+o);const d=r.get(h);if(h.version!==d.__version||!0===c){i.activeTexture(t.TEXTURE0+o);const e=Pe.getPrimaries(Pe.workingColorSpace),r=s.colorSpace===Xt?null:Pe.getPrimaries(s.colorSpace),u=s.colorSpace===Xt||e===r?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,s.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,s.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,s.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,u);let p=m(s.image,!1,n.maxTextureSize);p=k(s,p);const _=a.convert(s.format,s.colorSpace),w=a.convert(s.type);let x,S=v(s.internalFormat,_,w,s.colorSpace,s.isVideoTexture);P(l,s);const M=s.mipmaps,E=!0!==s.isVideoTexture,T=void 0===d.__version||!0===c,A=h.dataReady,R=y(s,p);if(s.isDepthTexture)S=b(s.format===dt,s.type),T&&(E?i.texStorage2D(t.TEXTURE_2D,1,S,p.width,p.height):i.texImage2D(t.TEXTURE_2D,0,S,p.width,p.height,0,_,w,null));else if(s.isDataTexture)if(M.length>0){E&&T&&i.texStorage2D(t.TEXTURE_2D,R,S,M[0].width,M[0].height);for(let e=0,r=M.length;e<r;e++)x=M[e],E?A&&i.texSubImage2D(t.TEXTURE_2D,e,0,0,x.width,x.height,_,w,x.data):i.texImage2D(t.TEXTURE_2D,e,S,x.width,x.height,0,_,w,x.data);s.generateMipmaps=!1}else E?(T&&i.texStorage2D(t.TEXTURE_2D,R,S,p.width,p.height),A&&i.texSubImage2D(t.TEXTURE_2D,0,0,0,p.width,p.height,_,w,p.data)):i.texImage2D(t.TEXTURE_2D,0,S,p.width,p.height,0,_,w,p.data);else if(s.isCompressedTexture)if(s.isCompressedArrayTexture){E&&T&&i.texStorage3D(t.TEXTURE_2D_ARRAY,R,S,M[0].width,M[0].height,p.depth);for(let e=0,r=M.length;e<r;e++)if(x=M[e],s.format!==ct)if(null!==_)if(E){if(A)if(s.layerUpdates.size>0){const r=ps(x.width,x.height,s.format,s.type);for(const n of s.layerUpdates){const a=x.data.subarray(n*r/x.data.BYTES_PER_ELEMENT,(n+1)*r/x.data.BYTES_PER_ELEMENT);i.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,n,x.width,x.height,1,_,a)}s.clearLayerUpdates()}else i.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,x.width,x.height,p.depth,_,x.data)}else i.compressedTexImage3D(t.TEXTURE_2D_ARRAY,e,S,x.width,x.height,p.depth,0,x.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else E?A&&i.texSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,x.width,x.height,p.depth,_,w,x.data):i.texImage3D(t.TEXTURE_2D_ARRAY,e,S,x.width,x.height,p.depth,0,_,w,x.data)}else{E&&T&&i.texStorage2D(t.TEXTURE_2D,R,S,M[0].width,M[0].height);for(let e=0,r=M.length;e<r;e++)x=M[e],s.format!==ct?null!==_?E?A&&i.compressedTexSubImage2D(t.TEXTURE_2D,e,0,0,x.width,x.height,_,x.data):i.compressedTexImage2D(t.TEXTURE_2D,e,S,x.width,x.height,0,x.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):E?A&&i.texSubImage2D(t.TEXTURE_2D,e,0,0,x.width,x.height,_,w,x.data):i.texImage2D(t.TEXTURE_2D,e,S,x.width,x.height,0,_,w,x.data)}else if(s.isDataArrayTexture)if(E){if(T&&i.texStorage3D(t.TEXTURE_2D_ARRAY,R,S,p.width,p.height,p.depth),A)if(s.layerUpdates.size>0){const e=ps(p.width,p.height,s.format,s.type);for(const r of s.layerUpdates){const n=p.data.subarray(r*e/p.data.BYTES_PER_ELEMENT,(r+1)*e/p.data.BYTES_PER_ELEMENT);i.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,r,p.width,p.height,1,_,w,n)}s.clearLayerUpdates()}else i.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,0,p.width,p.height,p.depth,_,w,p.data)}else i.texImage3D(t.TEXTURE_2D_ARRAY,0,S,p.width,p.height,p.depth,0,_,w,p.data);else if(s.isData3DTexture)E?(T&&i.texStorage3D(t.TEXTURE_3D,R,S,p.width,p.height,p.depth),A&&i.texSubImage3D(t.TEXTURE_3D,0,0,0,0,p.width,p.height,p.depth,_,w,p.data)):i.texImage3D(t.TEXTURE_3D,0,S,p.width,p.height,p.depth,0,_,w,p.data);else if(s.isFramebufferTexture){if(T)if(E)i.texStorage2D(t.TEXTURE_2D,R,S,p.width,p.height);else{let e=p.width,r=p.height;for(let n=0;n<R;n++)i.texImage2D(t.TEXTURE_2D,n,S,e,r,0,_,w,null),e>>=1,r>>=1}}else if(M.length>0){if(E&&T){const e=H(M[0]);i.texStorage2D(t.TEXTURE_2D,R,S,e.width,e.height)}for(let e=0,r=M.length;e<r;e++)x=M[e],E?A&&i.texSubImage2D(t.TEXTURE_2D,e,0,0,_,w,x):i.texImage2D(t.TEXTURE_2D,e,S,_,w,x);s.generateMipmaps=!1}else if(E){if(T){const e=H(p);i.texStorage2D(t.TEXTURE_2D,R,S,e.width,e.height)}A&&i.texSubImage2D(t.TEXTURE_2D,0,0,0,_,w,p)}else i.texImage2D(t.TEXTURE_2D,0,S,_,w,p);f(s)&&g(l),d.__version=h.version,s.onUpdate&&s.onUpdate(s)}e.__version=s.version}function D(e,n,s,l,c,h){const d=a.convert(s.format,s.colorSpace),u=a.convert(s.type),p=v(s.internalFormat,d,u,s.colorSpace),_=r.get(n),m=r.get(s);if(m.__renderTarget=n,!_.__hasExternalTextures){const e=Math.max(1,n.width>>h),r=Math.max(1,n.height>>h);c===t.TEXTURE_3D||c===t.TEXTURE_2D_ARRAY?i.texImage3D(c,h,p,e,r,n.depth,0,d,u,null):i.texImage2D(c,h,p,e,r,0,d,u,null)}i.bindFramebuffer(t.FRAMEBUFFER,e),B(n)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,l,c,m.__webglTexture,0,z(n)):(c===t.TEXTURE_2D||c>=t.TEXTURE_CUBE_MAP_POSITIVE_X&&c<=t.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&t.framebufferTexture2D(t.FRAMEBUFFER,l,c,m.__webglTexture,h),i.bindFramebuffer(t.FRAMEBUFFER,null)}function U(e,i,r){if(t.bindRenderbuffer(t.RENDERBUFFER,e),i.depthBuffer){const n=i.depthTexture,a=n&&n.isDepthTexture?n.type:null,s=b(i.stencilBuffer,a),l=i.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,c=z(i);B(i)?o.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,c,s,i.width,i.height):r?t.renderbufferStorageMultisample(t.RENDERBUFFER,c,s,i.width,i.height):t.renderbufferStorage(t.RENDERBUFFER,s,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,l,t.RENDERBUFFER,e)}else{const e=i.textures;for(let n=0;n<e.length;n++){const s=e[n],l=a.convert(s.format,s.colorSpace),c=a.convert(s.type),h=v(s.internalFormat,l,c,s.colorSpace),d=z(i);r&&!1===B(i)?t.renderbufferStorageMultisample(t.RENDERBUFFER,d,h,i.width,i.height):B(i)?o.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,d,h,i.width,i.height):t.renderbufferStorage(t.RENDERBUFFER,h,i.width,i.height)}}t.bindRenderbuffer(t.RENDERBUFFER,null)}function N(e){const n=r.get(e),a=!0===e.isWebGLCubeRenderTarget;if(n.__boundDepthTexture!==e.depthTexture){const t=e.depthTexture;if(n.__depthDisposeCallback&&n.__depthDisposeCallback(),t){const e=()=>{delete n.__boundDepthTexture,delete n.__depthDisposeCallback,t.removeEventListener("dispose",e)};t.addEventListener("dispose",e),n.__depthDisposeCallback=e}n.__boundDepthTexture=t}if(e.depthTexture&&!n.__autoAllocateDepthBuffer){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,n){if(n&&n.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(t.FRAMEBUFFER,e),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const a=r.get(n.depthTexture);a.__renderTarget=n,a.__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),T(n.depthTexture,0);const s=a.__webglTexture,l=z(n);if(n.depthTexture.format===ht)B(n)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,s,0,l):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,s,0);else{if(n.depthTexture.format!==dt)throw new Error("Unknown depthTexture format");B(n)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,s,0,l):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,s,0)}}(n.__webglFramebuffer,e)}else if(a){n.__webglDepthbuffer=[];for(let r=0;r<6;r++)if(i.bindFramebuffer(t.FRAMEBUFFER,n.__webglFramebuffer[r]),void 0===n.__webglDepthbuffer[r])n.__webglDepthbuffer[r]=t.createRenderbuffer(),U(n.__webglDepthbuffer[r],e,!1);else{const i=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,a=n.__webglDepthbuffer[r];t.bindRenderbuffer(t.RENDERBUFFER,a),t.framebufferRenderbuffer(t.FRAMEBUFFER,i,t.RENDERBUFFER,a)}}else if(i.bindFramebuffer(t.FRAMEBUFFER,n.__webglFramebuffer),void 0===n.__webglDepthbuffer)n.__webglDepthbuffer=t.createRenderbuffer(),U(n.__webglDepthbuffer,e,!1);else{const i=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,r=n.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,r),t.framebufferRenderbuffer(t.FRAMEBUFFER,i,t.RENDERBUFFER,r)}i.bindFramebuffer(t.FRAMEBUFFER,null)}const F=[],O=[];function z(t){return Math.min(n.maxSamples,t.samples)}function B(t){const i=r.get(t);return t.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==i.__useRenderToTexture}function k(t,e){const i=t.colorSpace,r=t.format,n=t.type;return!0===t.isCompressedTexture||!0===t.isVideoTexture||i!==Yt&&i!==Xt&&(Pe.getTransfer(i)===Kt?r===ct&&n===Z||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",i)),e}function H(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement?(c.width=t.naturalWidth||t.width,c.height=t.naturalHeight||t.height):"undefined"!=typeof VideoFrame&&t instanceof VideoFrame?(c.width=t.displayWidth,c.height=t.displayHeight):(c.width=t.width,c.height=t.height),c}this.allocateTextureUnit=function(){const t=E;return t>=n.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+n.maxTextures),E+=1,t},this.resetTextureUnits=function(){E=0},this.setTexture2D=T,this.setTexture2DArray=function(e,n){const a=r.get(e);e.version>0&&a.__version!==e.version?L(a,e,n):i.bindTexture(t.TEXTURE_2D_ARRAY,a.__webglTexture,t.TEXTURE0+n)},this.setTexture3D=function(e,n){const a=r.get(e);e.version>0&&a.__version!==e.version?L(a,e,n):i.bindTexture(t.TEXTURE_3D,a.__webglTexture,t.TEXTURE0+n)},this.setTextureCube=function(e,s){const o=r.get(e);e.version>0&&o.__version!==e.version?function(e,s,o){if(6!==s.image.length)return;const l=I(e,s),c=s.source;i.bindTexture(t.TEXTURE_CUBE_MAP,e.__webglTexture,t.TEXTURE0+o);const h=r.get(c);if(c.version!==h.__version||!0===l){i.activeTexture(t.TEXTURE0+o);const e=Pe.getPrimaries(Pe.workingColorSpace),r=s.colorSpace===Xt?null:Pe.getPrimaries(s.colorSpace),d=s.colorSpace===Xt||e===r?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,s.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,s.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,s.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,d);const u=s.isCompressedTexture||s.image[0].isCompressedTexture,p=s.image[0]&&s.image[0].isDataTexture,_=[];for(let t=0;t<6;t++)_[t]=u||p?p?s.image[t].image:s.image[t]:m(s.image[t],!0,n.maxCubemapSize),_[t]=k(s,_[t]);const w=_[0],b=a.convert(s.format,s.colorSpace),x=a.convert(s.type),S=v(s.internalFormat,b,x,s.colorSpace),M=!0!==s.isVideoTexture,E=void 0===h.__version||!0===l,T=c.dataReady;let A,R=y(s,w);if(P(t.TEXTURE_CUBE_MAP,s),u){M&&E&&i.texStorage2D(t.TEXTURE_CUBE_MAP,R,S,w.width,w.height);for(let e=0;e<6;e++){A=_[e].mipmaps;for(let r=0;r<A.length;r++){const n=A[r];s.format!==ct?null!==b?M?T&&i.compressedTexSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,r,0,0,n.width,n.height,b,n.data):i.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,r,S,n.width,n.height,0,n.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):M?T&&i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,r,0,0,n.width,n.height,b,x,n.data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,r,S,n.width,n.height,0,b,x,n.data)}}}else{if(A=s.mipmaps,M&&E){A.length>0&&R++;const e=H(_[0]);i.texStorage2D(t.TEXTURE_CUBE_MAP,R,S,e.width,e.height)}for(let e=0;e<6;e++)if(p){M?T&&i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,_[e].width,_[e].height,b,x,_[e].data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,S,_[e].width,_[e].height,0,b,x,_[e].data);for(let r=0;r<A.length;r++){const n=A[r].image[e].image;M?T&&i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,r+1,0,0,n.width,n.height,b,x,n.data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,r+1,S,n.width,n.height,0,b,x,n.data)}}else{M?T&&i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,b,x,_[e]):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,S,b,x,_[e]);for(let r=0;r<A.length;r++){const n=A[r];M?T&&i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,r+1,0,0,b,x,n.image[e]):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,r+1,S,b,x,n.image[e])}}}f(s)&&g(t.TEXTURE_CUBE_MAP),h.__version=c.version,s.onUpdate&&s.onUpdate(s)}e.__version=s.version}(o,e,s):i.bindTexture(t.TEXTURE_CUBE_MAP,o.__webglTexture,t.TEXTURE0+s)},this.rebindTextures=function(e,i,n){const a=r.get(e);void 0!==i&&D(a.__webglFramebuffer,e,e.texture,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,0),void 0!==n&&N(e)},this.setupRenderTarget=function(e){const n=e.texture,o=r.get(e),l=r.get(n);e.addEventListener("dispose",S);const c=e.textures,h=!0===e.isWebGLCubeRenderTarget,d=c.length>1;if(d||(void 0===l.__webglTexture&&(l.__webglTexture=t.createTexture()),l.__version=n.version,s.memory.textures++),h){o.__webglFramebuffer=[];for(let e=0;e<6;e++)if(n.mipmaps&&n.mipmaps.length>0){o.__webglFramebuffer[e]=[];for(let i=0;i<n.mipmaps.length;i++)o.__webglFramebuffer[e][i]=t.createFramebuffer()}else o.__webglFramebuffer[e]=t.createFramebuffer()}else{if(n.mipmaps&&n.mipmaps.length>0){o.__webglFramebuffer=[];for(let e=0;e<n.mipmaps.length;e++)o.__webglFramebuffer[e]=t.createFramebuffer()}else o.__webglFramebuffer=t.createFramebuffer();if(d)for(let e=0,i=c.length;e<i;e++){const i=r.get(c[e]);void 0===i.__webglTexture&&(i.__webglTexture=t.createTexture(),s.memory.textures++)}if(e.samples>0&&!1===B(e)){o.__webglMultisampledFramebuffer=t.createFramebuffer(),o.__webglColorRenderbuffer=[],i.bindFramebuffer(t.FRAMEBUFFER,o.__webglMultisampledFramebuffer);for(let i=0;i<c.length;i++){const r=c[i];o.__webglColorRenderbuffer[i]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,o.__webglColorRenderbuffer[i]);const n=a.convert(r.format,r.colorSpace),s=a.convert(r.type),l=v(r.internalFormat,n,s,r.colorSpace,!0===e.isXRRenderTarget),h=z(e);t.renderbufferStorageMultisample(t.RENDERBUFFER,h,l,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+i,t.RENDERBUFFER,o.__webglColorRenderbuffer[i])}t.bindRenderbuffer(t.RENDERBUFFER,null),e.depthBuffer&&(o.__webglDepthRenderbuffer=t.createRenderbuffer(),U(o.__webglDepthRenderbuffer,e,!0)),i.bindFramebuffer(t.FRAMEBUFFER,null)}}if(h){i.bindTexture(t.TEXTURE_CUBE_MAP,l.__webglTexture),P(t.TEXTURE_CUBE_MAP,n);for(let i=0;i<6;i++)if(n.mipmaps&&n.mipmaps.length>0)for(let r=0;r<n.mipmaps.length;r++)D(o.__webglFramebuffer[i][r],e,n,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+i,r);else D(o.__webglFramebuffer[i],e,n,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+i,0);f(n)&&g(t.TEXTURE_CUBE_MAP),i.unbindTexture()}else if(d){for(let n=0,a=c.length;n<a;n++){const a=c[n],s=r.get(a);i.bindTexture(t.TEXTURE_2D,s.__webglTexture),P(t.TEXTURE_2D,a),D(o.__webglFramebuffer,e,a,t.COLOR_ATTACHMENT0+n,t.TEXTURE_2D,0),f(a)&&g(t.TEXTURE_2D)}i.unbindTexture()}else{let r=t.TEXTURE_2D;if((e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&(r=e.isWebGL3DRenderTarget?t.TEXTURE_3D:t.TEXTURE_2D_ARRAY),i.bindTexture(r,l.__webglTexture),P(r,n),n.mipmaps&&n.mipmaps.length>0)for(let i=0;i<n.mipmaps.length;i++)D(o.__webglFramebuffer[i],e,n,t.COLOR_ATTACHMENT0,r,i);else D(o.__webglFramebuffer,e,n,t.COLOR_ATTACHMENT0,r,0);f(n)&&g(r),i.unbindTexture()}e.depthBuffer&&N(e)},this.updateRenderTargetMipmap=function(t){const e=t.textures;for(let n=0,a=e.length;n<a;n++){const a=e[n];if(f(a)){const e=w(t),n=r.get(a).__webglTexture;i.bindTexture(e,n),g(e),i.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(e.samples>0)if(!1===B(e)){const n=e.textures,a=e.width,s=e.height;let o=t.COLOR_BUFFER_BIT;const c=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,h=r.get(e),d=n.length>1;if(d)for(let e=0;e<n.length;e++)i.bindFramebuffer(t.FRAMEBUFFER,h.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,null),i.bindFramebuffer(t.FRAMEBUFFER,h.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,null,0);i.bindFramebuffer(t.READ_FRAMEBUFFER,h.__webglMultisampledFramebuffer),i.bindFramebuffer(t.DRAW_FRAMEBUFFER,h.__webglFramebuffer);for(let i=0;i<n.length;i++){if(e.resolveDepthBuffer&&(e.depthBuffer&&(o|=t.DEPTH_BUFFER_BIT),e.stencilBuffer&&e.resolveStencilBuffer&&(o|=t.STENCIL_BUFFER_BIT)),d){t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,h.__webglColorRenderbuffer[i]);const e=r.get(n[i]).__webglTexture;t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)}t.blitFramebuffer(0,0,a,s,0,0,a,s,o,t.NEAREST),!0===l&&(F.length=0,O.length=0,F.push(t.COLOR_ATTACHMENT0+i),e.depthBuffer&&!1===e.resolveDepthBuffer&&(F.push(c),O.push(c),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,O)),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,F))}if(i.bindFramebuffer(t.READ_FRAMEBUFFER,null),i.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),d)for(let e=0;e<n.length;e++){i.bindFramebuffer(t.FRAMEBUFFER,h.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,h.__webglColorRenderbuffer[e]);const a=r.get(n[e]).__webglTexture;i.bindFramebuffer(t.FRAMEBUFFER,h.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,a,0)}i.bindFramebuffer(t.DRAW_FRAMEBUFFER,h.__webglMultisampledFramebuffer)}else if(e.depthBuffer&&!1===e.resolveDepthBuffer&&l){const i=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,[i])}},this.setupDepthRenderbuffer=N,this.setupFrameBufferTexture=D,this.useMultisampledRTT=B}function jl(t,e){return{convert:function(i,r=""){let n;const a=Pe.getTransfer(r);if(i===Z)return t.UNSIGNED_BYTE;if(i===at)return t.UNSIGNED_SHORT_4_4_4_4;if(i===st)return t.UNSIGNED_SHORT_5_5_5_1;if(i===lt)return t.UNSIGNED_INT_5_9_9_9_REV;if(i===$)return t.BYTE;if(i===Q)return t.SHORT;if(i===tt)return t.UNSIGNED_SHORT;if(i===et)return t.INT;if(i===it)return t.UNSIGNED_INT;if(i===rt)return t.FLOAT;if(i===nt)return t.HALF_FLOAT;if(1021===i)return t.ALPHA;if(1022===i)return t.RGB;if(i===ct)return t.RGBA;if(1024===i)return t.LUMINANCE;if(1025===i)return t.LUMINANCE_ALPHA;if(i===ht)return t.DEPTH_COMPONENT;if(i===dt)return t.DEPTH_STENCIL;if(1028===i)return t.RED;if(i===ut)return t.RED_INTEGER;if(1030===i)return t.RG;if(i===pt)return t.RG_INTEGER;if(i===_t)return t.RGBA_INTEGER;if(i===mt||i===ft||i===gt||i===wt)if(a===Kt){if(n=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===n)return null;if(i===mt)return n.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===ft)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===gt)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===wt)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(n=e.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(i===mt)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===ft)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===gt)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===wt)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(i===vt||i===bt||i===yt||i===xt){if(n=e.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(i===vt)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===bt)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===yt)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===xt)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(i===St||i===Mt||i===Et){if(n=e.get("WEBGL_compressed_texture_etc"),null===n)return null;if(i===St||i===Mt)return a===Kt?n.COMPRESSED_SRGB8_ETC2:n.COMPRESSED_RGB8_ETC2;if(i===Et)return a===Kt?n.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:n.COMPRESSED_RGBA8_ETC2_EAC}if(i===Tt||i===At||i===Rt||i===Ct||i===Pt||i===It||i===Lt||i===Dt||i===Ut||i===Nt||i===Ft||i===Ot||i===zt||i===Bt){if(n=e.get("WEBGL_compressed_texture_astc"),null===n)return null;if(i===Tt)return a===Kt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:n.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===At)return a===Kt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:n.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===Rt)return a===Kt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:n.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===Ct)return a===Kt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:n.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===Pt)return a===Kt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:n.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===It)return a===Kt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:n.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===Lt)return a===Kt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:n.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===Dt)return a===Kt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:n.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===Ut)return a===Kt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:n.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===Nt)return a===Kt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:n.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===Ft)return a===Kt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:n.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===Ot)return a===Kt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:n.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===zt)return a===Kt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:n.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===Bt)return a===Kt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:n.COMPRESSED_RGBA_ASTC_12x12_KHR}if(i===kt||i===Ht||i===Vt){if(n=e.get("EXT_texture_compression_bptc"),null===n)return null;if(i===kt)return a===Kt?n.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:n.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===Ht)return n.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===Vt)return n.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(36283===i||i===Gt||i===jt||i===Wt){if(n=e.get("EXT_texture_compression_rgtc"),null===n)return null;if(i===kt)return n.COMPRESSED_RED_RGTC1_EXT;if(i===Gt)return n.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===jt)return n.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===Wt)return n.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return i===ot?t.UNSIGNED_INT_24_8:void 0!==t[i]?t[i]:null}}}class Wl{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,i){if(null===this.texture){const r=new Be;t.properties.get(r).__webglTexture=e.texture,e.depthNear===i.depthNear&&e.depthFar===i.depthFar||(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=r}}getMesh(t){if(null!==this.texture&&null===this.mesh){const e=t.cameras[0].viewport,i=new $r({vertexShader:"\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}",fragmentShader:"\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}",uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new Wr(new Ba(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class Xl extends ce{constructor(t,e){super();const i=this;let r=null,n=1,a=null,s="local-floor",o=1,l=null,c=null,h=null,d=null,u=null,p=null;const _=new Wl,m=e.getContextAttributes();let f=null,g=null;const w=[],v=[],b=new ve;let y=null;const x=new nn;x.viewport=new ke;const S=new nn;S.viewport=new ke;const M=[x,S],E=new os;let T=null,A=null;function R(t){const e=v.indexOf(t.inputSource);if(-1===e)return;const i=w[e];void 0!==i&&(i.update(t.inputSource,t.frame,l||a),i.dispatchEvent({type:t.type,data:t.inputSource}))}function C(){r.removeEventListener("select",R),r.removeEventListener("selectstart",R),r.removeEventListener("selectend",R),r.removeEventListener("squeeze",R),r.removeEventListener("squeezestart",R),r.removeEventListener("squeezeend",R),r.removeEventListener("end",C),r.removeEventListener("inputsourceschange",P);for(let t=0;t<w.length;t++){const e=v[t];null!==e&&(v[t]=null,w[t].disconnect(e))}T=null,A=null,_.reset(),t.setRenderTarget(f),u=null,d=null,h=null,r=null,g=null,N.stop(),i.isPresenting=!1,t.setPixelRatio(y),t.setSize(b.width,b.height,!1),i.dispatchEvent({type:"sessionend"})}function P(t){for(let e=0;e<t.removed.length;e++){const i=t.removed[e],r=v.indexOf(i);r>=0&&(v[r]=null,w[r].disconnect(i))}for(let e=0;e<t.added.length;e++){const i=t.added[e];let r=v.indexOf(i);if(-1===r){for(let t=0;t<w.length;t++){if(t>=v.length){v.push(i),r=t;break}if(null===v[t]){v[t]=i,r=t;break}}if(-1===r)break}const n=w[r];n&&n.connect(i)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=w[t];return void 0===e&&(e=new dn,w[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=w[t];return void 0===e&&(e=new dn,w[t]=e),e.getGripSpace()},this.getHand=function(t){let e=w[t];return void 0===e&&(e=new dn,w[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){n=t,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){s=t,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(t){l=t},this.getBaseLayer=function(){return null!==d?d:u},this.getBinding=function(){return h},this.getFrame=function(){return p},this.getSession=function(){return r},this.setSession=async function(c){if(r=c,null!==r){f=t.getRenderTarget(),r.addEventListener("select",R),r.addEventListener("selectstart",R),r.addEventListener("selectend",R),r.addEventListener("squeeze",R),r.addEventListener("squeezestart",R),r.addEventListener("squeezeend",R),r.addEventListener("end",C),r.addEventListener("inputsourceschange",P),!0!==m.xrCompatible&&await e.makeXRCompatible(),y=t.getPixelRatio(),t.getSize(b);if("undefined"!=typeof XRWebGLBinding&&"createProjectionLayer"in XRWebGLBinding.prototype){let i=null,a=null,s=null;m.depth&&(s=m.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,i=m.stencil?dt:ht,a=m.stencil?ot:it);const o={colorFormat:e.RGBA8,depthFormat:s,scaleFactor:n};h=new XRWebGLBinding(r,e),d=h.createProjectionLayer(o),r.updateRenderState({layers:[d]}),t.setPixelRatio(1),t.setSize(d.textureWidth,d.textureHeight,!1),g=new Ve(d.textureWidth,d.textureHeight,{format:ct,type:Z,depthTexture:new Hn(d.textureWidth,d.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,i),stencilBuffer:m.stencil,colorSpace:t.outputColorSpace,samples:m.antialias?4:0,resolveDepthBuffer:!1===d.ignoreDepthValues,resolveStencilBuffer:!1===d.ignoreDepthValues})}else{const i={antialias:m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:n};u=new XRWebGLLayer(r,e,i),r.updateRenderState({baseLayer:u}),t.setPixelRatio(1),t.setSize(u.framebufferWidth,u.framebufferHeight,!1),g=new Ve(u.framebufferWidth,u.framebufferHeight,{format:ct,type:Z,colorSpace:t.outputColorSpace,stencilBuffer:m.stencil,resolveDepthBuffer:!1===u.ignoreDepthValues,resolveStencilBuffer:!1===u.ignoreDepthValues})}g.isXRRenderTarget=!0,this.setFoveation(o),l=null,a=await r.requestReferenceSpace(s),N.setContext(r),N.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==r)return r.environmentBlendMode},this.getDepthTexture=function(){return _.getDepthTexture()};const I=new Xe,L=new Xe;function D(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===r)return;let e=t.near,i=t.far;null!==_.texture&&(_.depthNear>0&&(e=_.depthNear),_.depthFar>0&&(i=_.depthFar)),E.near=S.near=x.near=e,E.far=S.far=x.far=i,T===E.near&&A===E.far||(r.updateRenderState({depthNear:E.near,depthFar:E.far}),T=E.near,A=E.far),x.layers.mask=2|t.layers.mask,S.layers.mask=4|t.layers.mask,E.layers.mask=x.layers.mask|S.layers.mask;const n=t.parent,a=E.cameras;D(E,n);for(let r=0;r<a.length;r++)D(a[r],n);2===a.length?function(t,e,i){I.setFromMatrixPosition(e.matrixWorld),L.setFromMatrixPosition(i.matrixWorld);const r=I.distanceTo(L),n=e.projectionMatrix.elements,a=i.projectionMatrix.elements,s=n[14]/(n[10]-1),o=n[14]/(n[10]+1),l=(n[9]+1)/n[5],c=(n[9]-1)/n[5],h=(n[8]-1)/n[0],d=(a[8]+1)/a[0],u=s*h,p=s*d,_=r/(-h+d),m=_*-h;if(e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(_),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert(),-1===n[10])t.projectionMatrix.copy(e.projectionMatrix),t.projectionMatrixInverse.copy(e.projectionMatrixInverse);else{const e=s+_,i=o+_,n=u-m,a=p+(r-m),h=l*o/i*e,d=c*o/i*e;t.projectionMatrix.makePerspective(n,a,h,d,e,i),t.projectionMatrixInverse.copy(t.projectionMatrix).invert()}}(E,x,S):E.projectionMatrix.copy(x.projectionMatrix),function(t,e,i){null===i?t.matrix.copy(e.matrixWorld):(t.matrix.copy(i.matrixWorld),t.matrix.invert(),t.matrix.multiply(e.matrixWorld));t.matrix.decompose(t.position,t.quaternion,t.scale),t.updateMatrixWorld(!0),t.projectionMatrix.copy(e.projectionMatrix),t.projectionMatrixInverse.copy(e.projectionMatrixInverse),t.isPerspectiveCamera&&(t.fov=2*ue*Math.atan(1/t.projectionMatrix.elements[5]),t.zoom=1)}(t,E,n)},this.getCamera=function(){return E},this.getFoveation=function(){if(null!==d||null!==u)return o},this.setFoveation=function(t){o=t,null!==d&&(d.fixedFoveation=t),null!==u&&void 0!==u.fixedFoveation&&(u.fixedFoveation=t)},this.hasDepthSensing=function(){return null!==_.texture},this.getDepthSensingMesh=function(){return _.getMesh(E)};let U=null;const N=new _s;N.setAnimationLoop((function(e,n){if(c=n.getViewerPose(l||a),p=n,null!==c){const e=c.views;null!==u&&(t.setRenderTargetFramebuffer(g,u.framebuffer),t.setRenderTarget(g));let i=!1;e.length!==E.cameras.length&&(E.cameras.length=0,i=!0);for(let r=0;r<e.length;r++){const n=e[r];let a=null;if(null!==u)a=u.getViewport(n);else{const e=h.getViewSubImage(d,n);a=e.viewport,0===r&&(t.setRenderTargetTextures(g,e.colorTexture,e.depthStencilTexture),t.setRenderTarget(g))}let s=M[r];void 0===s&&(s=new nn,s.layers.enable(r),s.viewport=new ke,M[r]=s),s.matrix.fromArray(n.transform.matrix),s.matrix.decompose(s.position,s.quaternion,s.scale),s.projectionMatrix.fromArray(n.projectionMatrix),s.projectionMatrixInverse.copy(s.projectionMatrix).invert(),s.viewport.set(a.x,a.y,a.width,a.height),0===r&&(E.matrix.copy(s.matrix),E.matrix.decompose(E.position,E.quaternion,E.scale)),!0===i&&E.cameras.push(s)}const n=r.enabledFeatures;if(n&&n.includes("depth-sensing")&&"gpu-optimized"==r.depthUsage&&h){const i=h.getDepthInformation(e[0]);i&&i.isValid&&i.texture&&_.init(t,i,r.renderState)}}for(let t=0;t<w.length;t++){const e=v[t],i=w[t];null!==e&&void 0!==i&&i.update(e,n,l||a)}U&&U(e,n),n.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:n}),p=null})),this.setAnimationLoop=function(t){U=t},this.dispose=function(){}}}const ql=new Li,Yl=new xi;function Jl(t,e){function i(t,e){!0===t.matrixAutoUpdate&&t.updateMatrix(),e.value.copy(t.matrix)}function r(t,r){t.opacity.value=r.opacity,r.color&&t.diffuse.value.copy(r.color),r.emissive&&t.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(t.map.value=r.map,i(r.map,t.mapTransform)),r.alphaMap&&(t.alphaMap.value=r.alphaMap,i(r.alphaMap,t.alphaMapTransform)),r.bumpMap&&(t.bumpMap.value=r.bumpMap,i(r.bumpMap,t.bumpMapTransform),t.bumpScale.value=r.bumpScale,1===r.side&&(t.bumpScale.value*=-1)),r.normalMap&&(t.normalMap.value=r.normalMap,i(r.normalMap,t.normalMapTransform),t.normalScale.value.copy(r.normalScale),1===r.side&&t.normalScale.value.negate()),r.displacementMap&&(t.displacementMap.value=r.displacementMap,i(r.displacementMap,t.displacementMapTransform),t.displacementScale.value=r.displacementScale,t.displacementBias.value=r.displacementBias),r.emissiveMap&&(t.emissiveMap.value=r.emissiveMap,i(r.emissiveMap,t.emissiveMapTransform)),r.specularMap&&(t.specularMap.value=r.specularMap,i(r.specularMap,t.specularMapTransform)),r.alphaTest>0&&(t.alphaTest.value=r.alphaTest);const n=e.get(r),a=n.envMap,s=n.envMapRotation;a&&(t.envMap.value=a,ql.copy(s),ql.x*=-1,ql.y*=-1,ql.z*=-1,a.isCubeTexture&&!1===a.isRenderTargetTexture&&(ql.y*=-1,ql.z*=-1),t.envMapRotation.value.setFromMatrix4(Yl.makeRotationFromEuler(ql)),t.flipEnvMap.value=a.isCubeTexture&&!1===a.isRenderTargetTexture?-1:1,t.reflectivity.value=r.reflectivity,t.ior.value=r.ior,t.refractionRatio.value=r.refractionRatio),r.lightMap&&(t.lightMap.value=r.lightMap,t.lightMapIntensity.value=r.lightMapIntensity,i(r.lightMap,t.lightMapTransform)),r.aoMap&&(t.aoMap.value=r.aoMap,t.aoMapIntensity.value=r.aoMapIntensity,i(r.aoMap,t.aoMapTransform))}return{refreshFogUniforms:function(e,i){i.color.getRGB(e.fogColor.value,Kr(t)),i.isFog?(e.fogNear.value=i.near,e.fogFar.value=i.far):i.isFogExp2&&(e.fogDensity.value=i.density)},refreshMaterialUniforms:function(t,n,a,s,o){n.isMeshBasicMaterial||n.isMeshLambertMaterial?r(t,n):n.isMeshToonMaterial?(r(t,n),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(t,n)):n.isMeshPhongMaterial?(r(t,n),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4)}(t,n)):n.isMeshStandardMaterial?(r(t,n),function(t,e){t.metalness.value=e.metalness,e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap,i(e.metalnessMap,t.metalnessMapTransform));t.roughness.value=e.roughness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap,i(e.roughnessMap,t.roughnessMapTransform));e.envMap&&(t.envMapIntensity.value=e.envMapIntensity)}(t,n),n.isMeshPhysicalMaterial&&function(t,e,r){t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap,i(e.sheenColorMap,t.sheenColorMapTransform)),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap,i(e.sheenRoughnessMap,t.sheenRoughnessMapTransform)));e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap,i(e.clearcoatMap,t.clearcoatMapTransform)),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap,i(e.clearcoatRoughnessMap,t.clearcoatRoughnessMapTransform)),e.clearcoatNormalMap&&(t.clearcoatNormalMap.value=e.clearcoatNormalMap,i(e.clearcoatNormalMap,t.clearcoatNormalMapTransform),t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),1===e.side&&t.clearcoatNormalScale.value.negate()));e.dispersion>0&&(t.dispersion.value=e.dispersion);e.iridescence>0&&(t.iridescence.value=e.iridescence,t.iridescenceIOR.value=e.iridescenceIOR,t.iridescenceThicknessMinimum.value=e.iridescenceThicknessRange[0],t.iridescenceThicknessMaximum.value=e.iridescenceThicknessRange[1],e.iridescenceMap&&(t.iridescenceMap.value=e.iridescenceMap,i(e.iridescenceMap,t.iridescenceMapTransform)),e.iridescenceThicknessMap&&(t.iridescenceThicknessMap.value=e.iridescenceThicknessMap,i(e.iridescenceThicknessMap,t.iridescenceThicknessMapTransform)));e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=r.texture,t.transmissionSamplerSize.value.set(r.width,r.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap,i(e.transmissionMap,t.transmissionMapTransform)),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap,i(e.thicknessMap,t.thicknessMapTransform)),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor));e.anisotropy>0&&(t.anisotropyVector.value.set(e.anisotropy*Math.cos(e.anisotropyRotation),e.anisotropy*Math.sin(e.anisotropyRotation)),e.anisotropyMap&&(t.anisotropyMap.value=e.anisotropyMap,i(e.anisotropyMap,t.anisotropyMapTransform)));t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap,i(e.specularColorMap,t.specularColorMapTransform));e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap,i(e.specularIntensityMap,t.specularIntensityMapTransform))}(t,n,o)):n.isMeshMatcapMaterial?(r(t,n),function(t,e){e.matcap&&(t.matcap.value=e.matcap)}(t,n)):n.isMeshDepthMaterial?r(t,n):n.isMeshDistanceMaterial?(r(t,n),function(t,i){const r=e.get(i).light;t.referencePosition.value.setFromMatrixPosition(r.matrixWorld),t.nearDistance.value=r.shadow.camera.near,t.farDistance.value=r.shadow.camera.far}(t,n)):n.isMeshNormalMaterial?r(t,n):n.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,e.map&&(t.map.value=e.map,i(e.map,t.mapTransform))}(t,n),n.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,n)):n.isPointsMaterial?function(t,e,r,n){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*r,t.scale.value=.5*n,e.map&&(t.map.value=e.map,i(e.map,t.uvTransform));e.alphaMap&&(t.alphaMap.value=e.alphaMap,i(e.alphaMap,t.alphaMapTransform));e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,n,a,s):n.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map,i(e.map,t.mapTransform));e.alphaMap&&(t.alphaMap.value=e.alphaMap,i(e.alphaMap,t.alphaMapTransform));e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,n):n.isShadowMaterial?(t.color.value.copy(n.color),t.opacity.value=n.opacity):n.isShaderMaterial&&(n.uniformsNeedUpdate=!1)}}}function Kl(t,e,i,r){let n={},a={},s=[];const o=t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS);function l(t,e,i,r){const n=t.value,a=e+"_"+i;if(void 0===r[a])return r[a]="number"==typeof n||"boolean"==typeof n?n:n.clone(),!0;{const t=r[a];if("number"==typeof n||"boolean"==typeof n){if(t!==n)return r[a]=n,!0}else if(!1===t.equals(n))return t.copy(n),!0}return!1}function c(t){const e={boundary:0,storage:0};return"number"==typeof t||"boolean"==typeof t?(e.boundary=4,e.storage=4):t.isVector2?(e.boundary=8,e.storage=8):t.isVector3||t.isColor?(e.boundary=16,e.storage=12):t.isVector4?(e.boundary=16,e.storage=16):t.isMatrix3?(e.boundary=48,e.storage=48):t.isMatrix4?(e.boundary=64,e.storage=64):t.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",t),e}function h(e){const i=e.target;i.removeEventListener("dispose",h);const r=s.indexOf(i.__bindingPointIndex);s.splice(r,1),t.deleteBuffer(n[i.id]),delete n[i.id],delete a[i.id]}return{bind:function(t,e){const i=e.program;r.uniformBlockBinding(t,i)},update:function(i,d){let u=n[i.id];void 0===u&&(!function(t){const e=t.uniforms;let i=0;const r=16;for(let a=0,s=e.length;a<s;a++){const t=Array.isArray(e[a])?e[a]:[e[a]];for(let e=0,n=t.length;e<n;e++){const n=t[e],a=Array.isArray(n.value)?n.value:[n.value];for(let t=0,e=a.length;t<e;t++){const e=c(a[t]),s=i%r,o=s%e.boundary,l=s+o;i+=o,0!==l&&r-l<e.storage&&(i+=r-l),n.__data=new Float32Array(e.storage/Float32Array.BYTES_PER_ELEMENT),n.__offset=i,i+=e.storage}}}const n=i%r;n>0&&(i+=r-n);t.__size=i,t.__cache={}}(i),u=function(e){const i=function(){for(let t=0;t<o;t++)if(-1===s.indexOf(t))return s.push(t),t;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();e.__bindingPointIndex=i;const r=t.createBuffer(),n=e.__size,a=e.usage;return t.bindBuffer(t.UNIFORM_BUFFER,r),t.bufferData(t.UNIFORM_BUFFER,n,a),t.bindBuffer(t.UNIFORM_BUFFER,null),t.bindBufferBase(t.UNIFORM_BUFFER,i,r),r}(i),n[i.id]=u,i.addEventListener("dispose",h));const p=d.program;r.updateUBOMapping(i,p);const _=e.render.frame;a[i.id]!==_&&(!function(e){const i=n[e.id],r=e.uniforms,a=e.__cache;t.bindBuffer(t.UNIFORM_BUFFER,i);for(let n=0,s=r.length;n<s;n++){const e=Array.isArray(r[n])?r[n]:[r[n]];for(let i=0,r=e.length;i<r;i++){const r=e[i];if(!0===l(r,n,i,a)){const e=r.__offset,i=Array.isArray(r.value)?r.value:[r.value];let n=0;for(let a=0;a<i.length;a++){const s=i[a],o=c(s);"number"==typeof s||"boolean"==typeof s?(r.__data[0]=s,t.bufferSubData(t.UNIFORM_BUFFER,e+n,r.__data)):s.isMatrix3?(r.__data[0]=s.elements[0],r.__data[1]=s.elements[1],r.__data[2]=s.elements[2],r.__data[3]=0,r.__data[4]=s.elements[3],r.__data[5]=s.elements[4],r.__data[6]=s.elements[5],r.__data[7]=0,r.__data[8]=s.elements[6],r.__data[9]=s.elements[7],r.__data[10]=s.elements[8],r.__data[11]=0):(s.toArray(r.__data,n),n+=o.storage/Float32Array.BYTES_PER_ELEMENT)}t.bufferSubData(t.UNIFORM_BUFFER,e,r.__data)}}}t.bindBuffer(t.UNIFORM_BUFFER,null)}(i),a[i.id]=_)},dispose:function(){for(const e in n)t.deleteBuffer(n[e]);s=[],n={},a={}}}}class Zl{constructor(t={}){const{canvas:e=Me(),context:r=null,depth:n=!0,stencil:a=!1,alpha:s=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:d=!1,reverseDepthBuffer:u=!1}=t;let p;if(this.isWebGLRenderer=!0,null!==r){if("undefined"!=typeof WebGLRenderingContext&&r instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");p=r.getContextAttributes().alpha}else p=s;const _=new Uint32Array(4),m=new Int32Array(4);let f=null,g=null;const w=[],v=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=0,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const b=this;let y=!1;this._outputColorSpace=qt;let x=0,S=0,M=null,E=-1,T=null;const A=new ke,R=new ke;let C=null;const P=new _r(0);let I=0,L=e.width,D=e.height,U=1,N=null,F=null;const O=new ke(0,0,L,D),z=new ke(0,0,L,D);let B=!1;const k=new bn;let H=!1,V=!1;const G=new xi,j=new xi,W=new Xe,X=new ke,q={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Y=!1;function J(){return null===M?U:1}let $,Q,et,rt,lt,ct,ht,dt,mt,ft,gt,wt,vt,bt,yt,xt,St,Mt,Et,Tt,At,Rt,Ct,Pt,It=r;function Lt(t,i){return e.getContext(t,i)}try{const t={alpha:!0,depth:n,stencil:a,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:d};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${i}`),e.addEventListener("webglcontextlost",Nt,!1),e.addEventListener("webglcontextrestored",Ft,!1),e.addEventListener("webglcontextcreationerror",Ot,!1),null===It){const e="webgl2";if(It=Lt(e,t),null===It)throw Lt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(re){throw console.error("THREE.WebGLRenderer: "+re.message),re}function Dt(){$=new qs(It),$.init(),Rt=new jl(It,$),Q=new Es(It,$,t,Rt),et=new Vl(It,$),Q.reverseDepthBuffer&&u&&et.buffers.depth.setReversed(!0),rt=new Ks(It),lt=new Cl,ct=new Gl(It,$,et,lt,Q,Rt,rt),ht=new As(b),dt=new Xs(b),mt=new ms(It),Ct=new Ss(It,mt),ft=new Ys(It,mt,rt,Ct),gt=new $s(It,ft,mt,rt),Et=new Zs(It,Q,ct),xt=new Ts(lt),wt=new Rl(b,ht,dt,$,Q,Ct,xt),vt=new Jl(b,lt),bt=new Dl,yt=new Bl($),Mt=new xs(b,ht,dt,et,gt,p,l),St=new kl(b,gt,Q),Pt=new Kl(It,rt,Q,et),Tt=new Ms(It,$,rt),At=new Js(It,$,rt),rt.programs=wt.programs,b.capabilities=Q,b.extensions=$,b.properties=lt,b.renderLists=bt,b.shadowMap=St,b.state=et,b.info=rt}Dt();const Ut=new Xl(b,It);function Nt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),y=!0}function Ft(){console.log("THREE.WebGLRenderer: Context Restored."),y=!1;const t=rt.autoReset,e=St.enabled,i=St.autoUpdate,r=St.needsUpdate,n=St.type;Dt(),rt.autoReset=t,St.enabled=e,St.autoUpdate=i,St.needsUpdate=r,St.type=n}function Ot(t){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",t.statusMessage)}function zt(t){const e=t.target;e.removeEventListener("dispose",zt),function(t){(function(t){const e=lt.get(t).programs;void 0!==e&&(e.forEach((function(t){wt.releaseProgram(t)})),t.isShaderMaterial&&wt.releaseShaderCache(t))})(t),lt.remove(t)}(e)}function Bt(t,e,i){!0===t.transparent&&2===t.side&&!1===t.forceSinglePass?(t.side=1,t.needsUpdate=!0,Zt(t,e,i),t.side=0,t.needsUpdate=!0,Zt(t,e,i),t.side=2):Zt(t,e,i)}this.xr=Ut,this.getContext=function(){return It},this.getContextAttributes=function(){return It.getContextAttributes()},this.forceContextLoss=function(){const t=$.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=$.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return U},this.setPixelRatio=function(t){void 0!==t&&(U=t,this.setSize(L,D,!1))},this.getSize=function(t){return t.set(L,D)},this.setSize=function(t,i,r=!0){Ut.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(L=t,D=i,e.width=Math.floor(t*U),e.height=Math.floor(i*U),!0===r&&(e.style.width=t+"px",e.style.height=i+"px"),this.setViewport(0,0,t,i))},this.getDrawingBufferSize=function(t){return t.set(L*U,D*U).floor()},this.setDrawingBufferSize=function(t,i,r){L=t,D=i,U=r,e.width=Math.floor(t*r),e.height=Math.floor(i*r),this.setViewport(0,0,t,i)},this.getCurrentViewport=function(t){return t.copy(A)},this.getViewport=function(t){return t.copy(O)},this.setViewport=function(t,e,i,r){t.isVector4?O.set(t.x,t.y,t.z,t.w):O.set(t,e,i,r),et.viewport(A.copy(O).multiplyScalar(U).round())},this.getScissor=function(t){return t.copy(z)},this.setScissor=function(t,e,i,r){t.isVector4?z.set(t.x,t.y,t.z,t.w):z.set(t,e,i,r),et.scissor(R.copy(z).multiplyScalar(U).round())},this.getScissorTest=function(){return B},this.setScissorTest=function(t){et.setScissorTest(B=t)},this.setOpaqueSort=function(t){N=t},this.setTransparentSort=function(t){F=t},this.getClearColor=function(t){return t.copy(Mt.getClearColor())},this.setClearColor=function(){Mt.setClearColor(...arguments)},this.getClearAlpha=function(){return Mt.getClearAlpha()},this.setClearAlpha=function(){Mt.setClearAlpha(...arguments)},this.clear=function(t=!0,e=!0,i=!0){let r=0;if(t){let t=!1;if(null!==M){const e=M.texture.format;t=e===_t||e===pt||e===ut}if(t){const t=M.texture.type,e=t===Z||t===it||t===tt||t===ot||t===at||t===st,i=Mt.getClearColor(),r=Mt.getClearAlpha(),n=i.r,a=i.g,s=i.b;e?(_[0]=n,_[1]=a,_[2]=s,_[3]=r,It.clearBufferuiv(It.COLOR,0,_)):(m[0]=n,m[1]=a,m[2]=s,m[3]=r,It.clearBufferiv(It.COLOR,0,m))}else r|=It.COLOR_BUFFER_BIT}e&&(r|=It.DEPTH_BUFFER_BIT),i&&(r|=It.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),It.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Nt,!1),e.removeEventListener("webglcontextrestored",Ft,!1),e.removeEventListener("webglcontextcreationerror",Ot,!1),Mt.dispose(),bt.dispose(),yt.dispose(),lt.dispose(),ht.dispose(),dt.dispose(),gt.dispose(),Ct.dispose(),Pt.dispose(),wt.dispose(),Ut.dispose(),Ut.removeEventListener("sessionstart",Ht),Ut.removeEventListener("sessionend",Vt),Gt.stop()},this.renderBufferDirect=function(t,e,i,r,n,a){null===e&&(e=q);const s=n.isMesh&&n.matrixWorld.determinant()<0,o=function(t,e,i,r,n){!0!==e.isScene&&(e=q);ct.resetTextureUnits();const a=e.fog,s=r.isMeshStandardMaterial?e.environment:null,o=null===M?b.outputColorSpace:!0===M.isXRRenderTarget?M.texture.colorSpace:Yt,l=(r.isMeshStandardMaterial?dt:ht).get(r.envMap||s),c=!0===r.vertexColors&&!!i.attributes.color&&4===i.attributes.color.itemSize,h=!!i.attributes.tangent&&(!!r.normalMap||r.anisotropy>0),d=!!i.morphAttributes.position,u=!!i.morphAttributes.normal,p=!!i.morphAttributes.color;let _=0;r.toneMapped&&(null!==M&&!0!==M.isXRRenderTarget||(_=b.toneMapping));const m=i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color,f=void 0!==m?m.length:0,w=lt.get(r),v=g.state.lights;if(!0===H&&(!0===V||t!==T)){const e=t===T&&r.id===E;xt.setState(r,t,e)}let y=!1;r.version===w.__version?w.needsLights&&w.lightsStateVersion!==v.state.version||w.outputColorSpace!==o||n.isBatchedMesh&&!1===w.batching?y=!0:n.isBatchedMesh||!0!==w.batching?n.isBatchedMesh&&!0===w.batchingColor&&null===n.colorTexture||n.isBatchedMesh&&!1===w.batchingColor&&null!==n.colorTexture||n.isInstancedMesh&&!1===w.instancing?y=!0:n.isInstancedMesh||!0!==w.instancing?n.isSkinnedMesh&&!1===w.skinning?y=!0:n.isSkinnedMesh||!0!==w.skinning?n.isInstancedMesh&&!0===w.instancingColor&&null===n.instanceColor||n.isInstancedMesh&&!1===w.instancingColor&&null!==n.instanceColor||n.isInstancedMesh&&!0===w.instancingMorph&&null===n.morphTexture||n.isInstancedMesh&&!1===w.instancingMorph&&null!==n.morphTexture||w.envMap!==l||!0===r.fog&&w.fog!==a?y=!0:void 0===w.numClippingPlanes||w.numClippingPlanes===xt.numPlanes&&w.numIntersection===xt.numIntersection?(w.vertexAlphas!==c||w.vertexTangents!==h||w.morphTargets!==d||w.morphNormals!==u||w.morphColors!==p||w.toneMapping!==_||w.morphTargetsCount!==f)&&(y=!0):y=!0:y=!0:y=!0:y=!0:(y=!0,w.__version=r.version);let x=w.currentProgram;!0===y&&(x=Zt(r,e,n));let S=!1,A=!1,R=!1;const C=x.getUniforms(),P=w.uniforms;et.useProgram(x.program)&&(S=!0,A=!0,R=!0);r.id!==E&&(E=r.id,A=!0);if(S||T!==t){et.buffers.depth.getReversed()?(G.copy(t.projectionMatrix),function(t){const e=t.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}(G),function(t){const e=t.elements;-1===e[11]?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=1-e[14])}(G),C.setValue(It,"projectionMatrix",G)):C.setValue(It,"projectionMatrix",t.projectionMatrix),C.setValue(It,"viewMatrix",t.matrixWorldInverse);const e=C.map.cameraPosition;void 0!==e&&e.setValue(It,W.setFromMatrixPosition(t.matrixWorld)),Q.logarithmicDepthBuffer&&C.setValue(It,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&C.setValue(It,"isOrthographic",!0===t.isOrthographicCamera),T!==t&&(T=t,A=!0,R=!0)}if(n.isSkinnedMesh){C.setOptional(It,n,"bindMatrix"),C.setOptional(It,n,"bindMatrixInverse");const t=n.skeleton;t&&(null===t.boneTexture&&t.computeBoneTexture(),C.setValue(It,"boneTexture",t.boneTexture,ct))}n.isBatchedMesh&&(C.setOptional(It,n,"batchingTexture"),C.setValue(It,"batchingTexture",n._matricesTexture,ct),C.setOptional(It,n,"batchingIdTexture"),C.setValue(It,"batchingIdTexture",n._indirectTexture,ct),C.setOptional(It,n,"batchingColorTexture"),null!==n._colorsTexture&&C.setValue(It,"batchingColorTexture",n._colorsTexture,ct));const I=i.morphAttributes;void 0===I.position&&void 0===I.normal&&void 0===I.color||Et.update(n,i,x);(A||w.receiveShadow!==n.receiveShadow)&&(w.receiveShadow=n.receiveShadow,C.setValue(It,"receiveShadow",n.receiveShadow));r.isMeshGouraudMaterial&&null!==r.envMap&&(P.envMap.value=l,P.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1);r.isMeshStandardMaterial&&null===r.envMap&&null!==e.environment&&(P.envMapIntensity.value=e.environmentIntensity);A&&(C.setValue(It,"toneMappingExposure",b.toneMappingExposure),w.needsLights&&(N=R,(L=P).ambientLightColor.needsUpdate=N,L.lightProbe.needsUpdate=N,L.directionalLights.needsUpdate=N,L.directionalLightShadows.needsUpdate=N,L.pointLights.needsUpdate=N,L.pointLightShadows.needsUpdate=N,L.spotLights.needsUpdate=N,L.spotLightShadows.needsUpdate=N,L.rectAreaLights.needsUpdate=N,L.hemisphereLights.needsUpdate=N),a&&!0===r.fog&&vt.refreshFogUniforms(P,a),vt.refreshMaterialUniforms(P,r,U,D,g.state.transmissionRenderTarget[t.id]),nl.upload(It,$t(w),P,ct));var L,N;r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(nl.upload(It,$t(w),P,ct),r.uniformsNeedUpdate=!1);r.isSpriteMaterial&&C.setValue(It,"center",n.center);if(C.setValue(It,"modelViewMatrix",n.modelViewMatrix),C.setValue(It,"normalMatrix",n.normalMatrix),C.setValue(It,"modelMatrix",n.matrixWorld),r.isShaderMaterial||r.isRawShaderMaterial){const t=r.uniformsGroups;for(let e=0,i=t.length;e<i;e++){const i=t[e];Pt.update(i,x),Pt.bind(i,x)}}return x}(t,e,i,r,n);et.setMaterial(r,s);let l=i.index,c=1;if(!0===r.wireframe){if(l=ft.getWireframeAttribute(i),void 0===l)return;c=2}const h=i.drawRange,d=i.attributes.position;let u=h.start*c,p=(h.start+h.count)*c;null!==a&&(u=Math.max(u,a.start*c),p=Math.min(p,(a.start+a.count)*c)),null!==l?(u=Math.max(u,0),p=Math.min(p,l.count)):null!=d&&(u=Math.max(u,0),p=Math.min(p,d.count));const _=p-u;if(_<0||_===1/0)return;let m;Ct.setup(n,r,o,i,l);let f=Tt;if(null!==l&&(m=mt.get(l),f=At,f.setIndex(m)),n.isMesh)!0===r.wireframe?(et.setLineWidth(r.wireframeLinewidth*J()),f.setMode(It.LINES)):f.setMode(It.TRIANGLES);else if(n.isLine){let t=r.linewidth;void 0===t&&(t=1),et.setLineWidth(t*J()),n.isLineSegments?f.setMode(It.LINES):n.isLineLoop?f.setMode(It.LINE_LOOP):f.setMode(It.LINE_STRIP)}else n.isPoints?f.setMode(It.POINTS):n.isSprite&&f.setMode(It.TRIANGLES);if(n.isBatchedMesh)if(null!==n._multiDrawInstances)Te("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),f.renderMultiDrawInstances(n._multiDrawStarts,n._multiDrawCounts,n._multiDrawCount,n._multiDrawInstances);else if($.get("WEBGL_multi_draw"))f.renderMultiDraw(n._multiDrawStarts,n._multiDrawCounts,n._multiDrawCount);else{const t=n._multiDrawStarts,e=n._multiDrawCounts,i=n._multiDrawCount,a=l?mt.get(l).bytesPerElement:1,s=lt.get(r).currentProgram.getUniforms();for(let r=0;r<i;r++)s.setValue(It,"_gl_DrawID",r),f.render(t[r]/a,e[r])}else if(n.isInstancedMesh)f.renderInstances(u,_,n.count);else if(i.isInstancedBufferGeometry){const t=void 0!==i._maxInstanceCount?i._maxInstanceCount:1/0,e=Math.min(i.instanceCount,t);f.renderInstances(u,_,e)}else f.render(u,_)},this.compile=function(t,e,i=null){null===i&&(i=t),g=yt.get(i),g.init(e),v.push(g),i.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(g.pushLight(t),t.castShadow&&g.pushShadow(t))})),t!==i&&t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(g.pushLight(t),t.castShadow&&g.pushShadow(t))})),g.setupLights();const r=new Set;return t.traverse((function(t){if(!(t.isMesh||t.isPoints||t.isLine||t.isSprite))return;const e=t.material;if(e)if(Array.isArray(e))for(let n=0;n<e.length;n++){const a=e[n];Bt(a,i,t),r.add(a)}else Bt(e,i,t),r.add(e)})),g=v.pop(),r},this.compileAsync=function(t,e,i=null){const r=this.compile(t,e,i);return new Promise((e=>{function i(){r.forEach((function(t){lt.get(t).currentProgram.isReady()&&r.delete(t)})),0!==r.size?setTimeout(i,10):e(t)}null!==$.get("KHR_parallel_shader_compile")?i():setTimeout(i,10)}))};let kt=null;function Ht(){Gt.stop()}function Vt(){Gt.start()}const Gt=new _s;function jt(t,e,i,r){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)i=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)g.pushLight(t),t.castShadow&&g.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||k.intersectsSprite(t)){r&&X.setFromMatrixPosition(t.matrixWorld).applyMatrix4(j);const e=gt.update(t),n=t.material;n.visible&&f.push(t,e,n,i,X.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(!t.frustumCulled||k.intersectsObject(t))){const e=gt.update(t),n=t.material;if(r&&(void 0!==t.boundingSphere?(null===t.boundingSphere&&t.computeBoundingSphere(),X.copy(t.boundingSphere.center)):(null===e.boundingSphere&&e.computeBoundingSphere(),X.copy(e.boundingSphere.center)),X.applyMatrix4(t.matrixWorld).applyMatrix4(j)),Array.isArray(n)){const r=e.groups;for(let a=0,s=r.length;a<s;a++){const s=r[a],o=n[s.materialIndex];o&&o.visible&&f.push(t,e,o,i,X.z,s)}}else n.visible&&f.push(t,e,n,i,X.z,null)}const n=t.children;for(let a=0,s=n.length;a<s;a++)jt(n[a],e,i,r)}function Wt(t,e,i,r){const n=t.opaque,a=t.transmissive,s=t.transparent;g.setupLightsView(i),!0===H&&xt.setGlobalState(b.clippingPlanes,i),r&&et.viewport(A.copy(r)),n.length>0&&Jt(n,e,i),a.length>0&&Jt(a,e,i),s.length>0&&Jt(s,e,i),et.buffers.depth.setTest(!0),et.buffers.depth.setMask(!0),et.buffers.color.setMask(!0),et.setPolygonOffset(!1)}function Xt(t,e,i,r){if(null!==(!0===i.isScene?i.overrideMaterial:null))return;void 0===g.state.transmissionRenderTarget[r.id]&&(g.state.transmissionRenderTarget[r.id]=new Ve(1,1,{generateMipmaps:!0,type:$.has("EXT_color_buffer_half_float")||$.has("EXT_color_buffer_float")?nt:Z,minFilter:K,samples:4,stencilBuffer:a,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Pe.workingColorSpace}));const n=g.state.transmissionRenderTarget[r.id],s=r.viewport||A;n.setSize(s.z*b.transmissionResolutionScale,s.w*b.transmissionResolutionScale);const o=b.getRenderTarget();b.setRenderTarget(n),b.getClearColor(P),I=b.getClearAlpha(),I<1&&b.setClearColor(16777215,.5),b.clear(),Y&&Mt.render(i);const l=b.toneMapping;b.toneMapping=0;const c=r.viewport;if(void 0!==r.viewport&&(r.viewport=void 0),g.setupLightsView(r),!0===H&&xt.setGlobalState(b.clippingPlanes,r),Jt(t,i,r),ct.updateMultisampleRenderTarget(n),ct.updateRenderTargetMipmap(n),!1===$.has("WEBGL_multisampled_render_to_texture")){let t=!1;for(let n=0,a=e.length;n<a;n++){const a=e[n],s=a.object,o=a.geometry,l=a.material,c=a.group;if(2===l.side&&s.layers.test(r.layers)){const e=l.side;l.side=1,l.needsUpdate=!0,Kt(s,i,r,o,l,c),l.side=e,l.needsUpdate=!0,t=!0}}!0===t&&(ct.updateMultisampleRenderTarget(n),ct.updateRenderTargetMipmap(n))}b.setRenderTarget(o),b.setClearColor(P,I),void 0!==c&&(r.viewport=c),b.toneMapping=l}function Jt(t,e,i){const r=!0===e.isScene?e.overrideMaterial:null;for(let n=0,a=t.length;n<a;n++){const a=t[n],s=a.object,o=a.geometry,l=a.group;let c=a.material;!0===c.allowOverride&&null!==r&&(c=r),s.layers.test(i.layers)&&Kt(s,e,i,o,c,l)}}function Kt(t,e,i,r,n,a){t.onBeforeRender(b,e,i,r,n,a),t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),n.onBeforeRender(b,e,i,r,t,a),!0===n.transparent&&2===n.side&&!1===n.forceSinglePass?(n.side=1,n.needsUpdate=!0,b.renderBufferDirect(i,e,r,n,t,a),n.side=0,n.needsUpdate=!0,b.renderBufferDirect(i,e,r,n,t,a),n.side=2):b.renderBufferDirect(i,e,r,n,t,a),t.onAfterRender(b,e,i,r,n,a)}function Zt(t,e,i){!0!==e.isScene&&(e=q);const r=lt.get(t),n=g.state.lights,a=g.state.shadowsArray,s=n.state.version,o=wt.getParameters(t,n.state,a,e,i),l=wt.getProgramCacheKey(o);let c=r.programs;r.environment=t.isMeshStandardMaterial?e.environment:null,r.fog=e.fog,r.envMap=(t.isMeshStandardMaterial?dt:ht).get(t.envMap||r.environment),r.envMapRotation=null!==r.environment&&null===t.envMap?e.environmentRotation:t.envMapRotation,void 0===c&&(t.addEventListener("dispose",zt),c=new Map,r.programs=c);let h=c.get(l);if(void 0!==h){if(r.currentProgram===h&&r.lightsStateVersion===s)return Qt(t,o),h}else o.uniforms=wt.getUniforms(t),t.onBeforeCompile(o,b),h=wt.acquireProgram(o,l),c.set(l,h),r.uniforms=o.uniforms;const d=r.uniforms;return(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(d.clippingPlanes=xt.uniform),Qt(t,o),r.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),r.lightsStateVersion=s,r.needsLights&&(d.ambientLightColor.value=n.state.ambient,d.lightProbe.value=n.state.probe,d.directionalLights.value=n.state.directional,d.directionalLightShadows.value=n.state.directionalShadow,d.spotLights.value=n.state.spot,d.spotLightShadows.value=n.state.spotShadow,d.rectAreaLights.value=n.state.rectArea,d.ltc_1.value=n.state.rectAreaLTC1,d.ltc_2.value=n.state.rectAreaLTC2,d.pointLights.value=n.state.point,d.pointLightShadows.value=n.state.pointShadow,d.hemisphereLights.value=n.state.hemi,d.directionalShadowMap.value=n.state.directionalShadowMap,d.directionalShadowMatrix.value=n.state.directionalShadowMatrix,d.spotShadowMap.value=n.state.spotShadowMap,d.spotLightMatrix.value=n.state.spotLightMatrix,d.spotLightMap.value=n.state.spotLightMap,d.pointShadowMap.value=n.state.pointShadowMap,d.pointShadowMatrix.value=n.state.pointShadowMatrix),r.currentProgram=h,r.uniformsList=null,h}function $t(t){if(null===t.uniformsList){const e=t.currentProgram.getUniforms();t.uniformsList=nl.seqWithValue(e.seq,t.uniforms)}return t.uniformsList}function Qt(t,e){const i=lt.get(t);i.outputColorSpace=e.outputColorSpace,i.batching=e.batching,i.batchingColor=e.batchingColor,i.instancing=e.instancing,i.instancingColor=e.instancingColor,i.instancingMorph=e.instancingMorph,i.skinning=e.skinning,i.morphTargets=e.morphTargets,i.morphNormals=e.morphNormals,i.morphColors=e.morphColors,i.morphTargetsCount=e.morphTargetsCount,i.numClippingPlanes=e.numClippingPlanes,i.numIntersection=e.numClipIntersection,i.vertexAlphas=e.vertexAlphas,i.vertexTangents=e.vertexTangents,i.toneMapping=e.toneMapping}Gt.setAnimationLoop((function(t){kt&&kt(t)})),"undefined"!=typeof self&&Gt.setContext(self),this.setAnimationLoop=function(t){kt=t,Ut.setAnimationLoop(t),null===t?Gt.stop():Gt.start()},Ut.addEventListener("sessionstart",Ht),Ut.addEventListener("sessionend",Vt),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===y)return;if(!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===e.parent&&!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),!0===Ut.enabled&&!0===Ut.isPresenting&&(!0===Ut.cameraAutoUpdate&&Ut.updateCamera(e),e=Ut.getCamera()),!0===t.isScene&&t.onBeforeRender(b,t,e,M),g=yt.get(t,v.length),g.init(e),v.push(g),j.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),k.setFromProjectionMatrix(j),V=this.localClippingEnabled,H=xt.init(this.clippingPlanes,V),f=bt.get(t,w.length),f.init(),w.push(f),!0===Ut.enabled&&!0===Ut.isPresenting){const t=b.xr.getDepthSensingMesh();null!==t&&jt(t,e,-1/0,b.sortObjects)}jt(t,e,0,b.sortObjects),f.finish(),!0===b.sortObjects&&f.sort(N,F),Y=!1===Ut.enabled||!1===Ut.isPresenting||!1===Ut.hasDepthSensing(),Y&&Mt.addToRenderList(f,t),this.info.render.frame++,!0===H&&xt.beginShadows();const i=g.state.shadowsArray;St.render(i,t,e),!0===H&&xt.endShadows(),!0===this.info.autoReset&&this.info.reset();const r=f.opaque,n=f.transmissive;if(g.setupLights(),e.isArrayCamera){const i=e.cameras;if(n.length>0)for(let e=0,a=i.length;e<a;e++){Xt(r,n,t,i[e])}Y&&Mt.render(t);for(let e=0,r=i.length;e<r;e++){const r=i[e];Wt(f,t,r,r.viewport)}}else n.length>0&&Xt(r,n,t,e),Y&&Mt.render(t),Wt(f,t,e);null!==M&&0===S&&(ct.updateMultisampleRenderTarget(M),ct.updateRenderTargetMipmap(M)),!0===t.isScene&&t.onAfterRender(b,t,e),Ct.resetDefaultState(),E=-1,T=null,v.pop(),v.length>0?(g=v[v.length-1],!0===H&&xt.setGlobalState(b.clippingPlanes,g.state.camera)):g=null,w.pop(),f=w.length>0?w[w.length-1]:null},this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return S},this.getRenderTarget=function(){return M},this.setRenderTargetTextures=function(t,e,i){const r=lt.get(t);r.__autoAllocateDepthBuffer=!1===t.resolveDepthBuffer,!1===r.__autoAllocateDepthBuffer&&(r.__useRenderToTexture=!1),lt.get(t.texture).__webglTexture=e,lt.get(t.depthTexture).__webglTexture=r.__autoAllocateDepthBuffer?void 0:i,r.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(t,e){const i=lt.get(t);i.__webglFramebuffer=e,i.__useDefaultFramebuffer=void 0===e};const te=It.createFramebuffer();this.setRenderTarget=function(t,e=0,i=0){M=t,x=e,S=i;let r=!0,n=null,a=!1,s=!1;if(t){const o=lt.get(t);if(void 0!==o.__useDefaultFramebuffer)et.bindFramebuffer(It.FRAMEBUFFER,null),r=!1;else if(void 0===o.__webglFramebuffer)ct.setupRenderTarget(t);else if(o.__hasExternalTextures)ct.rebindTextures(t,lt.get(t.texture).__webglTexture,lt.get(t.depthTexture).__webglTexture);else if(t.depthBuffer){const e=t.depthTexture;if(o.__boundDepthTexture!==e){if(null!==e&&lt.has(e)&&(t.width!==e.image.width||t.height!==e.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");ct.setupDepthRenderbuffer(t)}}const l=t.texture;(l.isData3DTexture||l.isDataArrayTexture||l.isCompressedArrayTexture)&&(s=!0);const c=lt.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(n=Array.isArray(c[e])?c[e][i]:c[e],a=!0):n=t.samples>0&&!1===ct.useMultisampledRTT(t)?lt.get(t).__webglMultisampledFramebuffer:Array.isArray(c)?c[i]:c,A.copy(t.viewport),R.copy(t.scissor),C=t.scissorTest}else A.copy(O).multiplyScalar(U).floor(),R.copy(z).multiplyScalar(U).floor(),C=B;0!==i&&(n=te);if(et.bindFramebuffer(It.FRAMEBUFFER,n)&&r&&et.drawBuffers(t,n),et.viewport(A),et.scissor(R),et.setScissorTest(C),a){const r=lt.get(t.texture);It.framebufferTexture2D(It.FRAMEBUFFER,It.COLOR_ATTACHMENT0,It.TEXTURE_CUBE_MAP_POSITIVE_X+e,r.__webglTexture,i)}else if(s){const r=lt.get(t.texture),n=e;It.framebufferTextureLayer(It.FRAMEBUFFER,It.COLOR_ATTACHMENT0,r.__webglTexture,i,n)}else if(null!==t&&0!==i){const e=lt.get(t.texture);It.framebufferTexture2D(It.FRAMEBUFFER,It.COLOR_ATTACHMENT0,It.TEXTURE_2D,e.__webglTexture,i)}E=-1},this.readRenderTargetPixels=function(t,e,i,r,n,a,s){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=lt.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){et.bindFramebuffer(It.FRAMEBUFFER,o);try{const s=t.texture,o=s.format,l=s.type;if(!Q.textureFormatReadable(o))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!Q.textureTypeReadable(l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");e>=0&&e<=t.width-r&&i>=0&&i<=t.height-n&&It.readPixels(e,i,r,n,Rt.convert(o),Rt.convert(l),a)}finally{const t=null!==M?lt.get(M).__webglFramebuffer:null;et.bindFramebuffer(It.FRAMEBUFFER,t)}}},this.readRenderTargetPixelsAsync=async function(t,e,i,r,n,a,s){if(!t||!t.isWebGLRenderTarget)throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=lt.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){if(e>=0&&e<=t.width-r&&i>=0&&i<=t.height-n){et.bindFramebuffer(It.FRAMEBUFFER,o);const s=t.texture,l=s.format,c=s.type;if(!Q.textureFormatReadable(l))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Q.textureTypeReadable(c))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const h=It.createBuffer();It.bindBuffer(It.PIXEL_PACK_BUFFER,h),It.bufferData(It.PIXEL_PACK_BUFFER,a.byteLength,It.STREAM_READ),It.readPixels(e,i,r,n,Rt.convert(l),Rt.convert(c),0);const d=null!==M?lt.get(M).__webglFramebuffer:null;et.bindFramebuffer(It.FRAMEBUFFER,d);const u=It.fenceSync(It.SYNC_GPU_COMMANDS_COMPLETE,0);return It.flush(),await function(t,e,i){return new Promise((function(r,n){setTimeout((function a(){switch(t.clientWaitSync(e,t.SYNC_FLUSH_COMMANDS_BIT,0)){case t.WAIT_FAILED:n();break;case t.TIMEOUT_EXPIRED:setTimeout(a,i);break;default:r()}}),i)}))}(It,u,4),It.bindBuffer(It.PIXEL_PACK_BUFFER,h),It.getBufferSubData(It.PIXEL_PACK_BUFFER,0,a),It.deleteBuffer(h),It.deleteSync(u),a}throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(t,e=null,i=0){const r=Math.pow(2,-i),n=Math.floor(t.image.width*r),a=Math.floor(t.image.height*r),s=null!==e?e.x:0,o=null!==e?e.y:0;ct.setTexture2D(t,0),It.copyTexSubImage2D(It.TEXTURE_2D,i,0,0,s,o,n,a),et.unbindTexture()};const ee=It.createFramebuffer(),ie=It.createFramebuffer();this.copyTextureToTexture=function(t,e,i=null,r=null,n=0,a=null){let s,o,l,c,h,d,u,p,_;null===a&&(0!==n?(Te("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),a=n,n=0):a=0);const m=t.isCompressedTexture?t.mipmaps[a]:t.image;if(null!==i)s=i.max.x-i.min.x,o=i.max.y-i.min.y,l=i.isBox3?i.max.z-i.min.z:1,c=i.min.x,h=i.min.y,d=i.isBox3?i.min.z:0;else{const e=Math.pow(2,-n);s=Math.floor(m.width*e),o=Math.floor(m.height*e),l=t.isDataArrayTexture?m.depth:t.isData3DTexture?Math.floor(m.depth*e):1,c=0,h=0,d=0}null!==r?(u=r.x,p=r.y,_=r.z):(u=0,p=0,_=0);const f=Rt.convert(e.format),g=Rt.convert(e.type);let w;e.isData3DTexture?(ct.setTexture3D(e,0),w=It.TEXTURE_3D):e.isDataArrayTexture||e.isCompressedArrayTexture?(ct.setTexture2DArray(e,0),w=It.TEXTURE_2D_ARRAY):(ct.setTexture2D(e,0),w=It.TEXTURE_2D),It.pixelStorei(It.UNPACK_FLIP_Y_WEBGL,e.flipY),It.pixelStorei(It.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),It.pixelStorei(It.UNPACK_ALIGNMENT,e.unpackAlignment);const v=It.getParameter(It.UNPACK_ROW_LENGTH),b=It.getParameter(It.UNPACK_IMAGE_HEIGHT),y=It.getParameter(It.UNPACK_SKIP_PIXELS),x=It.getParameter(It.UNPACK_SKIP_ROWS),S=It.getParameter(It.UNPACK_SKIP_IMAGES);It.pixelStorei(It.UNPACK_ROW_LENGTH,m.width),It.pixelStorei(It.UNPACK_IMAGE_HEIGHT,m.height),It.pixelStorei(It.UNPACK_SKIP_PIXELS,c),It.pixelStorei(It.UNPACK_SKIP_ROWS,h),It.pixelStorei(It.UNPACK_SKIP_IMAGES,d);const M=t.isDataArrayTexture||t.isData3DTexture,E=e.isDataArrayTexture||e.isData3DTexture;if(t.isDepthTexture){const i=lt.get(t),r=lt.get(e),m=lt.get(i.__renderTarget),f=lt.get(r.__renderTarget);et.bindFramebuffer(It.READ_FRAMEBUFFER,m.__webglFramebuffer),et.bindFramebuffer(It.DRAW_FRAMEBUFFER,f.__webglFramebuffer);for(let g=0;g<l;g++)M&&(It.framebufferTextureLayer(It.READ_FRAMEBUFFER,It.COLOR_ATTACHMENT0,lt.get(t).__webglTexture,n,d+g),It.framebufferTextureLayer(It.DRAW_FRAMEBUFFER,It.COLOR_ATTACHMENT0,lt.get(e).__webglTexture,a,_+g)),It.blitFramebuffer(c,h,s,o,u,p,s,o,It.DEPTH_BUFFER_BIT,It.NEAREST);et.bindFramebuffer(It.READ_FRAMEBUFFER,null),et.bindFramebuffer(It.DRAW_FRAMEBUFFER,null)}else if(0!==n||t.isRenderTargetTexture||lt.has(t)){const i=lt.get(t),r=lt.get(e);et.bindFramebuffer(It.READ_FRAMEBUFFER,ee),et.bindFramebuffer(It.DRAW_FRAMEBUFFER,ie);for(let t=0;t<l;t++)M?It.framebufferTextureLayer(It.READ_FRAMEBUFFER,It.COLOR_ATTACHMENT0,i.__webglTexture,n,d+t):It.framebufferTexture2D(It.READ_FRAMEBUFFER,It.COLOR_ATTACHMENT0,It.TEXTURE_2D,i.__webglTexture,n),E?It.framebufferTextureLayer(It.DRAW_FRAMEBUFFER,It.COLOR_ATTACHMENT0,r.__webglTexture,a,_+t):It.framebufferTexture2D(It.DRAW_FRAMEBUFFER,It.COLOR_ATTACHMENT0,It.TEXTURE_2D,r.__webglTexture,a),0!==n?It.blitFramebuffer(c,h,s,o,u,p,s,o,It.COLOR_BUFFER_BIT,It.NEAREST):E?It.copyTexSubImage3D(w,a,u,p,_+t,c,h,s,o):It.copyTexSubImage2D(w,a,u,p,c,h,s,o);et.bindFramebuffer(It.READ_FRAMEBUFFER,null),et.bindFramebuffer(It.DRAW_FRAMEBUFFER,null)}else E?t.isDataTexture||t.isData3DTexture?It.texSubImage3D(w,a,u,p,_,s,o,l,f,g,m.data):e.isCompressedArrayTexture?It.compressedTexSubImage3D(w,a,u,p,_,s,o,l,f,m.data):It.texSubImage3D(w,a,u,p,_,s,o,l,f,g,m):t.isDataTexture?It.texSubImage2D(It.TEXTURE_2D,a,u,p,s,o,f,g,m.data):t.isCompressedTexture?It.compressedTexSubImage2D(It.TEXTURE_2D,a,u,p,m.width,m.height,f,m.data):It.texSubImage2D(It.TEXTURE_2D,a,u,p,s,o,f,g,m);It.pixelStorei(It.UNPACK_ROW_LENGTH,v),It.pixelStorei(It.UNPACK_IMAGE_HEIGHT,b),It.pixelStorei(It.UNPACK_SKIP_PIXELS,y),It.pixelStorei(It.UNPACK_SKIP_ROWS,x),It.pixelStorei(It.UNPACK_SKIP_IMAGES,S),0===a&&e.generateMipmaps&&It.generateMipmap(w),et.unbindTexture()},this.copyTextureToTexture3D=function(t,e,i=null,r=null,n=0){return Te('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(t,e,i,r,n)},this.initRenderTarget=function(t){void 0===lt.get(t).__webglFramebuffer&&ct.setupRenderTarget(t)},this.initTexture=function(t){t.isCubeTexture?ct.setTextureCube(t,0):t.isData3DTexture?ct.setTexture3D(t,0):t.isDataArrayTexture||t.isCompressedArrayTexture?ct.setTexture2DArray(t,0):ct.setTexture2D(t,0),et.unbindTexture()},this.resetState=function(){x=0,S=0,M=null,et.reset(),Ct.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return oe}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=Pe._getDrawingBufferColorSpace(t),e.unpackColorSpace=Pe._getUnpackColorSpace()}}class $l extends e{vectors=[];constructor(t=10,e="0015",i=10){super(),this._constructor(t,e,i),this.vectors=this.points.map((t=>new ve(t[0],t[1])))}getVectors(){return this.vectors}getUpperVectors(t=1){return this.getUpper(t).map((t=>new ve(t[0],t[1])))}getLowerVectors(t=1){return this.getLower(t).map((t=>new ve(t[0],t[1])))}getCoreVectors(t=1){return this.getCore(t).map((t=>new ve(t[0],t[1])))}}const Ql={type:"change"},tc={type:"start"},ec={type:"end"},ic=new yi,rc=new gn,nc=Math.cos(70*we),ac=new Xe,sc=2*Math.PI,oc=-1,lc=0,cc=1,hc=2,dc=3,uc=4,pc=5,_c=6,mc=1e-6;class fc extends us{constructor(t,e=null){super(t,e),this.state=oc,this.target=new Xe,this.cursor=new Xe,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:r,MIDDLE:n,RIGHT:a},this.touches={ONE:s,TWO:l},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new Xe,this._lastQuaternion=new We,this._lastTargetPosition=new Xe,this._quat=(new We).setFromUnitVectors(t.up,new Xe(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new hs,this._sphericalDelta=new hs,this._scale=1,this._panOffset=new Xe,this._rotateStart=new ve,this._rotateEnd=new ve,this._rotateDelta=new ve,this._panStart=new ve,this._panEnd=new ve,this._panDelta=new ve,this._dollyStart=new ve,this._dollyEnd=new ve,this._dollyDelta=new ve,this._dollyDirection=new Xe,this._mouse=new ve,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=wc.bind(this),this._onPointerDown=gc.bind(this),this._onPointerUp=vc.bind(this),this._onContextMenu=Tc.bind(this),this._onMouseWheel=xc.bind(this),this._onKeyDown=Sc.bind(this),this._onTouchStart=Mc.bind(this),this._onTouchMove=Ec.bind(this),this._onMouseDown=bc.bind(this),this._onMouseMove=yc.bind(this),this._interceptControlDown=Ac.bind(this),this._interceptControlUp=Rc.bind(this),null!==this.domElement&&this.connect(this.domElement),this.update()}connect(t){super.connect(t),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1});this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents();this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(t){t.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=t}stopListenToKeyEvents(){null!==this._domElementKeyEvents&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(Ql),this.update(),this.state=oc}update(t=null){const e=this.object.position;ac.copy(e).sub(this.target),ac.applyQuaternion(this._quat),this._spherical.setFromVector3(ac),this.autoRotate&&this.state===oc&&this._rotateLeft(this._getAutoRotationAngle(t)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let i=this.minAzimuthAngle,r=this.maxAzimuthAngle;isFinite(i)&&isFinite(r)&&(i<-Math.PI?i+=sc:i>Math.PI&&(i-=sc),r<-Math.PI?r+=sc:r>Math.PI&&(r-=sc),this._spherical.theta=i<=r?Math.max(i,Math.min(r,this._spherical.theta)):this._spherical.theta>(i+r)/2?Math.max(i,this._spherical.theta):Math.min(r,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),!0===this.enableDamping?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let n=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const t=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),n=t!=this._spherical.radius}if(ac.setFromSpherical(this._spherical),ac.applyQuaternion(this._quatInverse),e.copy(this.target).add(ac),this.object.lookAt(this.target),!0===this.enableDamping?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let t=null;if(this.object.isPerspectiveCamera){const e=ac.length();t=this._clampDistance(e*this._scale);const i=e-t;this.object.position.addScaledVector(this._dollyDirection,i),this.object.updateMatrixWorld(),n=!!i}else if(this.object.isOrthographicCamera){const e=new Xe(this._mouse.x,this._mouse.y,0);e.unproject(this.object);const i=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),n=i!==this.object.zoom;const r=new Xe(this._mouse.x,this._mouse.y,0);r.unproject(this.object),this.object.position.sub(r).add(e),this.object.updateMatrixWorld(),t=ac.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;null!==t&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(t).add(this.object.position):(ic.origin.copy(this.object.position),ic.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(ic.direction))<nc?this.object.lookAt(this.target):(rc.setFromNormalAndCoplanarPoint(this.object.up,this.target),ic.intersectPlane(rc,this.target))))}else if(this.object.isOrthographicCamera){const t=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),t!==this.object.zoom&&(this.object.updateProjectionMatrix(),n=!0)}return this._scale=1,this._performCursorZoom=!1,!!(n||this._lastPosition.distanceToSquared(this.object.position)>mc||8*(1-this._lastQuaternion.dot(this.object.quaternion))>mc||this._lastTargetPosition.distanceToSquared(this.target)>mc)&&(this.dispatchEvent(Ql),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0)}_getAutoRotationAngle(t){return null!==t?sc/60*this.autoRotateSpeed*t:sc/60/60*this.autoRotateSpeed}_getZoomScale(t){const e=Math.abs(.01*t);return Math.pow(.95,this.zoomSpeed*e)}_rotateLeft(t){this._sphericalDelta.theta-=t}_rotateUp(t){this._sphericalDelta.phi-=t}_panLeft(t,e){ac.setFromMatrixColumn(e,0),ac.multiplyScalar(-t),this._panOffset.add(ac)}_panUp(t,e){!0===this.screenSpacePanning?ac.setFromMatrixColumn(e,1):(ac.setFromMatrixColumn(e,0),ac.crossVectors(this.object.up,ac)),ac.multiplyScalar(t),this._panOffset.add(ac)}_pan(t,e){const i=this.domElement;if(this.object.isPerspectiveCamera){const r=this.object.position;ac.copy(r).sub(this.target);let n=ac.length();n*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*t*n/i.clientHeight,this.object.matrix),this._panUp(2*e*n/i.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(t*(this.object.right-this.object.left)/this.object.zoom/i.clientWidth,this.object.matrix),this._panUp(e*(this.object.top-this.object.bottom)/this.object.zoom/i.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=t:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=t:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(t,e){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const i=this.domElement.getBoundingClientRect(),r=t-i.left,n=e-i.top,a=i.width,s=i.height;this._mouse.x=r/a*2-1,this._mouse.y=-n/s*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(t){return Math.max(this.minDistance,Math.min(this.maxDistance,t))}_handleMouseDownRotate(t){this._rotateStart.set(t.clientX,t.clientY)}_handleMouseDownDolly(t){this._updateZoomParameters(t.clientX,t.clientX),this._dollyStart.set(t.clientX,t.clientY)}_handleMouseDownPan(t){this._panStart.set(t.clientX,t.clientY)}_handleMouseMoveRotate(t){this._rotateEnd.set(t.clientX,t.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(sc*this._rotateDelta.x/e.clientHeight),this._rotateUp(sc*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(t){this._dollyEnd.set(t.clientX,t.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(t){this._panEnd.set(t.clientX,t.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(t){this._updateZoomParameters(t.clientX,t.clientY),t.deltaY<0?this._dollyIn(this._getZoomScale(t.deltaY)):t.deltaY>0&&this._dollyOut(this._getZoomScale(t.deltaY)),this.update()}_handleKeyDown(t){let e=!1;switch(t.code){case this.keys.UP:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateUp(sc*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),e=!0;break;case this.keys.BOTTOM:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateUp(-sc*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),e=!0;break;case this.keys.LEFT:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateLeft(sc*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),e=!0;break;case this.keys.RIGHT:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateLeft(-sc*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),e=!0}e&&(t.preventDefault(),this.update())}_handleTouchStartRotate(t){if(1===this._pointers.length)this._rotateStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),i=.5*(t.pageX+e.x),r=.5*(t.pageY+e.y);this._rotateStart.set(i,r)}}_handleTouchStartPan(t){if(1===this._pointers.length)this._panStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),i=.5*(t.pageX+e.x),r=.5*(t.pageY+e.y);this._panStart.set(i,r)}}_handleTouchStartDolly(t){const e=this._getSecondPointerPosition(t),i=t.pageX-e.x,r=t.pageY-e.y,n=Math.sqrt(i*i+r*r);this._dollyStart.set(0,n)}_handleTouchStartDollyPan(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enablePan&&this._handleTouchStartPan(t)}_handleTouchStartDollyRotate(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enableRotate&&this._handleTouchStartRotate(t)}_handleTouchMoveRotate(t){if(1==this._pointers.length)this._rotateEnd.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),i=.5*(t.pageX+e.x),r=.5*(t.pageY+e.y);this._rotateEnd.set(i,r)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(sc*this._rotateDelta.x/e.clientHeight),this._rotateUp(sc*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(t){if(1===this._pointers.length)this._panEnd.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),i=.5*(t.pageX+e.x),r=.5*(t.pageY+e.y);this._panEnd.set(i,r)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(t){const e=this._getSecondPointerPosition(t),i=t.pageX-e.x,r=t.pageY-e.y,n=Math.sqrt(i*i+r*r);this._dollyEnd.set(0,n),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const a=.5*(t.pageX+e.x),s=.5*(t.pageY+e.y);this._updateZoomParameters(a,s)}_handleTouchMoveDollyPan(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enablePan&&this._handleTouchMovePan(t)}_handleTouchMoveDollyRotate(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enableRotate&&this._handleTouchMoveRotate(t)}_addPointer(t){this._pointers.push(t.pointerId)}_removePointer(t){delete this._pointerPositions[t.pointerId];for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId)return void this._pointers.splice(e,1)}_isTrackingPointer(t){for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId)return!0;return!1}_trackPointer(t){let e=this._pointerPositions[t.pointerId];void 0===e&&(e=new ve,this._pointerPositions[t.pointerId]=e),e.set(t.pageX,t.pageY)}_getSecondPointerPosition(t){const e=t.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[e]}_customWheelEvent(t){const e=t.deltaMode,i={clientX:t.clientX,clientY:t.clientY,deltaY:t.deltaY};switch(e){case 1:i.deltaY*=16;break;case 2:i.deltaY*=100}return t.ctrlKey&&!this._controlActive&&(i.deltaY*=10),i}}function gc(t){!1!==this.enabled&&(0===this._pointers.length&&(this.domElement.setPointerCapture(t.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._isTrackingPointer(t)||(this._addPointer(t),"touch"===t.pointerType?this._onTouchStart(t):this._onMouseDown(t)))}function wc(t){!1!==this.enabled&&("touch"===t.pointerType?this._onTouchMove(t):this._onMouseMove(t))}function vc(t){switch(this._removePointer(t),this._pointers.length){case 0:this.domElement.releasePointerCapture(t.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(ec),this.state=oc;break;case 1:const e=this._pointers[0],i=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:i.x,pageY:i.y})}}function bc(t){let e;switch(t.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case n:if(!1===this.enableZoom)return;this._handleMouseDownDolly(t),this.state=cc;break;case r:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===this.enablePan)return;this._handleMouseDownPan(t),this.state=hc}else{if(!1===this.enableRotate)return;this._handleMouseDownRotate(t),this.state=lc}break;case a:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===this.enableRotate)return;this._handleMouseDownRotate(t),this.state=lc}else{if(!1===this.enablePan)return;this._handleMouseDownPan(t),this.state=hc}break;default:this.state=oc}this.state!==oc&&this.dispatchEvent(tc)}function yc(t){switch(this.state){case lc:if(!1===this.enableRotate)return;this._handleMouseMoveRotate(t);break;case cc:if(!1===this.enableZoom)return;this._handleMouseMoveDolly(t);break;case hc:if(!1===this.enablePan)return;this._handleMouseMovePan(t)}}function xc(t){!1!==this.enabled&&!1!==this.enableZoom&&this.state===oc&&(t.preventDefault(),this.dispatchEvent(tc),this._handleMouseWheel(this._customWheelEvent(t)),this.dispatchEvent(ec))}function Sc(t){!1!==this.enabled&&this._handleKeyDown(t)}function Mc(t){switch(this._trackPointer(t),this._pointers.length){case 1:switch(this.touches.ONE){case s:if(!1===this.enableRotate)return;this._handleTouchStartRotate(t),this.state=dc;break;case o:if(!1===this.enablePan)return;this._handleTouchStartPan(t),this.state=uc;break;default:this.state=oc}break;case 2:switch(this.touches.TWO){case l:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchStartDollyPan(t),this.state=pc;break;case c:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchStartDollyRotate(t),this.state=_c;break;default:this.state=oc}break;default:this.state=oc}this.state!==oc&&this.dispatchEvent(tc)}function Ec(t){switch(this._trackPointer(t),this.state){case dc:if(!1===this.enableRotate)return;this._handleTouchMoveRotate(t),this.update();break;case uc:if(!1===this.enablePan)return;this._handleTouchMovePan(t),this.update();break;case pc:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchMoveDollyPan(t),this.update();break;case _c:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchMoveDollyRotate(t),this.update();break;default:this.state=oc}}function Tc(t){!1!==this.enabled&&t.preventDefault()}function Ac(t){if("Control"===t.key){this._controlActive=!0;this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0})}}function Rc(t){if("Control"===t.key){this._controlActive=!1;this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0})}}class Cc{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const Pc=new is(-1,1,1,-1,0,1);const Ic=new class extends Dr{constructor(){super(),this.setAttribute("position",new Er([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Er([0,2,0,0,2,0],2))}};class Lc{constructor(t){this._mesh=new Wr(Ic,t)}dispose(){this._mesh.geometry.dispose()}render(t){t.render(this._mesh,Pc)}get material(){return this._mesh.material}set material(t){this._mesh.material=t}}const Dc={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = opacity * texel;\n\n\n\t\t}"},Uc={uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new _r(0)},defaultOpacity:{value:0}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec3 defaultColor;\n\t\tuniform float defaultOpacity;\n\t\tuniform float luminosityThreshold;\n\t\tuniform float smoothWidth;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\n\t\t\tfloat v = luminance( texel.xyz );\n\n\t\t\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\n\n\t\t\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\n\n\t\t\tgl_FragColor = mix( outputColor, texel, alpha );\n\n\t\t}"};class Nc extends Cc{constructor(t,e=1,i,r){super(),this.strength=e,this.radius=i,this.threshold=r,this.resolution=void 0!==t?new ve(t.x,t.y):new ve(256,256),this.clearColor=new _r(0,0,0),this.needsSwap=!1,this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;let n=Math.round(this.resolution.x/2),a=Math.round(this.resolution.y/2);this.renderTargetBright=new Ve(n,a,{type:nt}),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(let l=0;l<this.nMips;l++){const t=new Ve(n,a,{type:nt});t.texture.name="UnrealBloomPass.h"+l,t.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(t);const e=new Ve(n,a,{type:nt});e.texture.name="UnrealBloomPass.v"+l,e.texture.generateMipmaps=!1,this.renderTargetsVertical.push(e),n=Math.round(n/2),a=Math.round(a/2)}const s=Uc;this.highPassUniforms=Zr.clone(s.uniforms),this.highPassUniforms.luminosityThreshold.value=r,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new $r({uniforms:this.highPassUniforms,vertexShader:s.vertexShader,fragmentShader:s.fragmentShader}),this.separableBlurMaterials=[];const o=[3,5,7,9,11];n=Math.round(this.resolution.x/2),a=Math.round(this.resolution.y/2);for(let l=0;l<this.nMips;l++)this.separableBlurMaterials.push(this._getSeparableBlurMaterial(o[l])),this.separableBlurMaterials[l].uniforms.invSize.value=new ve(1/n,1/a),n=Math.round(n/2),a=Math.round(a/2);this.compositeMaterial=this._getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=e,this.compositeMaterial.uniforms.bloomRadius.value=.1;this.compositeMaterial.uniforms.bloomFactors.value=[1,.8,.6,.4,.2],this.bloomTintColors=[new Xe(1,1,1),new Xe(1,1,1),new Xe(1,1,1),new Xe(1,1,1),new Xe(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,this.copyUniforms=Zr.clone(Dc.uniforms),this.blendMaterial=new $r({uniforms:this.copyUniforms,vertexShader:Dc.vertexShader,fragmentShader:Dc.fragmentShader,blending:2,depthTest:!1,depthWrite:!1,transparent:!0}),this._oldClearColor=new _r,this._oldClearAlpha=1,this._basic=new wr,this._fsQuad=new Lc(null)}dispose(){for(let t=0;t<this.renderTargetsHorizontal.length;t++)this.renderTargetsHorizontal[t].dispose();for(let t=0;t<this.renderTargetsVertical.length;t++)this.renderTargetsVertical[t].dispose();this.renderTargetBright.dispose();for(let t=0;t<this.separableBlurMaterials.length;t++)this.separableBlurMaterials[t].dispose();this.compositeMaterial.dispose(),this.blendMaterial.dispose(),this._basic.dispose(),this._fsQuad.dispose()}setSize(t,e){let i=Math.round(t/2),r=Math.round(e/2);this.renderTargetBright.setSize(i,r);for(let n=0;n<this.nMips;n++)this.renderTargetsHorizontal[n].setSize(i,r),this.renderTargetsVertical[n].setSize(i,r),this.separableBlurMaterials[n].uniforms.invSize.value=new ve(1/i,1/r),i=Math.round(i/2),r=Math.round(r/2)}render(t,e,i,r,n){t.getClearColor(this._oldClearColor),this._oldClearAlpha=t.getClearAlpha();const a=t.autoClear;t.autoClear=!1,t.setClearColor(this.clearColor,0),n&&t.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this._fsQuad.material=this._basic,this._basic.map=i.texture,t.setRenderTarget(null),t.clear(),this._fsQuad.render(t)),this.highPassUniforms.tDiffuse.value=i.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this._fsQuad.material=this.materialHighPassFilter,t.setRenderTarget(this.renderTargetBright),t.clear(),this._fsQuad.render(t);let s=this.renderTargetBright;for(let o=0;o<this.nMips;o++)this._fsQuad.material=this.separableBlurMaterials[o],this.separableBlurMaterials[o].uniforms.colorTexture.value=s.texture,this.separableBlurMaterials[o].uniforms.direction.value=Nc.BlurDirectionX,t.setRenderTarget(this.renderTargetsHorizontal[o]),t.clear(),this._fsQuad.render(t),this.separableBlurMaterials[o].uniforms.colorTexture.value=this.renderTargetsHorizontal[o].texture,this.separableBlurMaterials[o].uniforms.direction.value=Nc.BlurDirectionY,t.setRenderTarget(this.renderTargetsVertical[o]),t.clear(),this._fsQuad.render(t),s=this.renderTargetsVertical[o];this._fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,t.setRenderTarget(this.renderTargetsHorizontal[0]),t.clear(),this._fsQuad.render(t),this._fsQuad.material=this.blendMaterial,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,n&&t.state.buffers.stencil.setTest(!0),this.renderToScreen?(t.setRenderTarget(null),this._fsQuad.render(t)):(t.setRenderTarget(i),this._fsQuad.render(t)),t.setClearColor(this._oldClearColor,this._oldClearAlpha),t.autoClear=a}_getSeparableBlurMaterial(t){const e=[];for(let i=0;i<t;i++)e.push(.39894*Math.exp(-.5*i*i/(t*t))/t);return new $r({defines:{KERNEL_RADIUS:t},uniforms:{colorTexture:{value:null},invSize:{value:new ve(.5,.5)},direction:{value:new ve(.5,.5)},gaussianCoefficients:{value:e}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 invSize;\n\t\t\t\tuniform vec2 direction;\n\t\t\t\tuniform float gaussianCoefficients[KERNEL_RADIUS];\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tfloat weightSum = gaussianCoefficients[0];\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv ).rgb * weightSum;\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\n\t\t\t\t\t\tfloat x = float(i);\n\t\t\t\t\t\tfloat w = gaussianCoefficients[i];\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset ).rgb;\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset ).rgb;\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\n\t\t\t\t\t\tweightSum += 2.0 * w;\n\t\t\t\t\t}\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})}_getCompositeMaterial(t){return new $r({defines:{NUM_MIPS:t},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\n\t\t\t\tuniform sampler2D blurTexture1;\n\t\t\t\tuniform sampler2D blurTexture2;\n\t\t\t\tuniform sampler2D blurTexture3;\n\t\t\t\tuniform sampler2D blurTexture4;\n\t\t\t\tuniform sampler2D blurTexture5;\n\t\t\t\tuniform float bloomStrength;\n\t\t\t\tuniform float bloomRadius;\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\n\n\t\t\t\tfloat lerpBloomFactor(const in float factor) {\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\n\t\t\t\t}"})}}Nc.BlurDirectionX=new ve(1,0),Nc.BlurDirectionY=new ve(0,1);class Fc extends Cc{constructor(t,e="tDiffuse"){super(),this.textureID=e,this.uniforms=null,this.material=null,t instanceof $r?(this.uniforms=t.uniforms,this.material=t):t&&(this.uniforms=Zr.clone(t.uniforms),this.material=new $r({name:void 0!==t.name?t.name:"unspecified",defines:Object.assign({},t.defines),uniforms:this.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader})),this._fsQuad=new Lc(this.material)}render(t,e,i){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=i.texture),this._fsQuad.material=this.material,this.renderToScreen?(t.setRenderTarget(null),this._fsQuad.render(t)):(t.setRenderTarget(e),this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),this._fsQuad.render(t))}dispose(){this.material.dispose(),this._fsQuad.dispose()}}class Oc extends Cc{constructor(t,e){super(),this.scene=t,this.camera=e,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(t,e,i){const r=t.getContext(),n=t.state;let a,s;n.buffers.color.setMask(!1),n.buffers.depth.setMask(!1),n.buffers.color.setLocked(!0),n.buffers.depth.setLocked(!0),this.inverse?(a=0,s=1):(a=1,s=0),n.buffers.stencil.setTest(!0),n.buffers.stencil.setOp(r.REPLACE,r.REPLACE,r.REPLACE),n.buffers.stencil.setFunc(r.ALWAYS,a,4294967295),n.buffers.stencil.setClear(s),n.buffers.stencil.setLocked(!0),t.setRenderTarget(i),this.clear&&t.clear(),t.render(this.scene,this.camera),t.setRenderTarget(e),this.clear&&t.clear(),t.render(this.scene,this.camera),n.buffers.color.setLocked(!1),n.buffers.depth.setLocked(!1),n.buffers.color.setMask(!0),n.buffers.depth.setMask(!0),n.buffers.stencil.setLocked(!1),n.buffers.stencil.setFunc(r.EQUAL,1,4294967295),n.buffers.stencil.setOp(r.KEEP,r.KEEP,r.KEEP),n.buffers.stencil.setLocked(!0)}}class zc extends Cc{constructor(){super(),this.needsSwap=!1}render(t){t.state.buffers.stencil.setLocked(!1),t.state.buffers.stencil.setTest(!1)}}class Bc{constructor(t,e){if(this.renderer=t,this._pixelRatio=t.getPixelRatio(),void 0===e){const i=t.getSize(new ve);this._width=i.width,this._height=i.height,(e=new Ve(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:nt})).texture.name="EffectComposer.rt1"}else this._width=e.width,this._height=e.height;this.renderTarget1=e,this.renderTarget2=e.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new Fc(Dc),this.copyPass.material.blending=0,this.clock=new ls}swapBuffers(){const t=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=t}addPass(t){this.passes.push(t),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(t,e){this.passes.splice(e,0,t),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(t){const e=this.passes.indexOf(t);-1!==e&&this.passes.splice(e,1)}isLastEnabledPass(t){for(let e=t+1;e<this.passes.length;e++)if(this.passes[e].enabled)return!1;return!0}render(t){void 0===t&&(t=this.clock.getDelta());const e=this.renderer.getRenderTarget();let i=!1;for(let r=0,n=this.passes.length;r<n;r++){const e=this.passes[r];if(!1!==e.enabled){if(e.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(r),e.render(this.renderer,this.writeBuffer,this.readBuffer,t,i),e.needsSwap){if(i){const e=this.renderer.getContext(),i=this.renderer.state.buffers.stencil;i.setFunc(e.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,t),i.setFunc(e.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==Oc&&(e instanceof Oc?i=!0:e instanceof zc&&(i=!1))}}this.renderer.setRenderTarget(e)}reset(t){if(void 0===t){const e=this.renderer.getSize(new ve);this._pixelRatio=this.renderer.getPixelRatio(),this._width=e.width,this._height=e.height,(t=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=t,this.renderTarget2=t.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(t,e){this._width=t,this._height=e;const i=this._width*this._pixelRatio,r=this._height*this._pixelRatio;this.renderTarget1.setSize(i,r),this.renderTarget2.setSize(i,r);for(let n=0;n<this.passes.length;n++)this.passes[n].setSize(i,r)}setPixelRatio(t){this._pixelRatio=t,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}class kc extends Cc{constructor(t,e,i=null,r=null,n=null){super(),this.scene=t,this.camera=e,this.overrideMaterial=i,this.clearColor=r,this.clearAlpha=n,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new _r}render(t,e,i){const r=t.autoClear;let n,a;t.autoClear=!1,null!==this.overrideMaterial&&(a=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),null!==this.clearColor&&(t.getClearColor(this._oldClearColor),t.setClearColor(this.clearColor,t.getClearAlpha())),null!==this.clearAlpha&&(n=t.getClearAlpha(),t.setClearAlpha(this.clearAlpha)),1==this.clearDepth&&t.clearDepth(),t.setRenderTarget(this.renderToScreen?null:i),!0===this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),t.render(this.scene,this.camera),null!==this.clearColor&&t.setClearColor(this._oldClearColor),null!==this.clearAlpha&&t.setClearAlpha(n),null!==this.overrideMaterial&&(this.scene.overrideMaterial=a),t.autoClear=r}}let Hc;const Vc=new Array(128).fill(void 0);function Gc(t){return Vc[t]}Vc.push(void 0,null,!0,!1);let jc=Vc.length;function Wc(t){jc===Vc.length&&Vc.push(Vc.length+1);const e=jc;return jc=Vc[e],Vc[e]=t,e}function Xc(t,e){try{return t.apply(this,e)}catch(i){Hc.__wbindgen_export_0(Wc(i))}}function qc(t){return null==t}let Yc=null;function Jc(){return(null===Yc||!0===Yc.buffer.detached||void 0===Yc.buffer.detached&&Yc.buffer!==Hc.memory.buffer)&&(Yc=new DataView(Hc.memory.buffer)),Yc}function Kc(t){const e=Gc(t);return function(t){t<132||(Vc[t]=jc,jc=t)}(t),e}let Zc=new("undefined"==typeof TextDecoder?(0,module.require)("util").TextDecoder:TextDecoder)("utf-8",{ignoreBOM:!0,fatal:!0});Zc.decode();let $c=null;function Qc(t,e){return t>>>=0,Zc.decode((null!==$c&&0!==$c.byteLength||($c=new Uint8Array(Hc.memory.buffer)),$c).subarray(t,t+e))}function th(t,e){if(!(t instanceof e))throw new Error(`expected instance of ${e.name}`)}let eh=128;function ih(t){if(1==eh)throw new Error("out of js stack");return Vc[--eh]=t,eh}let rh=null;function nh(t,e){return t>>>=0,(null!==rh&&0!==rh.byteLength||(rh=new Int32Array(Hc.memory.buffer)),rh).subarray(t/4,t/4+e)}let ah=null;function sh(){return null!==ah&&0!==ah.byteLength||(ah=new Float32Array(Hc.memory.buffer)),ah}function oh(t,e){return t>>>=0,sh().subarray(t/4,t/4+e)}let lh=null;function ch(){return null!==lh&&0!==lh.byteLength||(lh=new Uint32Array(Hc.memory.buffer)),lh}let hh=0;function dh(t,e){const i=e(4*t.length,4)>>>0;return ch().set(t,i/4),hh=t.length,i}function uh(t,e){const i=e(4*t.length,4)>>>0;return sh().set(t,i/4),hh=t.length,i}const ph=Object.freeze({LinX:0,0:"LinX",LinY:1,1:"LinY",LinZ:2,2:"LinZ",AngX:3,3:"AngX",AngY:4,4:"AngY",AngZ:5,5:"AngZ"}),_h=Object.freeze({Revolute:0,0:"Revolute",Fixed:1,1:"Fixed",Prismatic:2,2:"Prismatic",Rope:3,3:"Rope",Spring:4,4:"Spring",Spherical:5,5:"Spherical",Generic:6,6:"Generic"}),mh=Object.freeze({Ball:0,0:"Ball",Cuboid:1,1:"Cuboid",Capsule:2,2:"Capsule",Segment:3,3:"Segment",Polyline:4,4:"Polyline",Triangle:5,5:"Triangle",TriMesh:6,6:"TriMesh",HeightField:7,7:"HeightField",Compound:8,8:"Compound",ConvexPolyhedron:9,9:"ConvexPolyhedron",Cylinder:10,10:"Cylinder",Cone:11,11:"Cone",RoundCuboid:12,12:"RoundCuboid",RoundTriangle:13,13:"RoundTriangle",RoundCylinder:14,14:"RoundCylinder",RoundCone:15,15:"RoundCone",RoundConvexPolyhedron:16,16:"RoundConvexPolyhedron",HalfSpace:17,17:"HalfSpace",Voxels:18,18:"Voxels"}),fh=Object.freeze({PseudoBall:0,0:"PseudoBall",PseudoCube:1,1:"PseudoCube"}),gh="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawbroadphase_free(t>>>0,1)));class wh{static __wrap(t){t>>>=0;const e=Object.create(wh.prototype);return e.__wbg_ptr=t,gh.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,gh.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawbroadphase_free(t,0)}constructor(){const t=Hc.rawbroadphase_new();return this.__wbg_ptr=t>>>0,gh.register(this,this.__wbg_ptr,this),this}}const vh="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawccdsolver_free(t>>>0,1)));class bh{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,vh.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawccdsolver_free(t,0)}constructor(){const t=Hc.rawccdsolver_new();return this.__wbg_ptr=t>>>0,vh.register(this,this.__wbg_ptr,this),this}}const yh="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawcharactercollision_free(t>>>0,1)));class xh{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,yh.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawcharactercollision_free(t,0)}constructor(){const t=Hc.rawcharactercollision_new();return this.__wbg_ptr=t>>>0,yh.register(this,this.__wbg_ptr,this),this}handle(){return Hc.rawcharactercollision_handle(this.__wbg_ptr)}translationDeltaApplied(){const t=Hc.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);return Ld.__wrap(t)}translationDeltaRemaining(){const t=Hc.rawcharactercollision_translationDeltaRemaining(this.__wbg_ptr);return Ld.__wrap(t)}toi(){return Hc.rawcharactercollision_toi(this.__wbg_ptr)}worldWitness1(){const t=Hc.rawcharactercollision_worldWitness1(this.__wbg_ptr);return Ld.__wrap(t)}worldWitness2(){const t=Hc.rawcharactercollision_worldWitness2(this.__wbg_ptr);return Ld.__wrap(t)}worldNormal1(){const t=Hc.rawcharactercollision_worldNormal1(this.__wbg_ptr);return Ld.__wrap(t)}worldNormal2(){const t=Hc.rawcharactercollision_worldNormal2(this.__wbg_ptr);return Ld.__wrap(t)}}const Sh="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawcolliderset_free(t>>>0,1)));class Mh{static __wrap(t){t>>>=0;const e=Object.create(Mh.prototype);return e.__wbg_ptr=t,Sh.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Sh.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawcolliderset_free(t,0)}coTranslation(t){const e=Hc.rawcolliderset_coTranslation(this.__wbg_ptr,t);return Ld.__wrap(e)}coRotation(t){const e=Hc.rawcolliderset_coRotation(this.__wbg_ptr,t);return bd.__wrap(e)}coSetTranslation(t,e,i,r){Hc.rawcolliderset_coSetTranslation(this.__wbg_ptr,t,e,i,r)}coSetTranslationWrtParent(t,e,i,r){Hc.rawcolliderset_coSetTranslationWrtParent(this.__wbg_ptr,t,e,i,r)}coSetRotation(t,e,i,r,n){Hc.rawcolliderset_coSetRotation(this.__wbg_ptr,t,e,i,r,n)}coSetRotationWrtParent(t,e,i,r,n){Hc.rawcolliderset_coSetRotationWrtParent(this.__wbg_ptr,t,e,i,r,n)}coIsSensor(t){return 0!==Hc.rawcolliderset_coIsSensor(this.__wbg_ptr,t)}coShapeType(t){return Hc.rawcolliderset_coShapeType(this.__wbg_ptr,t)}coHalfspaceNormal(t){const e=Hc.rawcolliderset_coHalfspaceNormal(this.__wbg_ptr,t);return 0===e?void 0:Ld.__wrap(e)}coHalfExtents(t){const e=Hc.rawcolliderset_coHalfExtents(this.__wbg_ptr,t);return 0===e?void 0:Ld.__wrap(e)}coSetHalfExtents(t,e){th(e,Ld),Hc.rawcolliderset_coSetHalfExtents(this.__wbg_ptr,t,e.__wbg_ptr)}coRadius(t){const e=Hc.rawcolliderset_coRadius(this.__wbg_ptr,t);return 4294967297===e?void 0:e}coSetRadius(t,e){Hc.rawcolliderset_coSetRadius(this.__wbg_ptr,t,e)}coHalfHeight(t){const e=Hc.rawcolliderset_coHalfHeight(this.__wbg_ptr,t);return 4294967297===e?void 0:e}coSetHalfHeight(t,e){Hc.rawcolliderset_coSetHalfHeight(this.__wbg_ptr,t,e)}coRoundRadius(t){const e=Hc.rawcolliderset_coRoundRadius(this.__wbg_ptr,t);return 4294967297===e?void 0:e}coSetRoundRadius(t,e){Hc.rawcolliderset_coSetRoundRadius(this.__wbg_ptr,t,e)}coVoxelData(t){try{const r=Hc.__wbindgen_add_to_stack_pointer(-16);Hc.rawcolliderset_coVoxelData(r,this.__wbg_ptr,t);var e=Jc().getInt32(r+0,!0),i=Jc().getInt32(r+4,!0);let n;return 0!==e&&(n=nh(e,i).slice(),Hc.__wbindgen_export_1(e,4*i,4)),n}finally{Hc.__wbindgen_add_to_stack_pointer(16)}}coVoxelPrimitiveGeometry(t){const e=Hc.rawcolliderset_coVoxelPrimitiveGeometry(this.__wbg_ptr,t);return 2===e?void 0:e}coVoxelSize(t){const e=Hc.rawcolliderset_coVoxelSize(this.__wbg_ptr,t);return 0===e?void 0:Ld.__wrap(e)}coSetVoxel(t,e,i,r,n){Hc.rawcolliderset_coSetVoxel(this.__wbg_ptr,t,e,i,r,n)}coVertices(t){try{const r=Hc.__wbindgen_add_to_stack_pointer(-16);Hc.rawcolliderset_coVertices(r,this.__wbg_ptr,t);var e=Jc().getInt32(r+0,!0),i=Jc().getInt32(r+4,!0);let n;return 0!==e&&(n=oh(e,i).slice(),Hc.__wbindgen_export_1(e,4*i,4)),n}finally{Hc.__wbindgen_add_to_stack_pointer(16)}}coIndices(t){try{const a=Hc.__wbindgen_add_to_stack_pointer(-16);Hc.rawcolliderset_coIndices(a,this.__wbg_ptr,t);var e=Jc().getInt32(a+0,!0),i=Jc().getInt32(a+4,!0);let s;return 0!==e&&(s=(r=e,n=i,r>>>=0,ch().subarray(r/4,r/4+n)).slice(),Hc.__wbindgen_export_1(e,4*i,4)),s}finally{Hc.__wbindgen_add_to_stack_pointer(16)}var r,n}coTriMeshFlags(t){const e=Hc.rawcolliderset_coTriMeshFlags(this.__wbg_ptr,t);return 4294967297===e?void 0:e}coHeightFieldFlags(t){const e=Hc.rawcolliderset_coHeightFieldFlags(this.__wbg_ptr,t);return 4294967297===e?void 0:e}coHeightfieldHeights(t){try{const r=Hc.__wbindgen_add_to_stack_pointer(-16);Hc.rawcolliderset_coHeightfieldHeights(r,this.__wbg_ptr,t);var e=Jc().getInt32(r+0,!0),i=Jc().getInt32(r+4,!0);let n;return 0!==e&&(n=oh(e,i).slice(),Hc.__wbindgen_export_1(e,4*i,4)),n}finally{Hc.__wbindgen_add_to_stack_pointer(16)}}coHeightfieldScale(t){const e=Hc.rawcolliderset_coHeightfieldScale(this.__wbg_ptr,t);return 0===e?void 0:Ld.__wrap(e)}coHeightfieldNRows(t){const e=Hc.rawcolliderset_coHeightfieldNRows(this.__wbg_ptr,t);return 4294967297===e?void 0:e}coHeightfieldNCols(t){const e=Hc.rawcolliderset_coHeightfieldNCols(this.__wbg_ptr,t);return 4294967297===e?void 0:e}coParent(t){try{const r=Hc.__wbindgen_add_to_stack_pointer(-16);Hc.rawcolliderset_coParent(r,this.__wbg_ptr,t);var e=Jc().getInt32(r+0,!0),i=Jc().getFloat64(r+8,!0);return 0===e?void 0:i}finally{Hc.__wbindgen_add_to_stack_pointer(16)}}coSetEnabled(t,e){Hc.rawcolliderset_coSetEnabled(this.__wbg_ptr,t,e)}coIsEnabled(t){return 0!==Hc.rawcolliderset_coIsEnabled(this.__wbg_ptr,t)}coSetContactSkin(t,e){Hc.rawcolliderset_coSetContactSkin(this.__wbg_ptr,t,e)}coContactSkin(t){return Hc.rawcolliderset_coContactSkin(this.__wbg_ptr,t)}coFriction(t){return Hc.rawcolliderset_coFriction(this.__wbg_ptr,t)}coRestitution(t){return Hc.rawcolliderset_coRestitution(this.__wbg_ptr,t)}coDensity(t){return Hc.rawcolliderset_coDensity(this.__wbg_ptr,t)}coMass(t){return Hc.rawcolliderset_coMass(this.__wbg_ptr,t)}coVolume(t){return Hc.rawcolliderset_coVolume(this.__wbg_ptr,t)}coCollisionGroups(t){return Hc.rawcolliderset_coCollisionGroups(this.__wbg_ptr,t)>>>0}coSolverGroups(t){return Hc.rawcolliderset_coSolverGroups(this.__wbg_ptr,t)>>>0}coActiveHooks(t){return Hc.rawcolliderset_coActiveHooks(this.__wbg_ptr,t)>>>0}coActiveCollisionTypes(t){return Hc.rawcolliderset_coActiveCollisionTypes(this.__wbg_ptr,t)}coActiveEvents(t){return Hc.rawcolliderset_coActiveEvents(this.__wbg_ptr,t)>>>0}coContactForceEventThreshold(t){return Hc.rawcolliderset_coContactForceEventThreshold(this.__wbg_ptr,t)}coContainsPoint(t,e){th(e,Ld);return 0!==Hc.rawcolliderset_coContainsPoint(this.__wbg_ptr,t,e.__wbg_ptr)}coCastShape(t,e,i,r,n,a,s,o,l){th(e,Ld),th(i,Td),th(r,Ld),th(n,bd),th(a,Ld);const c=Hc.rawcolliderset_coCastShape(this.__wbg_ptr,t,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n.__wbg_ptr,a.__wbg_ptr,s,o,l);return 0===c?void 0:Rd.__wrap(c)}coCastCollider(t,e,i,r,n,a,s){th(e,Ld),th(r,Ld);const o=Hc.rawcolliderset_coCastCollider(this.__wbg_ptr,t,e.__wbg_ptr,i,r.__wbg_ptr,n,a,s);return 0===o?void 0:Th.__wrap(o)}coIntersectsShape(t,e,i,r){th(e,Td),th(i,Ld),th(r,bd);return 0!==Hc.rawcolliderset_coIntersectsShape(this.__wbg_ptr,t,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr)}coContactShape(t,e,i,r,n){th(e,Td),th(i,Ld),th(r,bd);const a=Hc.rawcolliderset_coContactShape(this.__wbg_ptr,t,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n);return 0===a?void 0:Pd.__wrap(a)}coContactCollider(t,e,i){const r=Hc.rawcolliderset_coContactCollider(this.__wbg_ptr,t,e,i);return 0===r?void 0:Pd.__wrap(r)}coProjectPoint(t,e,i){th(e,Ld);const r=Hc.rawcolliderset_coProjectPoint(this.__wbg_ptr,t,e.__wbg_ptr,i);return ld.__wrap(r)}coIntersectsRay(t,e,i,r){th(e,Ld),th(i,Ld);return 0!==Hc.rawcolliderset_coIntersectsRay(this.__wbg_ptr,t,e.__wbg_ptr,i.__wbg_ptr,r)}coCastRay(t,e,i,r,n){th(e,Ld),th(i,Ld);return Hc.rawcolliderset_coCastRay(this.__wbg_ptr,t,e.__wbg_ptr,i.__wbg_ptr,r,n)}coCastRayAndGetNormal(t,e,i,r,n){th(e,Ld),th(i,Ld);const a=Hc.rawcolliderset_coCastRayAndGetNormal(this.__wbg_ptr,t,e.__wbg_ptr,i.__wbg_ptr,r,n);return 0===a?void 0:fd.__wrap(a)}coSetSensor(t,e){Hc.rawcolliderset_coSetSensor(this.__wbg_ptr,t,e)}coSetRestitution(t,e){Hc.rawcolliderset_coSetRestitution(this.__wbg_ptr,t,e)}coSetFriction(t,e){Hc.rawcolliderset_coSetFriction(this.__wbg_ptr,t,e)}coFrictionCombineRule(t){return Hc.rawcolliderset_coFrictionCombineRule(this.__wbg_ptr,t)>>>0}coSetFrictionCombineRule(t,e){Hc.rawcolliderset_coSetFrictionCombineRule(this.__wbg_ptr,t,e)}coRestitutionCombineRule(t){return Hc.rawcolliderset_coRestitutionCombineRule(this.__wbg_ptr,t)>>>0}coSetRestitutionCombineRule(t,e){Hc.rawcolliderset_coSetRestitutionCombineRule(this.__wbg_ptr,t,e)}coSetCollisionGroups(t,e){Hc.rawcolliderset_coSetCollisionGroups(this.__wbg_ptr,t,e)}coSetSolverGroups(t,e){Hc.rawcolliderset_coSetSolverGroups(this.__wbg_ptr,t,e)}coSetActiveHooks(t,e){Hc.rawcolliderset_coSetActiveHooks(this.__wbg_ptr,t,e)}coSetActiveEvents(t,e){Hc.rawcolliderset_coSetActiveEvents(this.__wbg_ptr,t,e)}coSetActiveCollisionTypes(t,e){Hc.rawcolliderset_coSetActiveCollisionTypes(this.__wbg_ptr,t,e)}coSetShape(t,e){th(e,Td),Hc.rawcolliderset_coSetShape(this.__wbg_ptr,t,e.__wbg_ptr)}coSetContactForceEventThreshold(t,e){Hc.rawcolliderset_coSetContactForceEventThreshold(this.__wbg_ptr,t,e)}coSetDensity(t,e){Hc.rawcolliderset_coSetDensity(this.__wbg_ptr,t,e)}coSetMass(t,e){Hc.rawcolliderset_coSetMass(this.__wbg_ptr,t,e)}coSetMassProperties(t,e,i,r,n){th(i,Ld),th(r,Ld),th(n,bd),Hc.rawcolliderset_coSetMassProperties(this.__wbg_ptr,t,e,i.__wbg_ptr,r.__wbg_ptr,n.__wbg_ptr)}constructor(){const t=Hc.rawcolliderset_new();return this.__wbg_ptr=t>>>0,Sh.register(this,this.__wbg_ptr,this),this}len(){return Hc.rawcolliderset_len(this.__wbg_ptr)>>>0}contains(t){return 0!==Hc.rawcolliderset_contains(this.__wbg_ptr,t)}createCollider(t,e,i,r,n,a,s,o,l,c,h,d,u,p,_,m,f,g,w,v,b,y,x,S,M){try{const A=Hc.__wbindgen_add_to_stack_pointer(-16);th(e,Td),th(i,Ld),th(r,bd),th(s,Ld),th(o,Ld),th(l,bd),th(M,wd),Hc.rawcolliderset_createCollider(A,this.__wbg_ptr,t,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n,a,s.__wbg_ptr,o.__wbg_ptr,l.__wbg_ptr,c,h,d,u,p,_,m,f,g,w,v,b,y,x,S,M.__wbg_ptr);var E=Jc().getInt32(A+0,!0),T=Jc().getFloat64(A+8,!0);return 0===E?void 0:T}finally{Hc.__wbindgen_add_to_stack_pointer(16)}}remove(t,e,i,r){th(e,Yh),th(i,wd),Hc.rawcolliderset_remove(this.__wbg_ptr,t,e.__wbg_ptr,i.__wbg_ptr,r)}isHandleValid(t){return 0!==Hc.rawcolliderset_contains(this.__wbg_ptr,t)}forEachColliderHandle(t){try{Hc.rawcolliderset_forEachColliderHandle(this.__wbg_ptr,ih(t))}finally{Vc[eh++]=void 0}}}const Eh="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawcollidershapecasthit_free(t>>>0,1)));class Th{static __wrap(t){t>>>=0;const e=Object.create(Th.prototype);return e.__wbg_ptr=t,Eh.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Eh.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawcollidershapecasthit_free(t,0)}colliderHandle(){return Hc.rawcharactercollision_handle(this.__wbg_ptr)}time_of_impact(){return Hc.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr)}witness1(){const t=Hc.rawcollidershapecasthit_witness1(this.__wbg_ptr);return Ld.__wrap(t)}witness2(){const t=Hc.rawcollidershapecasthit_witness2(this.__wbg_ptr);return Ld.__wrap(t)}normal1(){const t=Hc.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);return Ld.__wrap(t)}normal2(){const t=Hc.rawcharactercollision_translationDeltaRemaining(this.__wbg_ptr);return Ld.__wrap(t)}}const Ah="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawcontactforceevent_free(t>>>0,1)));class Rh{static __wrap(t){t>>>=0;const e=Object.create(Rh.prototype);return e.__wbg_ptr=t,Ah.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Ah.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawcontactforceevent_free(t,0)}collider1(){return Hc.rawcharactercollision_handle(this.__wbg_ptr)}collider2(){return Hc.rawcontactforceevent_collider2(this.__wbg_ptr)}total_force(){const t=Hc.rawcontactforceevent_total_force(this.__wbg_ptr);return Ld.__wrap(t)}total_force_magnitude(){return Hc.rawcontactforceevent_total_force_magnitude(this.__wbg_ptr)}max_force_direction(){const t=Hc.rawcontactforceevent_max_force_direction(this.__wbg_ptr);return Ld.__wrap(t)}max_force_magnitude(){return Hc.rawcontactforceevent_max_force_magnitude(this.__wbg_ptr)}}const Ch="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawcontactmanifold_free(t>>>0,1)));class Ph{static __wrap(t){t>>>=0;const e=Object.create(Ph.prototype);return e.__wbg_ptr=t,Ch.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Ch.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawcontactmanifold_free(t,0)}normal(){const t=Hc.rawcontactmanifold_normal(this.__wbg_ptr);return Ld.__wrap(t)}local_n1(){const t=Hc.rawcontactmanifold_local_n1(this.__wbg_ptr);return Ld.__wrap(t)}local_n2(){const t=Hc.rawcontactmanifold_local_n2(this.__wbg_ptr);return Ld.__wrap(t)}subshape1(){return Hc.rawcontactmanifold_subshape1(this.__wbg_ptr)>>>0}subshape2(){return Hc.rawcontactmanifold_subshape2(this.__wbg_ptr)>>>0}num_contacts(){return Hc.rawcontactmanifold_num_contacts(this.__wbg_ptr)>>>0}contact_local_p1(t){const e=Hc.rawcontactmanifold_contact_local_p1(this.__wbg_ptr,t);return 0===e?void 0:Ld.__wrap(e)}contact_local_p2(t){const e=Hc.rawcontactmanifold_contact_local_p2(this.__wbg_ptr,t);return 0===e?void 0:Ld.__wrap(e)}contact_dist(t){return Hc.rawcontactmanifold_contact_dist(this.__wbg_ptr,t)}contact_fid1(t){return Hc.rawcontactmanifold_contact_fid1(this.__wbg_ptr,t)>>>0}contact_fid2(t){return Hc.rawcontactmanifold_contact_fid2(this.__wbg_ptr,t)>>>0}contact_impulse(t){return Hc.rawcontactmanifold_contact_impulse(this.__wbg_ptr,t)}contact_tangent_impulse_x(t){return Hc.rawcontactmanifold_contact_tangent_impulse_x(this.__wbg_ptr,t)}contact_tangent_impulse_y(t){return Hc.rawcontactmanifold_contact_tangent_impulse_y(this.__wbg_ptr,t)}num_solver_contacts(){return Hc.rawcontactmanifold_num_solver_contacts(this.__wbg_ptr)>>>0}solver_contact_point(t){const e=Hc.rawcontactmanifold_solver_contact_point(this.__wbg_ptr,t);return 0===e?void 0:Ld.__wrap(e)}solver_contact_dist(t){return Hc.rawcontactmanifold_solver_contact_dist(this.__wbg_ptr,t)}solver_contact_friction(t){return Hc.rawcontactmanifold_solver_contact_friction(this.__wbg_ptr,t)}solver_contact_restitution(t){return Hc.rawcontactmanifold_solver_contact_restitution(this.__wbg_ptr,t)}solver_contact_tangent_velocity(t){const e=Hc.rawcontactmanifold_solver_contact_tangent_velocity(this.__wbg_ptr,t);return Ld.__wrap(e)}}const Ih="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawcontactpair_free(t>>>0,1)));class Lh{static __wrap(t){t>>>=0;const e=Object.create(Lh.prototype);return e.__wbg_ptr=t,Ih.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Ih.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawcontactpair_free(t,0)}collider1(){return Hc.rawcontactpair_collider1(this.__wbg_ptr)}collider2(){return Hc.rawcontactpair_collider2(this.__wbg_ptr)}numContactManifolds(){return Hc.rawcontactpair_numContactManifolds(this.__wbg_ptr)>>>0}contactManifold(t){const e=Hc.rawcontactpair_contactManifold(this.__wbg_ptr,t);return 0===e?void 0:Ph.__wrap(e)}}const Dh="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawdebugrenderpipeline_free(t>>>0,1)));class Uh{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Dh.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawdebugrenderpipeline_free(t,0)}constructor(){const t=Hc.rawdebugrenderpipeline_new();return this.__wbg_ptr=t>>>0,Dh.register(this,this.__wbg_ptr,this),this}vertices(){return Kc(Hc.rawdebugrenderpipeline_vertices(this.__wbg_ptr))}colors(){return Kc(Hc.rawdebugrenderpipeline_colors(this.__wbg_ptr))}render(t,e,i,r,n){th(t,wd),th(e,Mh),th(i,jh),th(r,$h),th(n,td),Hc.rawdebugrenderpipeline_render(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n.__wbg_ptr)}}const Nh="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawdeserializedworld_free(t>>>0,1)));class Fh{static __wrap(t){t>>>=0;const e=Object.create(Fh.prototype);return e.__wbg_ptr=t,Nh.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Nh.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawdeserializedworld_free(t,0)}takeGravity(){const t=Hc.rawdeserializedworld_takeGravity(this.__wbg_ptr);return 0===t?void 0:Ld.__wrap(t)}takeIntegrationParameters(){const t=Hc.rawdeserializedworld_takeIntegrationParameters(this.__wbg_ptr);return 0===t?void 0:Xh.__wrap(t)}takeIslandManager(){const t=Hc.rawdeserializedworld_takeIslandManager(this.__wbg_ptr);return 0===t?void 0:Yh.__wrap(t)}takeBroadPhase(){const t=Hc.rawdeserializedworld_takeBroadPhase(this.__wbg_ptr);return 0===t?void 0:wh.__wrap(t)}takeNarrowPhase(){const t=Hc.rawdeserializedworld_takeNarrowPhase(this.__wbg_ptr);return 0===t?void 0:td.__wrap(t)}takeBodies(){const t=Hc.rawdeserializedworld_takeBodies(this.__wbg_ptr);return 0===t?void 0:wd.__wrap(t)}takeColliders(){const t=Hc.rawdeserializedworld_takeColliders(this.__wbg_ptr);return 0===t?void 0:Mh.__wrap(t)}takeImpulseJoints(){const t=Hc.rawdeserializedworld_takeImpulseJoints(this.__wbg_ptr);return 0===t?void 0:jh.__wrap(t)}takeMultibodyJoints(){const t=Hc.rawdeserializedworld_takeMultibodyJoints(this.__wbg_ptr);return 0===t?void 0:$h.__wrap(t)}}const Oh="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawdynamicraycastvehiclecontroller_free(t>>>0,1)));class zh{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Oh.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawdynamicraycastvehiclecontroller_free(t,0)}constructor(t){const e=Hc.rawdynamicraycastvehiclecontroller_new(t);return this.__wbg_ptr=e>>>0,Oh.register(this,this.__wbg_ptr,this),this}current_vehicle_speed(){return Hc.rawdynamicraycastvehiclecontroller_current_vehicle_speed(this.__wbg_ptr)}chassis(){return Hc.rawdynamicraycastvehiclecontroller_chassis(this.__wbg_ptr)}index_up_axis(){return Hc.rawdynamicraycastvehiclecontroller_index_up_axis(this.__wbg_ptr)>>>0}set_index_up_axis(t){Hc.rawdynamicraycastvehiclecontroller_set_index_up_axis(this.__wbg_ptr,t)}index_forward_axis(){return Hc.rawdynamicraycastvehiclecontroller_index_forward_axis(this.__wbg_ptr)>>>0}set_index_forward_axis(t){Hc.rawdynamicraycastvehiclecontroller_set_index_forward_axis(this.__wbg_ptr,t)}add_wheel(t,e,i,r,n){th(t,Ld),th(e,Ld),th(i,Ld),Hc.rawdynamicraycastvehiclecontroller_add_wheel(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r,n)}num_wheels(){return Hc.rawdynamicraycastvehiclecontroller_num_wheels(this.__wbg_ptr)>>>0}update_vehicle(t,e,i,r,n,a,s){try{th(e,wd),th(i,Mh),th(r,hd),Hc.rawdynamicraycastvehiclecontroller_update_vehicle(this.__wbg_ptr,t,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n,qc(a)?4294967297:a>>>0,ih(s))}finally{Vc[eh++]=void 0}}wheel_chassis_connection_point_cs(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_chassis_connection_point_cs(this.__wbg_ptr,t);return 0===e?void 0:Ld.__wrap(e)}set_wheel_chassis_connection_point_cs(t,e){th(e,Ld),Hc.rawdynamicraycastvehiclecontroller_set_wheel_chassis_connection_point_cs(this.__wbg_ptr,t,e.__wbg_ptr)}wheel_suspension_rest_length(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_suspension_rest_length(this.__wbg_ptr,t);return 4294967297===e?void 0:e}set_wheel_suspension_rest_length(t,e){Hc.rawdynamicraycastvehiclecontroller_set_wheel_suspension_rest_length(this.__wbg_ptr,t,e)}wheel_max_suspension_travel(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_max_suspension_travel(this.__wbg_ptr,t);return 4294967297===e?void 0:e}set_wheel_max_suspension_travel(t,e){Hc.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_travel(this.__wbg_ptr,t,e)}wheel_radius(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_radius(this.__wbg_ptr,t);return 4294967297===e?void 0:e}set_wheel_radius(t,e){Hc.rawdynamicraycastvehiclecontroller_set_wheel_radius(this.__wbg_ptr,t,e)}wheel_suspension_stiffness(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_suspension_stiffness(this.__wbg_ptr,t);return 4294967297===e?void 0:e}set_wheel_suspension_stiffness(t,e){Hc.rawdynamicraycastvehiclecontroller_set_wheel_suspension_stiffness(this.__wbg_ptr,t,e)}wheel_suspension_compression(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_suspension_compression(this.__wbg_ptr,t);return 4294967297===e?void 0:e}set_wheel_suspension_compression(t,e){Hc.rawdynamicraycastvehiclecontroller_set_wheel_suspension_compression(this.__wbg_ptr,t,e)}wheel_suspension_relaxation(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_suspension_relaxation(this.__wbg_ptr,t);return 4294967297===e?void 0:e}set_wheel_suspension_relaxation(t,e){Hc.rawdynamicraycastvehiclecontroller_set_wheel_suspension_relaxation(this.__wbg_ptr,t,e)}wheel_max_suspension_force(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_max_suspension_force(this.__wbg_ptr,t);return 4294967297===e?void 0:e}set_wheel_max_suspension_force(t,e){Hc.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_force(this.__wbg_ptr,t,e)}wheel_brake(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_brake(this.__wbg_ptr,t);return 4294967297===e?void 0:e}set_wheel_brake(t,e){Hc.rawdynamicraycastvehiclecontroller_set_wheel_brake(this.__wbg_ptr,t,e)}wheel_steering(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_steering(this.__wbg_ptr,t);return 4294967297===e?void 0:e}set_wheel_steering(t,e){Hc.rawdynamicraycastvehiclecontroller_set_wheel_steering(this.__wbg_ptr,t,e)}wheel_engine_force(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_engine_force(this.__wbg_ptr,t);return 4294967297===e?void 0:e}set_wheel_engine_force(t,e){Hc.rawdynamicraycastvehiclecontroller_set_wheel_engine_force(this.__wbg_ptr,t,e)}wheel_direction_cs(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_direction_cs(this.__wbg_ptr,t);return 0===e?void 0:Ld.__wrap(e)}set_wheel_direction_cs(t,e){th(e,Ld),Hc.rawdynamicraycastvehiclecontroller_set_wheel_direction_cs(this.__wbg_ptr,t,e.__wbg_ptr)}wheel_axle_cs(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_axle_cs(this.__wbg_ptr,t);return 0===e?void 0:Ld.__wrap(e)}set_wheel_axle_cs(t,e){th(e,Ld),Hc.rawdynamicraycastvehiclecontroller_set_wheel_axle_cs(this.__wbg_ptr,t,e.__wbg_ptr)}wheel_friction_slip(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_friction_slip(this.__wbg_ptr,t);return 4294967297===e?void 0:e}set_wheel_friction_slip(t,e){Hc.rawdynamicraycastvehiclecontroller_set_wheel_friction_slip(this.__wbg_ptr,t,e)}wheel_side_friction_stiffness(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_side_friction_stiffness(this.__wbg_ptr,t);return 4294967297===e?void 0:e}set_wheel_side_friction_stiffness(t,e){Hc.rawdynamicraycastvehiclecontroller_set_wheel_side_friction_stiffness(this.__wbg_ptr,t,e)}wheel_rotation(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_rotation(this.__wbg_ptr,t);return 4294967297===e?void 0:e}wheel_forward_impulse(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_forward_impulse(this.__wbg_ptr,t);return 4294967297===e?void 0:e}wheel_side_impulse(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_side_impulse(this.__wbg_ptr,t);return 4294967297===e?void 0:e}wheel_suspension_force(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_suspension_force(this.__wbg_ptr,t);return 4294967297===e?void 0:e}wheel_contact_normal_ws(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_contact_normal_ws(this.__wbg_ptr,t);return 0===e?void 0:Ld.__wrap(e)}wheel_contact_point_ws(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_contact_point_ws(this.__wbg_ptr,t);return 0===e?void 0:Ld.__wrap(e)}wheel_suspension_length(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_suspension_length(this.__wbg_ptr,t);return 4294967297===e?void 0:e}wheel_hard_point_ws(t){const e=Hc.rawdynamicraycastvehiclecontroller_wheel_hard_point_ws(this.__wbg_ptr,t);return 0===e?void 0:Ld.__wrap(e)}wheel_is_in_contact(t){return 0!==Hc.rawdynamicraycastvehiclecontroller_wheel_is_in_contact(this.__wbg_ptr,t)}wheel_ground_object(t){try{const r=Hc.__wbindgen_add_to_stack_pointer(-16);Hc.rawdynamicraycastvehiclecontroller_wheel_ground_object(r,this.__wbg_ptr,t);var e=Jc().getInt32(r+0,!0),i=Jc().getFloat64(r+8,!0);return 0===e?void 0:i}finally{Hc.__wbindgen_add_to_stack_pointer(16)}}}const Bh="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_raweventqueue_free(t>>>0,1)));class kh{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Bh.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_raweventqueue_free(t,0)}constructor(t){const e=Hc.raweventqueue_new(t);return this.__wbg_ptr=e>>>0,Bh.register(this,this.__wbg_ptr,this),this}drainCollisionEvents(t){try{Hc.raweventqueue_drainCollisionEvents(this.__wbg_ptr,ih(t))}finally{Vc[eh++]=void 0}}drainContactForceEvents(t){try{Hc.raweventqueue_drainContactForceEvents(this.__wbg_ptr,ih(t))}finally{Vc[eh++]=void 0}}clear(){Hc.raweventqueue_clear(this.__wbg_ptr)}}const Hh="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawgenericjoint_free(t>>>0,1)));class Vh{static __wrap(t){t>>>=0;const e=Object.create(Vh.prototype);return e.__wbg_ptr=t,Hh.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Hh.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawgenericjoint_free(t,0)}static generic(t,e,i,r){th(t,Ld),th(e,Ld),th(i,Ld);const n=Hc.rawgenericjoint_generic(t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r);return 0===n?void 0:Vh.__wrap(n)}static spring(t,e,i,r,n){th(r,Ld),th(n,Ld);const a=Hc.rawgenericjoint_spring(t,e,i,r.__wbg_ptr,n.__wbg_ptr);return Vh.__wrap(a)}static rope(t,e,i){th(e,Ld),th(i,Ld);const r=Hc.rawgenericjoint_rope(t,e.__wbg_ptr,i.__wbg_ptr);return Vh.__wrap(r)}static spherical(t,e){th(t,Ld),th(e,Ld);const i=Hc.rawgenericjoint_spherical(t.__wbg_ptr,e.__wbg_ptr);return Vh.__wrap(i)}static prismatic(t,e,i,r,n,a){th(t,Ld),th(e,Ld),th(i,Ld);const s=Hc.rawgenericjoint_prismatic(t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r,n,a);return 0===s?void 0:Vh.__wrap(s)}static fixed(t,e,i,r){th(t,Ld),th(e,bd),th(i,Ld),th(r,bd);const n=Hc.rawgenericjoint_fixed(t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr);return Vh.__wrap(n)}static revolute(t,e,i){th(t,Ld),th(e,Ld),th(i,Ld);const r=Hc.rawgenericjoint_revolute(t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr);return 0===r?void 0:Vh.__wrap(r)}}const Gh="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawimpulsejointset_free(t>>>0,1)));class jh{static __wrap(t){t>>>=0;const e=Object.create(jh.prototype);return e.__wbg_ptr=t,Gh.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Gh.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawimpulsejointset_free(t,0)}jointType(t){return Hc.rawimpulsejointset_jointType(this.__wbg_ptr,t)}jointBodyHandle1(t){return Hc.rawimpulsejointset_jointBodyHandle1(this.__wbg_ptr,t)}jointBodyHandle2(t){return Hc.rawimpulsejointset_jointBodyHandle2(this.__wbg_ptr,t)}jointFrameX1(t){const e=Hc.rawimpulsejointset_jointFrameX1(this.__wbg_ptr,t);return bd.__wrap(e)}jointFrameX2(t){const e=Hc.rawimpulsejointset_jointFrameX2(this.__wbg_ptr,t);return bd.__wrap(e)}jointAnchor1(t){const e=Hc.rawimpulsejointset_jointAnchor1(this.__wbg_ptr,t);return Ld.__wrap(e)}jointAnchor2(t){const e=Hc.rawimpulsejointset_jointAnchor2(this.__wbg_ptr,t);return Ld.__wrap(e)}jointSetAnchor1(t,e){th(e,Ld),Hc.rawimpulsejointset_jointSetAnchor1(this.__wbg_ptr,t,e.__wbg_ptr)}jointSetAnchor2(t,e){th(e,Ld),Hc.rawimpulsejointset_jointSetAnchor2(this.__wbg_ptr,t,e.__wbg_ptr)}jointContactsEnabled(t){return 0!==Hc.rawimpulsejointset_jointContactsEnabled(this.__wbg_ptr,t)}jointSetContactsEnabled(t,e){Hc.rawimpulsejointset_jointSetContactsEnabled(this.__wbg_ptr,t,e)}jointLimitsEnabled(t,e){return 0!==Hc.rawimpulsejointset_jointLimitsEnabled(this.__wbg_ptr,t,e)}jointLimitsMin(t,e){return Hc.rawimpulsejointset_jointLimitsMin(this.__wbg_ptr,t,e)}jointLimitsMax(t,e){return Hc.rawimpulsejointset_jointLimitsMax(this.__wbg_ptr,t,e)}jointSetLimits(t,e,i,r){Hc.rawimpulsejointset_jointSetLimits(this.__wbg_ptr,t,e,i,r)}jointConfigureMotorModel(t,e,i){Hc.rawimpulsejointset_jointConfigureMotorModel(this.__wbg_ptr,t,e,i)}jointConfigureMotorVelocity(t,e,i,r){Hc.rawimpulsejointset_jointConfigureMotorVelocity(this.__wbg_ptr,t,e,i,r)}jointConfigureMotorPosition(t,e,i,r,n){Hc.rawimpulsejointset_jointConfigureMotorPosition(this.__wbg_ptr,t,e,i,r,n)}jointConfigureMotor(t,e,i,r,n,a){Hc.rawimpulsejointset_jointConfigureMotor(this.__wbg_ptr,t,e,i,r,n,a)}constructor(){const t=Hc.rawimpulsejointset_new();return this.__wbg_ptr=t>>>0,Gh.register(this,this.__wbg_ptr,this),this}createJoint(t,e,i,r){th(t,Vh);return Hc.rawimpulsejointset_createJoint(this.__wbg_ptr,t.__wbg_ptr,e,i,r)}remove(t,e){Hc.rawimpulsejointset_remove(this.__wbg_ptr,t,e)}len(){return Hc.rawimpulsejointset_len(this.__wbg_ptr)>>>0}contains(t){return 0!==Hc.rawimpulsejointset_contains(this.__wbg_ptr,t)}forEachJointHandle(t){try{Hc.rawimpulsejointset_forEachJointHandle(this.__wbg_ptr,ih(t))}finally{Vc[eh++]=void 0}}forEachJointAttachedToRigidBody(t,e){try{Hc.rawimpulsejointset_forEachJointAttachedToRigidBody(this.__wbg_ptr,t,ih(e))}finally{Vc[eh++]=void 0}}}const Wh="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawintegrationparameters_free(t>>>0,1)));class Xh{static __wrap(t){t>>>=0;const e=Object.create(Xh.prototype);return e.__wbg_ptr=t,Wh.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Wh.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawintegrationparameters_free(t,0)}constructor(){const t=Hc.rawintegrationparameters_new();return this.__wbg_ptr=t>>>0,Wh.register(this,this.__wbg_ptr,this),this}get dt(){return Hc.rawintegrationparameters_dt(this.__wbg_ptr)}get contact_erp(){return Hc.rawintegrationparameters_contact_erp(this.__wbg_ptr)}get normalizedAllowedLinearError(){return Hc.rawdynamicraycastvehiclecontroller_current_vehicle_speed(this.__wbg_ptr)}get normalizedPredictionDistance(){return Hc.rawcontactforceevent_max_force_magnitude(this.__wbg_ptr)}get numSolverIterations(){return Hc.rawintegrationparameters_numSolverIterations(this.__wbg_ptr)>>>0}get numAdditionalFrictionIterations(){return Hc.rawdynamicraycastvehiclecontroller_index_up_axis(this.__wbg_ptr)>>>0}get numInternalPgsIterations(){return Hc.rawdynamicraycastvehiclecontroller_index_forward_axis(this.__wbg_ptr)>>>0}get minIslandSize(){return Hc.rawintegrationparameters_minIslandSize(this.__wbg_ptr)>>>0}get maxCcdSubsteps(){return Hc.rawintegrationparameters_maxCcdSubsteps(this.__wbg_ptr)>>>0}get lengthUnit(){return Hc.rawintegrationparameters_lengthUnit(this.__wbg_ptr)}set dt(t){Hc.rawintegrationparameters_set_dt(this.__wbg_ptr,t)}set contact_natural_frequency(t){Hc.rawintegrationparameters_set_contact_natural_frequency(this.__wbg_ptr,t)}set normalizedAllowedLinearError(t){Hc.rawintegrationparameters_set_normalizedAllowedLinearError(this.__wbg_ptr,t)}set normalizedPredictionDistance(t){Hc.rawintegrationparameters_set_normalizedPredictionDistance(this.__wbg_ptr,t)}set numSolverIterations(t){Hc.rawintegrationparameters_set_numSolverIterations(this.__wbg_ptr,t)}set numAdditionalFrictionIterations(t){Hc.rawdynamicraycastvehiclecontroller_set_index_up_axis(this.__wbg_ptr,t)}set numInternalPgsIterations(t){Hc.rawdynamicraycastvehiclecontroller_set_index_forward_axis(this.__wbg_ptr,t)}set minIslandSize(t){Hc.rawintegrationparameters_set_minIslandSize(this.__wbg_ptr,t)}set maxCcdSubsteps(t){Hc.rawintegrationparameters_set_maxCcdSubsteps(this.__wbg_ptr,t)}set lengthUnit(t){Hc.rawintegrationparameters_set_lengthUnit(this.__wbg_ptr,t)}switchToStandardPgsSolver(){Hc.rawintegrationparameters_switchToStandardPgsSolver(this.__wbg_ptr)}switchToSmallStepsPgsSolver(){Hc.rawintegrationparameters_switchToSmallStepsPgsSolver(this.__wbg_ptr)}switchToSmallStepsPgsSolverWithoutWarmstart(){Hc.rawintegrationparameters_switchToSmallStepsPgsSolverWithoutWarmstart(this.__wbg_ptr)}}const qh="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawislandmanager_free(t>>>0,1)));class Yh{static __wrap(t){t>>>=0;const e=Object.create(Yh.prototype);return e.__wbg_ptr=t,qh.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,qh.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawislandmanager_free(t,0)}constructor(){const t=Hc.rawislandmanager_new();return this.__wbg_ptr=t>>>0,qh.register(this,this.__wbg_ptr,this),this}forEachActiveRigidBodyHandle(t){try{Hc.rawislandmanager_forEachActiveRigidBodyHandle(this.__wbg_ptr,ih(t))}finally{Vc[eh++]=void 0}}}const Jh="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawkinematiccharactercontroller_free(t>>>0,1)));class Kh{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Jh.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawkinematiccharactercontroller_free(t,0)}constructor(t){const e=Hc.rawkinematiccharactercontroller_new(t);return this.__wbg_ptr=e>>>0,Jh.register(this,this.__wbg_ptr,this),this}up(){const t=Hc.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);return Ld.__wrap(t)}setUp(t){th(t,Ld),Hc.rawkinematiccharactercontroller_setUp(this.__wbg_ptr,t.__wbg_ptr)}normalNudgeFactor(){return Hc.rawkinematiccharactercontroller_normalNudgeFactor(this.__wbg_ptr)}setNormalNudgeFactor(t){Hc.rawkinematiccharactercontroller_setNormalNudgeFactor(this.__wbg_ptr,t)}offset(){return Hc.rawintegrationparameters_dt(this.__wbg_ptr)}setOffset(t){Hc.rawkinematiccharactercontroller_setOffset(this.__wbg_ptr,t)}slideEnabled(){return 0!==Hc.rawkinematiccharactercontroller_slideEnabled(this.__wbg_ptr)}setSlideEnabled(t){Hc.rawkinematiccharactercontroller_setSlideEnabled(this.__wbg_ptr,t)}autostepMaxHeight(){const t=Hc.rawkinematiccharactercontroller_autostepMaxHeight(this.__wbg_ptr);return 4294967297===t?void 0:t}autostepMinWidth(){const t=Hc.rawkinematiccharactercontroller_autostepMinWidth(this.__wbg_ptr);return 4294967297===t?void 0:t}autostepIncludesDynamicBodies(){const t=Hc.rawkinematiccharactercontroller_autostepIncludesDynamicBodies(this.__wbg_ptr);return 16777215===t?void 0:0!==t}autostepEnabled(){return 0!==Hc.rawkinematiccharactercontroller_autostepEnabled(this.__wbg_ptr)}enableAutostep(t,e,i){Hc.rawkinematiccharactercontroller_enableAutostep(this.__wbg_ptr,t,e,i)}disableAutostep(){Hc.rawkinematiccharactercontroller_disableAutostep(this.__wbg_ptr)}maxSlopeClimbAngle(){return Hc.rawkinematiccharactercontroller_maxSlopeClimbAngle(this.__wbg_ptr)}setMaxSlopeClimbAngle(t){Hc.rawkinematiccharactercontroller_setMaxSlopeClimbAngle(this.__wbg_ptr,t)}minSlopeSlideAngle(){return Hc.rawkinematiccharactercontroller_minSlopeSlideAngle(this.__wbg_ptr)}setMinSlopeSlideAngle(t){Hc.rawkinematiccharactercontroller_setMinSlopeSlideAngle(this.__wbg_ptr,t)}snapToGroundDistance(){const t=Hc.rawkinematiccharactercontroller_snapToGroundDistance(this.__wbg_ptr);return 4294967297===t?void 0:t}enableSnapToGround(t){Hc.rawkinematiccharactercontroller_enableSnapToGround(this.__wbg_ptr,t)}disableSnapToGround(){Hc.rawkinematiccharactercontroller_disableSnapToGround(this.__wbg_ptr)}snapToGroundEnabled(){return 0!==Hc.rawkinematiccharactercontroller_snapToGroundEnabled(this.__wbg_ptr)}computeColliderMovement(t,e,i,r,n,a,s,o,l,c,h){try{th(e,wd),th(i,Mh),th(r,hd),th(a,Ld),Hc.rawkinematiccharactercontroller_computeColliderMovement(this.__wbg_ptr,t,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n,a.__wbg_ptr,s,qc(o)?4294967297:Math.fround(o),l,qc(c)?4294967297:c>>>0,ih(h))}finally{Vc[eh++]=void 0}}computedMovement(){const t=Hc.rawkinematiccharactercontroller_computedMovement(this.__wbg_ptr);return Ld.__wrap(t)}computedGrounded(){return 0!==Hc.rawkinematiccharactercontroller_computedGrounded(this.__wbg_ptr)}numComputedCollisions(){return Hc.rawkinematiccharactercontroller_numComputedCollisions(this.__wbg_ptr)>>>0}computedCollision(t,e){th(e,xh);return 0!==Hc.rawkinematiccharactercontroller_computedCollision(this.__wbg_ptr,t,e.__wbg_ptr)}}const Zh="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawmultibodyjointset_free(t>>>0,1)));class $h{static __wrap(t){t>>>=0;const e=Object.create($h.prototype);return e.__wbg_ptr=t,Zh.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Zh.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawmultibodyjointset_free(t,0)}jointType(t){return Hc.rawmultibodyjointset_jointType(this.__wbg_ptr,t)}jointFrameX1(t){const e=Hc.rawmultibodyjointset_jointFrameX1(this.__wbg_ptr,t);return bd.__wrap(e)}jointFrameX2(t){const e=Hc.rawmultibodyjointset_jointFrameX2(this.__wbg_ptr,t);return bd.__wrap(e)}jointAnchor1(t){const e=Hc.rawmultibodyjointset_jointAnchor1(this.__wbg_ptr,t);return Ld.__wrap(e)}jointAnchor2(t){const e=Hc.rawmultibodyjointset_jointAnchor2(this.__wbg_ptr,t);return Ld.__wrap(e)}jointContactsEnabled(t){return 0!==Hc.rawmultibodyjointset_jointContactsEnabled(this.__wbg_ptr,t)}jointSetContactsEnabled(t,e){Hc.rawmultibodyjointset_jointSetContactsEnabled(this.__wbg_ptr,t,e)}jointLimitsEnabled(t,e){return 0!==Hc.rawmultibodyjointset_jointLimitsEnabled(this.__wbg_ptr,t,e)}jointLimitsMin(t,e){return Hc.rawmultibodyjointset_jointLimitsMin(this.__wbg_ptr,t,e)}jointLimitsMax(t,e){return Hc.rawmultibodyjointset_jointLimitsMax(this.__wbg_ptr,t,e)}constructor(){const t=Hc.rawmultibodyjointset_new();return this.__wbg_ptr=t>>>0,Zh.register(this,this.__wbg_ptr,this),this}createJoint(t,e,i,r){th(t,Vh);return Hc.rawmultibodyjointset_createJoint(this.__wbg_ptr,t.__wbg_ptr,e,i,r)}remove(t,e){Hc.rawmultibodyjointset_remove(this.__wbg_ptr,t,e)}contains(t){return 0!==Hc.rawmultibodyjointset_contains(this.__wbg_ptr,t)}forEachJointHandle(t){try{Hc.rawmultibodyjointset_forEachJointHandle(this.__wbg_ptr,ih(t))}finally{Vc[eh++]=void 0}}forEachJointAttachedToRigidBody(t,e){try{Hc.rawmultibodyjointset_forEachJointAttachedToRigidBody(this.__wbg_ptr,t,ih(e))}finally{Vc[eh++]=void 0}}}const Qh="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawnarrowphase_free(t>>>0,1)));class td{static __wrap(t){t>>>=0;const e=Object.create(td.prototype);return e.__wbg_ptr=t,Qh.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Qh.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawnarrowphase_free(t,0)}constructor(){const t=Hc.rawnarrowphase_new();return this.__wbg_ptr=t>>>0,Qh.register(this,this.__wbg_ptr,this),this}contact_pairs_with(t,e){Hc.rawnarrowphase_contact_pairs_with(this.__wbg_ptr,t,Wc(e))}contact_pair(t,e){const i=Hc.rawnarrowphase_contact_pair(this.__wbg_ptr,t,e);return 0===i?void 0:Lh.__wrap(i)}intersection_pairs_with(t,e){Hc.rawnarrowphase_intersection_pairs_with(this.__wbg_ptr,t,Wc(e))}intersection_pair(t,e){return 0!==Hc.rawnarrowphase_intersection_pair(this.__wbg_ptr,t,e)}}const ed="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawphysicspipeline_free(t>>>0,1)));class id{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,ed.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawphysicspipeline_free(t,0)}constructor(){const t=Hc.rawphysicspipeline_new();return this.__wbg_ptr=t>>>0,ed.register(this,this.__wbg_ptr,this),this}step(t,e,i,r,n,a,s,o,l,c){th(t,Ld),th(e,Xh),th(i,Yh),th(r,wh),th(n,td),th(a,wd),th(s,Mh),th(o,jh),th(l,$h),th(c,bh),Hc.rawphysicspipeline_step(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n.__wbg_ptr,a.__wbg_ptr,s.__wbg_ptr,o.__wbg_ptr,l.__wbg_ptr,c.__wbg_ptr)}stepWithEvents(t,e,i,r,n,a,s,o,l,c,h,d,u,p){th(t,Ld),th(e,Xh),th(i,Yh),th(r,wh),th(n,td),th(a,wd),th(s,Mh),th(o,jh),th(l,$h),th(c,bh),th(h,kh),Hc.rawphysicspipeline_stepWithEvents(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n.__wbg_ptr,a.__wbg_ptr,s.__wbg_ptr,o.__wbg_ptr,l.__wbg_ptr,c.__wbg_ptr,h.__wbg_ptr,Wc(d),Wc(u),Wc(p))}}const rd="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawpidcontroller_free(t>>>0,1)));class nd{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,rd.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawpidcontroller_free(t,0)}constructor(t,e,i,r){const n=Hc.rawpidcontroller_new(t,e,i,r);return this.__wbg_ptr=n>>>0,rd.register(this,this.__wbg_ptr,this),this}set_kp(t,e){Hc.rawpidcontroller_set_kp(this.__wbg_ptr,t,e)}set_ki(t,e){Hc.rawpidcontroller_set_ki(this.__wbg_ptr,t,e)}set_kd(t,e){Hc.rawpidcontroller_set_kd(this.__wbg_ptr,t,e)}set_axes_mask(t){Hc.rawpidcontroller_set_axes_mask(this.__wbg_ptr,t)}reset_integrals(){Hc.rawpidcontroller_reset_integrals(this.__wbg_ptr)}apply_linear_correction(t,e,i,r,n){th(e,wd),th(r,Ld),th(n,Ld),Hc.rawpidcontroller_apply_linear_correction(this.__wbg_ptr,t,e.__wbg_ptr,i,r.__wbg_ptr,n.__wbg_ptr)}apply_angular_correction(t,e,i,r,n){th(e,wd),th(r,bd),th(n,Ld),Hc.rawpidcontroller_apply_angular_correction(this.__wbg_ptr,t,e.__wbg_ptr,i,r.__wbg_ptr,n.__wbg_ptr)}linear_correction(t,e,i,r,n){th(e,wd),th(r,Ld),th(n,Ld);const a=Hc.rawpidcontroller_linear_correction(this.__wbg_ptr,t,e.__wbg_ptr,i,r.__wbg_ptr,n.__wbg_ptr);return Ld.__wrap(a)}angular_correction(t,e,i,r,n){th(e,wd),th(r,bd),th(n,Ld);const a=Hc.rawpidcontroller_angular_correction(this.__wbg_ptr,t,e.__wbg_ptr,i,r.__wbg_ptr,n.__wbg_ptr);return Ld.__wrap(a)}}const ad="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawpointcolliderprojection_free(t>>>0,1)));class sd{static __wrap(t){t>>>=0;const e=Object.create(sd.prototype);return e.__wbg_ptr=t,ad.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,ad.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawpointcolliderprojection_free(t,0)}colliderHandle(){return Hc.rawpointcolliderprojection_colliderHandle(this.__wbg_ptr)}point(){const t=Hc.rawpointcolliderprojection_point(this.__wbg_ptr);return Ld.__wrap(t)}isInside(){return 0!==Hc.rawpointcolliderprojection_isInside(this.__wbg_ptr)}featureType(){return Hc.rawpointcolliderprojection_featureType(this.__wbg_ptr)}featureId(){const t=Hc.rawpointcolliderprojection_featureId(this.__wbg_ptr);return 4294967297===t?void 0:t}}const od="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawpointprojection_free(t>>>0,1)));class ld{static __wrap(t){t>>>=0;const e=Object.create(ld.prototype);return e.__wbg_ptr=t,od.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,od.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawpointprojection_free(t,0)}point(){const t=Hc.rawpointprojection_point(this.__wbg_ptr);return Ld.__wrap(t)}isInside(){return 0!==Hc.rawpointprojection_isInside(this.__wbg_ptr)}}const cd="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawquerypipeline_free(t>>>0,1)));class hd{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,cd.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawquerypipeline_free(t,0)}constructor(){const t=Hc.rawquerypipeline_new();return this.__wbg_ptr=t>>>0,cd.register(this,this.__wbg_ptr,this),this}update(t){th(t,Mh),Hc.rawquerypipeline_update(this.__wbg_ptr,t.__wbg_ptr)}castRay(t,e,i,r,n,a,s,o,l,c,h){try{th(t,wd),th(e,Mh),th(i,Ld),th(r,Ld);const d=Hc.rawquerypipeline_castRay(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n,a,s,qc(o)?4294967297:o>>>0,!qc(l),qc(l)?0:l,!qc(c),qc(c)?0:c,ih(h));return 0===d?void 0:ud.__wrap(d)}finally{Vc[eh++]=void 0}}castRayAndGetNormal(t,e,i,r,n,a,s,o,l,c,h){try{th(t,wd),th(e,Mh),th(i,Ld),th(r,Ld);const d=Hc.rawquerypipeline_castRayAndGetNormal(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n,a,s,qc(o)?4294967297:o>>>0,!qc(l),qc(l)?0:l,!qc(c),qc(c)?0:c,ih(h));return 0===d?void 0:_d.__wrap(d)}finally{Vc[eh++]=void 0}}intersectionsWithRay(t,e,i,r,n,a,s,o,l,c,h,d){try{th(t,wd),th(e,Mh),th(i,Ld),th(r,Ld),Hc.rawquerypipeline_intersectionsWithRay(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n,a,ih(s),o,qc(l)?4294967297:l>>>0,!qc(c),qc(c)?0:c,!qc(h),qc(h)?0:h,ih(d))}finally{Vc[eh++]=void 0,Vc[eh++]=void 0}}intersectionWithShape(t,e,i,r,n,a,s,o,l,c){try{const u=Hc.__wbindgen_add_to_stack_pointer(-16);th(t,wd),th(e,Mh),th(i,Ld),th(r,bd),th(n,Td),Hc.rawquerypipeline_intersectionWithShape(u,this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n.__wbg_ptr,a,qc(s)?4294967297:s>>>0,!qc(o),qc(o)?0:o,!qc(l),qc(l)?0:l,ih(c));var h=Jc().getInt32(u+0,!0),d=Jc().getFloat64(u+8,!0);return 0===h?void 0:d}finally{Hc.__wbindgen_add_to_stack_pointer(16),Vc[eh++]=void 0}}projectPoint(t,e,i,r,n,a,s,o,l){try{th(t,wd),th(e,Mh),th(i,Ld);const c=Hc.rawquerypipeline_projectPoint(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r,n,qc(a)?4294967297:a>>>0,!qc(s),qc(s)?0:s,!qc(o),qc(o)?0:o,ih(l));return 0===c?void 0:sd.__wrap(c)}finally{Vc[eh++]=void 0}}projectPointAndGetFeature(t,e,i,r,n,a,s,o){try{th(t,wd),th(e,Mh),th(i,Ld);const l=Hc.rawquerypipeline_projectPointAndGetFeature(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r,qc(n)?4294967297:n>>>0,!qc(a),qc(a)?0:a,!qc(s),qc(s)?0:s,ih(o));return 0===l?void 0:sd.__wrap(l)}finally{Vc[eh++]=void 0}}intersectionsWithPoint(t,e,i,r,n,a,s,o,l){try{th(t,wd),th(e,Mh),th(i,Ld),Hc.rawquerypipeline_intersectionsWithPoint(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,ih(r),n,qc(a)?4294967297:a>>>0,!qc(s),qc(s)?0:s,!qc(o),qc(o)?0:o,ih(l))}finally{Vc[eh++]=void 0,Vc[eh++]=void 0}}castShape(t,e,i,r,n,a,s,o,l,c,h,d,u,p){try{th(t,wd),th(e,Mh),th(i,Ld),th(r,bd),th(n,Ld),th(a,Td);const _=Hc.rawquerypipeline_castShape(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n.__wbg_ptr,a.__wbg_ptr,s,o,l,c,qc(h)?4294967297:h>>>0,!qc(d),qc(d)?0:d,!qc(u),qc(u)?0:u,ih(p));return 0===_?void 0:Th.__wrap(_)}finally{Vc[eh++]=void 0}}intersectionsWithShape(t,e,i,r,n,a,s,o,l,c,h){try{th(t,wd),th(e,Mh),th(i,Ld),th(r,bd),th(n,Td),Hc.rawquerypipeline_intersectionsWithShape(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n.__wbg_ptr,ih(a),s,qc(o)?4294967297:o>>>0,!qc(l),qc(l)?0:l,!qc(c),qc(c)?0:c,ih(h))}finally{Vc[eh++]=void 0,Vc[eh++]=void 0}}collidersWithAabbIntersectingAabb(t,e,i){try{th(t,Ld),th(e,Ld),Hc.rawquerypipeline_collidersWithAabbIntersectingAabb(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,ih(i))}finally{Vc[eh++]=void 0}}}const dd="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawraycolliderhit_free(t>>>0,1)));class ud{static __wrap(t){t>>>=0;const e=Object.create(ud.prototype);return e.__wbg_ptr=t,dd.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,dd.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawraycolliderhit_free(t,0)}colliderHandle(){return Hc.rawcharactercollision_handle(this.__wbg_ptr)}timeOfImpact(){return Hc.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr)}}const pd="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawraycolliderintersection_free(t>>>0,1)));class _d{static __wrap(t){t>>>=0;const e=Object.create(_d.prototype);return e.__wbg_ptr=t,pd.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,pd.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawraycolliderintersection_free(t,0)}colliderHandle(){return Hc.rawpointcolliderprojection_colliderHandle(this.__wbg_ptr)}normal(){const t=Hc.rawcollidershapecasthit_witness1(this.__wbg_ptr);return Ld.__wrap(t)}time_of_impact(){return Hc.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr)}featureType(){return Hc.rawpointcolliderprojection_featureType(this.__wbg_ptr)}featureId(){const t=Hc.rawpointcolliderprojection_featureId(this.__wbg_ptr);return 4294967297===t?void 0:t}}const md="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawrayintersection_free(t>>>0,1)));class fd{static __wrap(t){t>>>=0;const e=Object.create(fd.prototype);return e.__wbg_ptr=t,md.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,md.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawrayintersection_free(t,0)}normal(){const t=Hc.rawcollidershapecasthit_witness1(this.__wbg_ptr);return Ld.__wrap(t)}time_of_impact(){return Hc.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr)}featureType(){return Hc.rawpointcolliderprojection_featureType(this.__wbg_ptr)}featureId(){const t=Hc.rawpointcolliderprojection_featureId(this.__wbg_ptr);return 4294967297===t?void 0:t}}const gd="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawrigidbodyset_free(t>>>0,1)));class wd{static __wrap(t){t>>>=0;const e=Object.create(wd.prototype);return e.__wbg_ptr=t,gd.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,gd.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawrigidbodyset_free(t,0)}rbTranslation(t){const e=Hc.rawrigidbodyset_rbTranslation(this.__wbg_ptr,t);return Ld.__wrap(e)}rbRotation(t){const e=Hc.rawrigidbodyset_rbRotation(this.__wbg_ptr,t);return bd.__wrap(e)}rbSleep(t){Hc.rawrigidbodyset_rbSleep(this.__wbg_ptr,t)}rbIsSleeping(t){return 0!==Hc.rawrigidbodyset_rbIsSleeping(this.__wbg_ptr,t)}rbIsMoving(t){return 0!==Hc.rawrigidbodyset_rbIsMoving(this.__wbg_ptr,t)}rbNextTranslation(t){const e=Hc.rawrigidbodyset_rbNextTranslation(this.__wbg_ptr,t);return Ld.__wrap(e)}rbNextRotation(t){const e=Hc.rawrigidbodyset_rbNextRotation(this.__wbg_ptr,t);return bd.__wrap(e)}rbSetTranslation(t,e,i,r,n){Hc.rawrigidbodyset_rbSetTranslation(this.__wbg_ptr,t,e,i,r,n)}rbSetRotation(t,e,i,r,n,a){Hc.rawrigidbodyset_rbSetRotation(this.__wbg_ptr,t,e,i,r,n,a)}rbSetLinvel(t,e,i){th(e,Ld),Hc.rawrigidbodyset_rbSetLinvel(this.__wbg_ptr,t,e.__wbg_ptr,i)}rbSetAngvel(t,e,i){th(e,Ld),Hc.rawrigidbodyset_rbSetAngvel(this.__wbg_ptr,t,e.__wbg_ptr,i)}rbSetNextKinematicTranslation(t,e,i,r){Hc.rawrigidbodyset_rbSetNextKinematicTranslation(this.__wbg_ptr,t,e,i,r)}rbSetNextKinematicRotation(t,e,i,r,n){Hc.rawrigidbodyset_rbSetNextKinematicRotation(this.__wbg_ptr,t,e,i,r,n)}rbRecomputeMassPropertiesFromColliders(t,e){th(e,Mh),Hc.rawrigidbodyset_rbRecomputeMassPropertiesFromColliders(this.__wbg_ptr,t,e.__wbg_ptr)}rbSetAdditionalMass(t,e,i){Hc.rawrigidbodyset_rbSetAdditionalMass(this.__wbg_ptr,t,e,i)}rbSetAdditionalMassProperties(t,e,i,r,n,a){th(i,Ld),th(r,Ld),th(n,bd),Hc.rawrigidbodyset_rbSetAdditionalMassProperties(this.__wbg_ptr,t,e,i.__wbg_ptr,r.__wbg_ptr,n.__wbg_ptr,a)}rbLinvel(t){const e=Hc.rawrigidbodyset_rbLinvel(this.__wbg_ptr,t);return Ld.__wrap(e)}rbAngvel(t){const e=Hc.rawrigidbodyset_rbAngvel(this.__wbg_ptr,t);return Ld.__wrap(e)}rbVelocityAtPoint(t,e){th(e,Ld);const i=Hc.rawrigidbodyset_rbVelocityAtPoint(this.__wbg_ptr,t,e.__wbg_ptr);return Ld.__wrap(i)}rbLockTranslations(t,e,i){Hc.rawrigidbodyset_rbLockTranslations(this.__wbg_ptr,t,e,i)}rbSetEnabledTranslations(t,e,i,r,n){Hc.rawrigidbodyset_rbSetEnabledTranslations(this.__wbg_ptr,t,e,i,r,n)}rbLockRotations(t,e,i){Hc.rawrigidbodyset_rbLockRotations(this.__wbg_ptr,t,e,i)}rbSetEnabledRotations(t,e,i,r,n){Hc.rawrigidbodyset_rbSetEnabledRotations(this.__wbg_ptr,t,e,i,r,n)}rbDominanceGroup(t){return Hc.rawrigidbodyset_rbDominanceGroup(this.__wbg_ptr,t)}rbSetDominanceGroup(t,e){Hc.rawrigidbodyset_rbSetDominanceGroup(this.__wbg_ptr,t,e)}rbEnableCcd(t,e){Hc.rawrigidbodyset_rbEnableCcd(this.__wbg_ptr,t,e)}rbSetSoftCcdPrediction(t,e){Hc.rawrigidbodyset_rbSetSoftCcdPrediction(this.__wbg_ptr,t,e)}rbMass(t){return Hc.rawrigidbodyset_rbMass(this.__wbg_ptr,t)}rbInvMass(t){return Hc.rawrigidbodyset_rbInvMass(this.__wbg_ptr,t)}rbEffectiveInvMass(t){const e=Hc.rawrigidbodyset_rbEffectiveInvMass(this.__wbg_ptr,t);return Ld.__wrap(e)}rbLocalCom(t){const e=Hc.rawrigidbodyset_rbLocalCom(this.__wbg_ptr,t);return Ld.__wrap(e)}rbWorldCom(t){const e=Hc.rawrigidbodyset_rbWorldCom(this.__wbg_ptr,t);return Ld.__wrap(e)}rbInvPrincipalInertiaSqrt(t){const e=Hc.rawrigidbodyset_rbInvPrincipalInertiaSqrt(this.__wbg_ptr,t);return Ld.__wrap(e)}rbPrincipalInertiaLocalFrame(t){const e=Hc.rawrigidbodyset_rbPrincipalInertiaLocalFrame(this.__wbg_ptr,t);return bd.__wrap(e)}rbPrincipalInertia(t){const e=Hc.rawrigidbodyset_rbPrincipalInertia(this.__wbg_ptr,t);return Ld.__wrap(e)}rbEffectiveWorldInvInertiaSqrt(t){const e=Hc.rawrigidbodyset_rbEffectiveWorldInvInertiaSqrt(this.__wbg_ptr,t);return xd.__wrap(e)}rbEffectiveAngularInertia(t){const e=Hc.rawrigidbodyset_rbEffectiveAngularInertia(this.__wbg_ptr,t);return xd.__wrap(e)}rbWakeUp(t){Hc.rawrigidbodyset_rbWakeUp(this.__wbg_ptr,t)}rbIsCcdEnabled(t){return 0!==Hc.rawrigidbodyset_rbIsCcdEnabled(this.__wbg_ptr,t)}rbSoftCcdPrediction(t){return Hc.rawrigidbodyset_rbSoftCcdPrediction(this.__wbg_ptr,t)}rbNumColliders(t){return Hc.rawrigidbodyset_rbNumColliders(this.__wbg_ptr,t)>>>0}rbCollider(t,e){return Hc.rawrigidbodyset_rbCollider(this.__wbg_ptr,t,e)}rbBodyType(t){return Hc.rawrigidbodyset_rbBodyType(this.__wbg_ptr,t)}rbSetBodyType(t,e,i){Hc.rawrigidbodyset_rbSetBodyType(this.__wbg_ptr,t,e,i)}rbIsFixed(t){return 0!==Hc.rawrigidbodyset_rbIsFixed(this.__wbg_ptr,t)}rbIsKinematic(t){return 0!==Hc.rawrigidbodyset_rbIsKinematic(this.__wbg_ptr,t)}rbIsDynamic(t){return 0!==Hc.rawrigidbodyset_rbIsDynamic(this.__wbg_ptr,t)}rbLinearDamping(t){return Hc.rawrigidbodyset_rbLinearDamping(this.__wbg_ptr,t)}rbAngularDamping(t){return Hc.rawrigidbodyset_rbAngularDamping(this.__wbg_ptr,t)}rbSetLinearDamping(t,e){Hc.rawrigidbodyset_rbSetLinearDamping(this.__wbg_ptr,t,e)}rbSetAngularDamping(t,e){Hc.rawrigidbodyset_rbSetAngularDamping(this.__wbg_ptr,t,e)}rbSetEnabled(t,e){Hc.rawrigidbodyset_rbSetEnabled(this.__wbg_ptr,t,e)}rbIsEnabled(t){return 0!==Hc.rawrigidbodyset_rbIsEnabled(this.__wbg_ptr,t)}rbGravityScale(t){return Hc.rawrigidbodyset_rbGravityScale(this.__wbg_ptr,t)}rbSetGravityScale(t,e,i){Hc.rawrigidbodyset_rbSetGravityScale(this.__wbg_ptr,t,e,i)}rbResetForces(t,e){Hc.rawrigidbodyset_rbResetForces(this.__wbg_ptr,t,e)}rbResetTorques(t,e){Hc.rawrigidbodyset_rbResetTorques(this.__wbg_ptr,t,e)}rbAddForce(t,e,i){th(e,Ld),Hc.rawrigidbodyset_rbAddForce(this.__wbg_ptr,t,e.__wbg_ptr,i)}rbApplyImpulse(t,e,i){th(e,Ld),Hc.rawrigidbodyset_rbApplyImpulse(this.__wbg_ptr,t,e.__wbg_ptr,i)}rbAddTorque(t,e,i){th(e,Ld),Hc.rawrigidbodyset_rbAddTorque(this.__wbg_ptr,t,e.__wbg_ptr,i)}rbApplyTorqueImpulse(t,e,i){th(e,Ld),Hc.rawrigidbodyset_rbApplyTorqueImpulse(this.__wbg_ptr,t,e.__wbg_ptr,i)}rbAddForceAtPoint(t,e,i,r){th(e,Ld),th(i,Ld),Hc.rawrigidbodyset_rbAddForceAtPoint(this.__wbg_ptr,t,e.__wbg_ptr,i.__wbg_ptr,r)}rbApplyImpulseAtPoint(t,e,i,r){th(e,Ld),th(i,Ld),Hc.rawrigidbodyset_rbApplyImpulseAtPoint(this.__wbg_ptr,t,e.__wbg_ptr,i.__wbg_ptr,r)}rbAdditionalSolverIterations(t){return Hc.rawrigidbodyset_rbAdditionalSolverIterations(this.__wbg_ptr,t)>>>0}rbSetAdditionalSolverIterations(t,e){Hc.rawrigidbodyset_rbSetAdditionalSolverIterations(this.__wbg_ptr,t,e)}rbUserData(t){return Hc.rawrigidbodyset_rbUserData(this.__wbg_ptr,t)>>>0}rbSetUserData(t,e){Hc.rawrigidbodyset_rbSetUserData(this.__wbg_ptr,t,e)}rbUserForce(t){const e=Hc.rawrigidbodyset_rbUserForce(this.__wbg_ptr,t);return Ld.__wrap(e)}rbUserTorque(t){const e=Hc.rawrigidbodyset_rbUserTorque(this.__wbg_ptr,t);return Ld.__wrap(e)}constructor(){const t=Hc.rawrigidbodyset_new();return this.__wbg_ptr=t>>>0,gd.register(this,this.__wbg_ptr,this),this}createRigidBody(t,e,i,r,n,a,s,o,l,c,h,d,u,p,_,m,f,g,w,v,b,y,x,S,M,E){th(e,Ld),th(i,bd),th(s,Ld),th(o,Ld),th(l,Ld),th(c,Ld),th(h,bd);return Hc.rawrigidbodyset_createRigidBody(this.__wbg_ptr,t,e.__wbg_ptr,i.__wbg_ptr,r,n,a,s.__wbg_ptr,o.__wbg_ptr,l.__wbg_ptr,c.__wbg_ptr,h.__wbg_ptr,d,u,p,_,m,f,g,w,v,b,y,x,S,M,E)}remove(t,e,i,r,n){th(e,Yh),th(i,Mh),th(r,jh),th(n,$h),Hc.rawrigidbodyset_remove(this.__wbg_ptr,t,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n.__wbg_ptr)}len(){return Hc.rawcolliderset_len(this.__wbg_ptr)>>>0}contains(t){return 0!==Hc.rawrigidbodyset_contains(this.__wbg_ptr,t)}forEachRigidBodyHandle(t){try{Hc.rawrigidbodyset_forEachRigidBodyHandle(this.__wbg_ptr,ih(t))}finally{Vc[eh++]=void 0}}propagateModifiedBodyPositionsToColliders(t){th(t,Mh),Hc.rawrigidbodyset_propagateModifiedBodyPositionsToColliders(this.__wbg_ptr,t.__wbg_ptr)}}const vd="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawrotation_free(t>>>0,1)));class bd{static __wrap(t){t>>>=0;const e=Object.create(bd.prototype);return e.__wbg_ptr=t,vd.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,vd.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawrotation_free(t,0)}constructor(t,e,i,r){const n=Hc.rawrotation_new(t,e,i,r);return this.__wbg_ptr=n>>>0,vd.register(this,this.__wbg_ptr,this),this}static identity(){const t=Hc.rawrotation_identity();return bd.__wrap(t)}get x(){return Hc.rawrotation_x(this.__wbg_ptr)}get y(){return Hc.rawintegrationparameters_dt(this.__wbg_ptr)}get z(){return Hc.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr)}get w(){return Hc.rawrotation_w(this.__wbg_ptr)}}const yd="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawsdpmatrix3_free(t>>>0,1)));class xd{static __wrap(t){t>>>=0;const e=Object.create(xd.prototype);return e.__wbg_ptr=t,yd.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,yd.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawsdpmatrix3_free(t,0)}elements(){return Kc(Hc.rawsdpmatrix3_elements(this.__wbg_ptr))}}const Sd="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawserializationpipeline_free(t>>>0,1)));class Md{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Sd.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawserializationpipeline_free(t,0)}constructor(){const t=Hc.rawserializationpipeline_new();return this.__wbg_ptr=t>>>0,Sd.register(this,this.__wbg_ptr,this),this}serializeAll(t,e,i,r,n,a,s,o,l){th(t,Ld),th(e,Xh),th(i,Yh),th(r,wh),th(n,td),th(a,wd),th(s,Mh),th(o,jh),th(l,$h);return Kc(Hc.rawserializationpipeline_serializeAll(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n.__wbg_ptr,a.__wbg_ptr,s.__wbg_ptr,o.__wbg_ptr,l.__wbg_ptr))}deserializeAll(t){const e=Hc.rawserializationpipeline_deserializeAll(this.__wbg_ptr,Wc(t));return 0===e?void 0:Fh.__wrap(e)}}const Ed="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawshape_free(t>>>0,1)));class Td{static __wrap(t){t>>>=0;const e=Object.create(Td.prototype);return e.__wbg_ptr=t,Ed.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Ed.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawshape_free(t,0)}static cuboid(t,e,i){const r=Hc.rawshape_cuboid(t,e,i);return Td.__wrap(r)}static roundCuboid(t,e,i,r){const n=Hc.rawshape_roundCuboid(t,e,i,r);return Td.__wrap(n)}static ball(t){const e=Hc.rawshape_ball(t);return Td.__wrap(e)}static halfspace(t){th(t,Ld);const e=Hc.rawshape_halfspace(t.__wbg_ptr);return Td.__wrap(e)}static capsule(t,e){const i=Hc.rawshape_capsule(t,e);return Td.__wrap(i)}static cylinder(t,e){const i=Hc.rawshape_cylinder(t,e);return Td.__wrap(i)}static roundCylinder(t,e,i){const r=Hc.rawshape_roundCylinder(t,e,i);return Td.__wrap(r)}static cone(t,e){const i=Hc.rawshape_cone(t,e);return Td.__wrap(i)}static roundCone(t,e,i){const r=Hc.rawshape_roundCone(t,e,i);return Td.__wrap(r)}static voxels(t,e,i){th(e,Ld);const r=dh(i,Hc.__wbindgen_export_2),n=hh,a=Hc.rawshape_voxels(t,e.__wbg_ptr,r,n);return Td.__wrap(a)}static voxelsFromPoints(t,e,i){th(e,Ld);const r=uh(i,Hc.__wbindgen_export_2),n=hh,a=Hc.rawshape_voxelsFromPoints(t,e.__wbg_ptr,r,n);return Td.__wrap(a)}static polyline(t,e){const i=uh(t,Hc.__wbindgen_export_2),r=hh,n=dh(e,Hc.__wbindgen_export_2),a=hh,s=Hc.rawshape_polyline(i,r,n,a);return Td.__wrap(s)}static trimesh(t,e,i){const r=uh(t,Hc.__wbindgen_export_2),n=hh,a=dh(e,Hc.__wbindgen_export_2),s=hh,o=Hc.rawshape_trimesh(r,n,a,s,i);return 0===o?void 0:Td.__wrap(o)}static heightfield(t,e,i,r,n){const a=uh(i,Hc.__wbindgen_export_2),s=hh;th(r,Ld);const o=Hc.rawshape_heightfield(t,e,a,s,r.__wbg_ptr,n);return Td.__wrap(o)}static segment(t,e){th(t,Ld),th(e,Ld);const i=Hc.rawshape_segment(t.__wbg_ptr,e.__wbg_ptr);return Td.__wrap(i)}static triangle(t,e,i){th(t,Ld),th(e,Ld),th(i,Ld);const r=Hc.rawshape_triangle(t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr);return Td.__wrap(r)}static roundTriangle(t,e,i,r){th(t,Ld),th(e,Ld),th(i,Ld);const n=Hc.rawshape_roundTriangle(t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r);return Td.__wrap(n)}static convexHull(t){const e=uh(t,Hc.__wbindgen_export_2),i=hh,r=Hc.rawshape_convexHull(e,i);return 0===r?void 0:Td.__wrap(r)}static roundConvexHull(t,e){const i=uh(t,Hc.__wbindgen_export_2),r=hh,n=Hc.rawshape_roundConvexHull(i,r,e);return 0===n?void 0:Td.__wrap(n)}static convexMesh(t,e){const i=uh(t,Hc.__wbindgen_export_2),r=hh,n=dh(e,Hc.__wbindgen_export_2),a=hh,s=Hc.rawshape_convexMesh(i,r,n,a);return 0===s?void 0:Td.__wrap(s)}static roundConvexMesh(t,e,i){const r=uh(t,Hc.__wbindgen_export_2),n=hh,a=dh(e,Hc.__wbindgen_export_2),s=hh,o=Hc.rawshape_roundConvexMesh(r,n,a,s,i);return 0===o?void 0:Td.__wrap(o)}castShape(t,e,i,r,n,a,s,o,l,c){th(t,Ld),th(e,bd),th(i,Ld),th(r,Td),th(n,Ld),th(a,bd),th(s,Ld);const h=Hc.rawshape_castShape(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n.__wbg_ptr,a.__wbg_ptr,s.__wbg_ptr,o,l,c);return 0===h?void 0:Rd.__wrap(h)}intersectsShape(t,e,i,r,n){th(t,Ld),th(e,bd),th(i,Td),th(r,Ld),th(n,bd);return 0!==Hc.rawshape_intersectsShape(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n.__wbg_ptr)}contactShape(t,e,i,r,n,a){th(t,Ld),th(e,bd),th(i,Td),th(r,Ld),th(n,bd);const s=Hc.rawshape_contactShape(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n.__wbg_ptr,a);return 0===s?void 0:Pd.__wrap(s)}containsPoint(t,e,i){th(t,Ld),th(e,bd),th(i,Ld);return 0!==Hc.rawshape_containsPoint(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr)}projectPoint(t,e,i,r){th(t,Ld),th(e,bd),th(i,Ld);const n=Hc.rawshape_projectPoint(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r);return ld.__wrap(n)}intersectsRay(t,e,i,r,n){th(t,Ld),th(e,bd),th(i,Ld),th(r,Ld);return 0!==Hc.rawshape_intersectsRay(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n)}castRay(t,e,i,r,n,a){th(t,Ld),th(e,bd),th(i,Ld),th(r,Ld);return Hc.rawshape_castRay(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n,a)}castRayAndGetNormal(t,e,i,r,n,a){th(t,Ld),th(e,bd),th(i,Ld),th(r,Ld);const s=Hc.rawshape_castRayAndGetNormal(this.__wbg_ptr,t.__wbg_ptr,e.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,n,a);return 0===s?void 0:fd.__wrap(s)}}const Ad="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawshapecasthit_free(t>>>0,1)));class Rd{static __wrap(t){t>>>=0;const e=Object.create(Rd.prototype);return e.__wbg_ptr=t,Ad.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Ad.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawshapecasthit_free(t,0)}time_of_impact(){return Hc.rawrotation_x(this.__wbg_ptr)}witness1(){const t=Hc.rawshapecasthit_witness1(this.__wbg_ptr);return Ld.__wrap(t)}witness2(){const t=Hc.rawcontactforceevent_total_force(this.__wbg_ptr);return Ld.__wrap(t)}normal1(){const t=Hc.rawshapecasthit_normal1(this.__wbg_ptr);return Ld.__wrap(t)}normal2(){const t=Hc.rawshapecasthit_normal2(this.__wbg_ptr);return Ld.__wrap(t)}}const Cd="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawshapecontact_free(t>>>0,1)));class Pd{static __wrap(t){t>>>=0;const e=Object.create(Pd.prototype);return e.__wbg_ptr=t,Cd.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Cd.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawshapecontact_free(t,0)}distance(){return Hc.rawkinematiccharactercontroller_maxSlopeClimbAngle(this.__wbg_ptr)}point1(){const t=Hc.rawpointprojection_point(this.__wbg_ptr);return Ld.__wrap(t)}point2(){const t=Hc.rawcollidershapecasthit_witness1(this.__wbg_ptr);return Ld.__wrap(t)}normal1(){const t=Hc.rawcollidershapecasthit_witness2(this.__wbg_ptr);return Ld.__wrap(t)}normal2(){const t=Hc.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);return Ld.__wrap(t)}}const Id="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((t=>Hc.__wbg_rawvector_free(t>>>0,1)));class Ld{static __wrap(t){t>>>=0;const e=Object.create(Ld.prototype);return e.__wbg_ptr=t,Id.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Id.unregister(this),t}free(){const t=this.__destroy_into_raw();Hc.__wbg_rawvector_free(t,0)}static zero(){const t=Hc.rawvector_zero();return Ld.__wrap(t)}constructor(t,e,i){const r=Hc.rawvector_new(t,e,i);return this.__wbg_ptr=r>>>0,Id.register(this,this.__wbg_ptr,this),this}get x(){return Hc.rawrotation_x(this.__wbg_ptr)}set x(t){Hc.rawvector_set_x(this.__wbg_ptr,t)}get y(){return Hc.rawintegrationparameters_dt(this.__wbg_ptr)}set y(t){Hc.rawintegrationparameters_set_dt(this.__wbg_ptr,t)}get z(){return Hc.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr)}set z(t){Hc.rawvector_set_z(this.__wbg_ptr,t)}xyz(){const t=Hc.rawvector_xyz(this.__wbg_ptr);return Ld.__wrap(t)}yxz(){const t=Hc.rawvector_yxz(this.__wbg_ptr);return Ld.__wrap(t)}zxy(){const t=Hc.rawvector_zxy(this.__wbg_ptr);return Ld.__wrap(t)}xzy(){const t=Hc.rawvector_xzy(this.__wbg_ptr);return Ld.__wrap(t)}yzx(){const t=Hc.rawvector_yzx(this.__wbg_ptr);return Ld.__wrap(t)}zyx(){const t=Hc.rawvector_zyx(this.__wbg_ptr);return Ld.__wrap(t)}}URL=globalThis.URL;const Dd=await(async(t={},e)=>{let i;if(e.startsWith("data:")){const r=e.replace(/^data:.*?base64,/,"");let n;if("function"==typeof Buffer&&"function"==typeof Buffer.from)n=Buffer.from(r,"base64");else{if("function"!=typeof atob)throw new Error("Cannot decode base64-encoded data URL");{const t=atob(r);n=new Uint8Array(t.length);for(let e=0;e<t.length;e++)n[e]=t.charCodeAt(e)}}i=await WebAssembly.instantiate(n,t)}else{const r=await fetch(e),n=r.headers.get("Content-Type")||"";if("instantiateStreaming"in WebAssembly&&n.startsWith("application/wasm"))i=await WebAssembly.instantiateStreaming(r,t);else{const e=await r.arrayBuffer();i=await WebAssembly.instantiate(e,t)}}return i.instance.exports})({"./rapier_wasm3d_bg.js":{__wbindgen_number_new:function(t){return Wc(t)},__wbindgen_boolean_get:function(t){const e=Gc(t);return"boolean"==typeof e?e?1:0:2},__wbindgen_object_drop_ref:function(t){Kc(t)},__wbindgen_number_get:function(t,e){const i=Gc(e),r="number"==typeof i?i:void 0;Jc().setFloat64(t+8,qc(r)?0:r,!0),Jc().setInt32(t+0,!qc(r),!0)},__wbindgen_is_function:function(t){return"function"==typeof Gc(t)},__wbg_rawraycolliderintersection_new:function(t){return Wc(_d.__wrap(t))},__wbg_rawcontactforceevent_new:function(t){return Wc(Rh.__wrap(t))},__wbg_call_7cccdd69e0791ae2:function(){return Xc((function(t,e,i){return Wc(Gc(t).call(Gc(e),Gc(i)))}),arguments)},__wbg_call_833bed5770ea2041:function(){return Xc((function(t,e,i,r){return Wc(Gc(t).call(Gc(e),Gc(i),Gc(r)))}),arguments)},__wbg_call_b8adc8b1d0a0d8eb:function(){return Xc((function(t,e,i,r,n){return Wc(Gc(t).call(Gc(e),Gc(i),Gc(r),Gc(n)))}),arguments)},__wbg_bind_c8359b1cba058168:function(t,e,i,r){return Wc(Gc(t).bind(Gc(e),Gc(i),Gc(r)))},__wbg_buffer_609cc3eee51ed158:function(t){return Wc(Gc(t).buffer)},__wbg_newwithbyteoffsetandlength_d97e637ebe145a9a:function(t,e,i){return Wc(new Uint8Array(Gc(t),e>>>0,i>>>0))},__wbg_new_a12002a7f91c75be:function(t){return Wc(new Uint8Array(Gc(t)))},__wbg_set_65595bdd868b3009:function(t,e,i){Gc(t).set(Gc(e),i>>>0)},__wbg_length_a446193dc22c12f8:function(t){return Gc(t).length},__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354:function(t,e,i){return Wc(new Float32Array(Gc(t),e>>>0,i>>>0))},__wbg_set_10bad9bee0e9c58b:function(t,e,i){Gc(t).set(Gc(e),i>>>0)},__wbg_length_3b4f022188ae8db6:function(t){return Gc(t).length},__wbg_newwithlength_5a5efe313cfd59f1:function(t){return Wc(new Float32Array(t>>>0))},__wbindgen_throw:function(t,e){throw new Error(Qc(t,e))},__wbindgen_memory:function(){return Wc(Hc.memory)}}},"/assets/rapier_wasm3d_bg.wasm"),Ud=Dd.memory,Nd=Dd.version,Fd=Dd.__wbg_rawkinematiccharactercontroller_free,Od=Dd.rawkinematiccharactercontroller_new,zd=Dd.rawkinematiccharactercontroller_setUp,Bd=Dd.rawkinematiccharactercontroller_normalNudgeFactor,kd=Dd.rawkinematiccharactercontroller_setNormalNudgeFactor,Hd=Dd.rawkinematiccharactercontroller_setOffset,Vd=Dd.rawkinematiccharactercontroller_slideEnabled,Gd=Dd.rawkinematiccharactercontroller_setSlideEnabled,jd=Dd.rawkinematiccharactercontroller_autostepMaxHeight,Wd=Dd.rawkinematiccharactercontroller_autostepMinWidth,Xd=Dd.rawkinematiccharactercontroller_autostepIncludesDynamicBodies,qd=Dd.rawkinematiccharactercontroller_autostepEnabled,Yd=Dd.rawkinematiccharactercontroller_enableAutostep,Jd=Dd.rawkinematiccharactercontroller_disableAutostep,Kd=Dd.rawkinematiccharactercontroller_maxSlopeClimbAngle,Zd=Dd.rawkinematiccharactercontroller_setMaxSlopeClimbAngle,$d=Dd.rawkinematiccharactercontroller_minSlopeSlideAngle,Qd=Dd.rawkinematiccharactercontroller_setMinSlopeSlideAngle,tu=Dd.rawkinematiccharactercontroller_snapToGroundDistance,eu=Dd.rawkinematiccharactercontroller_enableSnapToGround,iu=Dd.rawkinematiccharactercontroller_disableSnapToGround,ru=Dd.rawkinematiccharactercontroller_snapToGroundEnabled,nu=Dd.rawkinematiccharactercontroller_computeColliderMovement,au=Dd.rawkinematiccharactercontroller_computedMovement,su=Dd.rawkinematiccharactercontroller_computedGrounded,ou=Dd.rawkinematiccharactercontroller_numComputedCollisions,lu=Dd.rawkinematiccharactercontroller_computedCollision,cu=Dd.__wbg_rawcharactercollision_free,hu=Dd.rawcharactercollision_new,du=Dd.rawcharactercollision_handle,uu=Dd.rawcharactercollision_translationDeltaApplied,pu=Dd.rawcharactercollision_translationDeltaRemaining,_u=Dd.rawcharactercollision_toi,mu=Dd.rawcharactercollision_worldWitness1,fu=Dd.rawcharactercollision_worldWitness2,gu=Dd.rawcharactercollision_worldNormal1,wu=Dd.rawcharactercollision_worldNormal2,vu=Dd.__wbg_rawpidcontroller_free,bu=Dd.rawpidcontroller_new,yu=Dd.rawpidcontroller_set_kp,xu=Dd.rawpidcontroller_set_ki,Su=Dd.rawpidcontroller_set_kd,Mu=Dd.rawpidcontroller_set_axes_mask,Eu=Dd.rawpidcontroller_reset_integrals,Tu=Dd.rawpidcontroller_apply_linear_correction,Au=Dd.rawpidcontroller_apply_angular_correction,Ru=Dd.rawpidcontroller_linear_correction,Cu=Dd.rawpidcontroller_angular_correction,Pu=Dd.__wbg_rawdynamicraycastvehiclecontroller_free,Iu=Dd.rawdynamicraycastvehiclecontroller_new,Lu=Dd.rawdynamicraycastvehiclecontroller_current_vehicle_speed,Du=Dd.rawdynamicraycastvehiclecontroller_chassis,Uu=Dd.rawdynamicraycastvehiclecontroller_index_up_axis,Nu=Dd.rawdynamicraycastvehiclecontroller_set_index_up_axis,Fu=Dd.rawdynamicraycastvehiclecontroller_index_forward_axis,Ou=Dd.rawdynamicraycastvehiclecontroller_set_index_forward_axis,zu=Dd.rawdynamicraycastvehiclecontroller_add_wheel,Bu=Dd.rawdynamicraycastvehiclecontroller_num_wheels,ku=Dd.rawdynamicraycastvehiclecontroller_update_vehicle,Hu=Dd.rawdynamicraycastvehiclecontroller_wheel_chassis_connection_point_cs,Vu=Dd.rawdynamicraycastvehiclecontroller_set_wheel_chassis_connection_point_cs,Gu=Dd.rawdynamicraycastvehiclecontroller_wheel_suspension_rest_length,ju=Dd.rawdynamicraycastvehiclecontroller_set_wheel_suspension_rest_length,Wu=Dd.rawdynamicraycastvehiclecontroller_wheel_max_suspension_travel,Xu=Dd.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_travel,qu=Dd.rawdynamicraycastvehiclecontroller_wheel_radius,Yu=Dd.rawdynamicraycastvehiclecontroller_set_wheel_radius,Ju=Dd.rawdynamicraycastvehiclecontroller_wheel_suspension_stiffness,Ku=Dd.rawdynamicraycastvehiclecontroller_set_wheel_suspension_stiffness,Zu=Dd.rawdynamicraycastvehiclecontroller_wheel_suspension_compression,$u=Dd.rawdynamicraycastvehiclecontroller_set_wheel_suspension_compression,Qu=Dd.rawdynamicraycastvehiclecontroller_wheel_suspension_relaxation,tp=Dd.rawdynamicraycastvehiclecontroller_set_wheel_suspension_relaxation,ep=Dd.rawdynamicraycastvehiclecontroller_wheel_max_suspension_force,ip=Dd.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_force,rp=Dd.rawdynamicraycastvehiclecontroller_wheel_brake,np=Dd.rawdynamicraycastvehiclecontroller_set_wheel_brake,ap=Dd.rawdynamicraycastvehiclecontroller_wheel_steering,sp=Dd.rawdynamicraycastvehiclecontroller_set_wheel_steering,op=Dd.rawdynamicraycastvehiclecontroller_wheel_engine_force,lp=Dd.rawdynamicraycastvehiclecontroller_set_wheel_engine_force,cp=Dd.rawdynamicraycastvehiclecontroller_wheel_direction_cs,hp=Dd.rawdynamicraycastvehiclecontroller_set_wheel_direction_cs,dp=Dd.rawdynamicraycastvehiclecontroller_wheel_axle_cs,up=Dd.rawdynamicraycastvehiclecontroller_set_wheel_axle_cs,pp=Dd.rawdynamicraycastvehiclecontroller_wheel_friction_slip,_p=Dd.rawdynamicraycastvehiclecontroller_set_wheel_friction_slip,mp=Dd.rawdynamicraycastvehiclecontroller_wheel_side_friction_stiffness,fp=Dd.rawdynamicraycastvehiclecontroller_set_wheel_side_friction_stiffness,gp=Dd.rawdynamicraycastvehiclecontroller_wheel_rotation,wp=Dd.rawdynamicraycastvehiclecontroller_wheel_forward_impulse,vp=Dd.rawdynamicraycastvehiclecontroller_wheel_side_impulse,bp=Dd.rawdynamicraycastvehiclecontroller_wheel_suspension_force,yp=Dd.rawdynamicraycastvehiclecontroller_wheel_contact_normal_ws,xp=Dd.rawdynamicraycastvehiclecontroller_wheel_contact_point_ws,Sp=Dd.rawdynamicraycastvehiclecontroller_wheel_suspension_length,Mp=Dd.rawdynamicraycastvehiclecontroller_wheel_hard_point_ws,Ep=Dd.rawdynamicraycastvehiclecontroller_wheel_is_in_contact,Tp=Dd.rawdynamicraycastvehiclecontroller_wheel_ground_object,Ap=Dd.__wbg_rawccdsolver_free,Rp=Dd.rawccdsolver_new,Cp=Dd.rawimpulsejointset_jointType,Pp=Dd.rawimpulsejointset_jointBodyHandle1,Ip=Dd.rawimpulsejointset_jointBodyHandle2,Lp=Dd.rawimpulsejointset_jointFrameX1,Dp=Dd.rawimpulsejointset_jointFrameX2,Up=Dd.rawimpulsejointset_jointAnchor1,Np=Dd.rawimpulsejointset_jointAnchor2,Fp=Dd.rawimpulsejointset_jointSetAnchor1,Op=Dd.rawimpulsejointset_jointSetAnchor2,zp=Dd.rawimpulsejointset_jointContactsEnabled,Bp=Dd.rawimpulsejointset_jointSetContactsEnabled,kp=Dd.rawimpulsejointset_jointLimitsEnabled,Hp=Dd.rawimpulsejointset_jointLimitsMin,Vp=Dd.rawimpulsejointset_jointLimitsMax,Gp=Dd.rawimpulsejointset_jointSetLimits,jp=Dd.rawimpulsejointset_jointConfigureMotorModel,Wp=Dd.rawimpulsejointset_jointConfigureMotorVelocity,Xp=Dd.rawimpulsejointset_jointConfigureMotorPosition,qp=Dd.rawimpulsejointset_jointConfigureMotor,Yp=Dd.__wbg_rawimpulsejointset_free,Jp=Dd.rawimpulsejointset_new,Kp=Dd.rawimpulsejointset_createJoint,Zp=Dd.rawimpulsejointset_remove,$p=Dd.rawimpulsejointset_len,Qp=Dd.rawimpulsejointset_contains,t_=Dd.rawimpulsejointset_forEachJointHandle,e_=Dd.rawimpulsejointset_forEachJointAttachedToRigidBody,i_=Dd.__wbg_rawintegrationparameters_free,r_=Dd.rawintegrationparameters_new,n_=Dd.rawintegrationparameters_dt,a_=Dd.rawintegrationparameters_contact_erp,s_=Dd.rawintegrationparameters_numSolverIterations,o_=Dd.rawintegrationparameters_minIslandSize,l_=Dd.rawintegrationparameters_maxCcdSubsteps,c_=Dd.rawintegrationparameters_lengthUnit,h_=Dd.rawintegrationparameters_set_dt,d_=Dd.rawintegrationparameters_set_contact_natural_frequency,u_=Dd.rawintegrationparameters_set_normalizedAllowedLinearError,p_=Dd.rawintegrationparameters_set_normalizedPredictionDistance,__=Dd.rawintegrationparameters_set_numSolverIterations,m_=Dd.rawintegrationparameters_set_minIslandSize,f_=Dd.rawintegrationparameters_set_maxCcdSubsteps,g_=Dd.rawintegrationparameters_set_lengthUnit,w_=Dd.rawintegrationparameters_switchToStandardPgsSolver,v_=Dd.rawintegrationparameters_switchToSmallStepsPgsSolver,b_=Dd.rawintegrationparameters_switchToSmallStepsPgsSolverWithoutWarmstart,y_=Dd.__wbg_rawislandmanager_free,x_=Dd.rawislandmanager_new,S_=Dd.rawislandmanager_forEachActiveRigidBodyHandle,M_=Dd.__wbg_rawgenericjoint_free,E_=Dd.rawgenericjoint_generic,T_=Dd.rawgenericjoint_spring,A_=Dd.rawgenericjoint_rope,R_=Dd.rawgenericjoint_spherical,C_=Dd.rawgenericjoint_prismatic,P_=Dd.rawgenericjoint_fixed,I_=Dd.rawgenericjoint_revolute,L_=Dd.rawmultibodyjointset_jointType,D_=Dd.rawmultibodyjointset_jointFrameX1,U_=Dd.rawmultibodyjointset_jointFrameX2,N_=Dd.rawmultibodyjointset_jointAnchor1,F_=Dd.rawmultibodyjointset_jointAnchor2,O_=Dd.rawmultibodyjointset_jointContactsEnabled,z_=Dd.rawmultibodyjointset_jointSetContactsEnabled,B_=Dd.rawmultibodyjointset_jointLimitsEnabled,k_=Dd.rawmultibodyjointset_jointLimitsMin,H_=Dd.rawmultibodyjointset_jointLimitsMax,V_=Dd.__wbg_rawmultibodyjointset_free,G_=Dd.rawmultibodyjointset_new,j_=Dd.rawmultibodyjointset_createJoint,W_=Dd.rawmultibodyjointset_remove,X_=Dd.rawmultibodyjointset_contains,q_=Dd.rawmultibodyjointset_forEachJointHandle,Y_=Dd.rawmultibodyjointset_forEachJointAttachedToRigidBody,J_=Dd.rawrigidbodyset_rbTranslation,K_=Dd.rawrigidbodyset_rbRotation,Z_=Dd.rawrigidbodyset_rbSleep,$_=Dd.rawrigidbodyset_rbIsSleeping,Q_=Dd.rawrigidbodyset_rbIsMoving,tm=Dd.rawrigidbodyset_rbNextTranslation,em=Dd.rawrigidbodyset_rbNextRotation,im=Dd.rawrigidbodyset_rbSetTranslation,rm=Dd.rawrigidbodyset_rbSetRotation,nm=Dd.rawrigidbodyset_rbSetLinvel,am=Dd.rawrigidbodyset_rbSetAngvel,sm=Dd.rawrigidbodyset_rbSetNextKinematicTranslation,om=Dd.rawrigidbodyset_rbSetNextKinematicRotation,lm=Dd.rawrigidbodyset_rbRecomputeMassPropertiesFromColliders,cm=Dd.rawrigidbodyset_rbSetAdditionalMass,hm=Dd.rawrigidbodyset_rbSetAdditionalMassProperties,dm=Dd.rawrigidbodyset_rbLinvel,um=Dd.rawrigidbodyset_rbAngvel,pm=Dd.rawrigidbodyset_rbVelocityAtPoint,_m=Dd.rawrigidbodyset_rbLockTranslations,mm=Dd.rawrigidbodyset_rbSetEnabledTranslations,fm=Dd.rawrigidbodyset_rbLockRotations,gm=Dd.rawrigidbodyset_rbSetEnabledRotations,wm=Dd.rawrigidbodyset_rbDominanceGroup,vm=Dd.rawrigidbodyset_rbSetDominanceGroup,bm=Dd.rawrigidbodyset_rbEnableCcd,ym=Dd.rawrigidbodyset_rbSetSoftCcdPrediction,xm=Dd.rawrigidbodyset_rbMass,Sm=Dd.rawrigidbodyset_rbInvMass,Mm=Dd.rawrigidbodyset_rbEffectiveInvMass,Em=Dd.rawrigidbodyset_rbLocalCom,Tm=Dd.rawrigidbodyset_rbWorldCom,Am=Dd.rawrigidbodyset_rbInvPrincipalInertiaSqrt,Rm=Dd.rawrigidbodyset_rbPrincipalInertiaLocalFrame,Cm=Dd.rawrigidbodyset_rbPrincipalInertia,Pm=Dd.rawrigidbodyset_rbEffectiveWorldInvInertiaSqrt,Im=Dd.rawrigidbodyset_rbEffectiveAngularInertia,Lm=Dd.rawrigidbodyset_rbWakeUp,Dm=Dd.rawrigidbodyset_rbIsCcdEnabled,Um=Dd.rawrigidbodyset_rbSoftCcdPrediction,Nm=Dd.rawrigidbodyset_rbNumColliders,Fm=Dd.rawrigidbodyset_rbCollider,Om=Dd.rawrigidbodyset_rbBodyType,zm=Dd.rawrigidbodyset_rbSetBodyType,Bm=Dd.rawrigidbodyset_rbIsFixed,km=Dd.rawrigidbodyset_rbIsKinematic,Hm=Dd.rawrigidbodyset_rbIsDynamic,Vm=Dd.rawrigidbodyset_rbLinearDamping,Gm=Dd.rawrigidbodyset_rbAngularDamping,jm=Dd.rawrigidbodyset_rbSetLinearDamping,Wm=Dd.rawrigidbodyset_rbSetAngularDamping,Xm=Dd.rawrigidbodyset_rbSetEnabled,qm=Dd.rawrigidbodyset_rbIsEnabled,Ym=Dd.rawrigidbodyset_rbGravityScale,Jm=Dd.rawrigidbodyset_rbSetGravityScale,Km=Dd.rawrigidbodyset_rbResetForces,Zm=Dd.rawrigidbodyset_rbResetTorques,$m=Dd.rawrigidbodyset_rbAddForce,Qm=Dd.rawrigidbodyset_rbApplyImpulse,tf=Dd.rawrigidbodyset_rbAddTorque,ef=Dd.rawrigidbodyset_rbApplyTorqueImpulse,rf=Dd.rawrigidbodyset_rbAddForceAtPoint,nf=Dd.rawrigidbodyset_rbApplyImpulseAtPoint,af=Dd.rawrigidbodyset_rbAdditionalSolverIterations,sf=Dd.rawrigidbodyset_rbSetAdditionalSolverIterations,of=Dd.rawrigidbodyset_rbUserData,lf=Dd.rawrigidbodyset_rbSetUserData,cf=Dd.rawrigidbodyset_rbUserForce,hf=Dd.rawrigidbodyset_rbUserTorque,df=Dd.__wbg_rawrigidbodyset_free,uf=Dd.rawrigidbodyset_new,pf=Dd.rawrigidbodyset_createRigidBody,_f=Dd.rawrigidbodyset_remove,mf=Dd.rawrigidbodyset_contains,ff=Dd.rawrigidbodyset_forEachRigidBodyHandle,gf=Dd.rawrigidbodyset_propagateModifiedBodyPositionsToColliders,wf=Dd.__wbg_rawbroadphase_free,vf=Dd.rawbroadphase_new,bf=Dd.rawcolliderset_coTranslation,yf=Dd.rawcolliderset_coRotation,xf=Dd.rawcolliderset_coSetTranslation,Sf=Dd.rawcolliderset_coSetTranslationWrtParent,Mf=Dd.rawcolliderset_coSetRotation,Ef=Dd.rawcolliderset_coSetRotationWrtParent,Tf=Dd.rawcolliderset_coIsSensor,Af=Dd.rawcolliderset_coShapeType,Rf=Dd.rawcolliderset_coHalfspaceNormal,Cf=Dd.rawcolliderset_coHalfExtents,Pf=Dd.rawcolliderset_coSetHalfExtents,If=Dd.rawcolliderset_coRadius,Lf=Dd.rawcolliderset_coSetRadius,Df=Dd.rawcolliderset_coHalfHeight,Uf=Dd.rawcolliderset_coSetHalfHeight,Nf=Dd.rawcolliderset_coRoundRadius,Ff=Dd.rawcolliderset_coSetRoundRadius,Of=Dd.rawcolliderset_coVoxelData,zf=Dd.rawcolliderset_coVoxelPrimitiveGeometry,Bf=Dd.rawcolliderset_coVoxelSize,kf=Dd.rawcolliderset_coSetVoxel,Hf=Dd.rawcolliderset_coVertices,Vf=Dd.rawcolliderset_coIndices,Gf=Dd.rawcolliderset_coTriMeshFlags,jf=Dd.rawcolliderset_coHeightFieldFlags,Wf=Dd.rawcolliderset_coHeightfieldHeights,Xf=Dd.rawcolliderset_coHeightfieldScale,qf=Dd.rawcolliderset_coHeightfieldNRows,Yf=Dd.rawcolliderset_coHeightfieldNCols,Jf=Dd.rawcolliderset_coParent,Kf=Dd.rawcolliderset_coSetEnabled,Zf=Dd.rawcolliderset_coIsEnabled,$f=Dd.rawcolliderset_coSetContactSkin,Qf=Dd.rawcolliderset_coContactSkin,tg=Dd.rawcolliderset_coFriction,eg=Dd.rawcolliderset_coRestitution,ig=Dd.rawcolliderset_coDensity,rg=Dd.rawcolliderset_coMass,ng=Dd.rawcolliderset_coVolume,ag=Dd.rawcolliderset_coCollisionGroups,sg=Dd.rawcolliderset_coSolverGroups,og=Dd.rawcolliderset_coActiveHooks,lg=Dd.rawcolliderset_coActiveCollisionTypes,cg=Dd.rawcolliderset_coActiveEvents,hg=Dd.rawcolliderset_coContactForceEventThreshold,dg=Dd.rawcolliderset_coContainsPoint,ug=Dd.rawcolliderset_coCastShape,pg=Dd.rawcolliderset_coCastCollider,_g=Dd.rawcolliderset_coIntersectsShape,mg=Dd.rawcolliderset_coContactShape,fg=Dd.rawcolliderset_coContactCollider,gg=Dd.rawcolliderset_coProjectPoint,wg=Dd.rawcolliderset_coIntersectsRay,vg=Dd.rawcolliderset_coCastRay,bg=Dd.rawcolliderset_coCastRayAndGetNormal,yg=Dd.rawcolliderset_coSetSensor,xg=Dd.rawcolliderset_coSetRestitution,Sg=Dd.rawcolliderset_coSetFriction,Mg=Dd.rawcolliderset_coFrictionCombineRule,Eg=Dd.rawcolliderset_coSetFrictionCombineRule,Tg=Dd.rawcolliderset_coRestitutionCombineRule,Ag=Dd.rawcolliderset_coSetRestitutionCombineRule,Rg=Dd.rawcolliderset_coSetCollisionGroups,Cg=Dd.rawcolliderset_coSetSolverGroups,Pg=Dd.rawcolliderset_coSetActiveHooks,Ig=Dd.rawcolliderset_coSetActiveEvents,Lg=Dd.rawcolliderset_coSetActiveCollisionTypes,Dg=Dd.rawcolliderset_coSetShape,Ug=Dd.rawcolliderset_coSetContactForceEventThreshold,Ng=Dd.rawcolliderset_coSetDensity,Fg=Dd.rawcolliderset_coSetMass,Og=Dd.rawcolliderset_coSetMassProperties,zg=Dd.__wbg_rawcolliderset_free,Bg=Dd.rawcolliderset_new,kg=Dd.rawcolliderset_len,Hg=Dd.rawcolliderset_contains,Vg=Dd.rawcolliderset_createCollider,Gg=Dd.rawcolliderset_remove,jg=Dd.rawcolliderset_forEachColliderHandle,Wg=Dd.__wbg_rawshapecontact_free,Xg=Dd.__wbg_rawnarrowphase_free,qg=Dd.rawnarrowphase_new,Yg=Dd.rawnarrowphase_contact_pairs_with,Jg=Dd.rawnarrowphase_contact_pair,Kg=Dd.rawnarrowphase_intersection_pairs_with,Zg=Dd.rawnarrowphase_intersection_pair,$g=Dd.__wbg_rawcontactmanifold_free,Qg=Dd.rawcontactpair_collider1,tw=Dd.rawcontactpair_collider2,ew=Dd.rawcontactpair_numContactManifolds,iw=Dd.rawcontactpair_contactManifold,rw=Dd.rawcontactmanifold_normal,nw=Dd.rawcontactmanifold_local_n1,aw=Dd.rawcontactmanifold_local_n2,sw=Dd.rawcontactmanifold_subshape1,ow=Dd.rawcontactmanifold_subshape2,lw=Dd.rawcontactmanifold_num_contacts,cw=Dd.rawcontactmanifold_contact_local_p1,hw=Dd.rawcontactmanifold_contact_local_p2,dw=Dd.rawcontactmanifold_contact_dist,uw=Dd.rawcontactmanifold_contact_fid1,pw=Dd.rawcontactmanifold_contact_fid2,_w=Dd.rawcontactmanifold_contact_impulse,mw=Dd.rawcontactmanifold_contact_tangent_impulse_x,fw=Dd.rawcontactmanifold_contact_tangent_impulse_y,gw=Dd.rawcontactmanifold_num_solver_contacts,ww=Dd.rawcontactmanifold_solver_contact_point,vw=Dd.rawcontactmanifold_solver_contact_dist,bw=Dd.rawcontactmanifold_solver_contact_friction,yw=Dd.rawcontactmanifold_solver_contact_restitution,xw=Dd.rawcontactmanifold_solver_contact_tangent_velocity,Sw=Dd.__wbg_rawpointprojection_free,Mw=Dd.rawpointprojection_point,Ew=Dd.rawpointprojection_isInside,Tw=Dd.__wbg_rawpointcolliderprojection_free,Aw=Dd.rawpointcolliderprojection_colliderHandle,Rw=Dd.rawpointcolliderprojection_point,Cw=Dd.rawpointcolliderprojection_isInside,Pw=Dd.rawpointcolliderprojection_featureType,Iw=Dd.rawpointcolliderprojection_featureId,Lw=Dd.__wbg_rawrayintersection_free,Dw=Dd.__wbg_rawraycolliderhit_free,Uw=Dd.__wbg_rawshape_free,Nw=Dd.rawshape_cuboid,Fw=Dd.rawshape_roundCuboid,Ow=Dd.rawshape_ball,zw=Dd.rawshape_halfspace,Bw=Dd.rawshape_capsule,kw=Dd.rawshape_cylinder,Hw=Dd.rawshape_roundCylinder,Vw=Dd.rawshape_cone,Gw=Dd.rawshape_roundCone,jw=Dd.rawshape_voxels,Ww=Dd.rawshape_voxelsFromPoints,Xw=Dd.rawshape_polyline,qw=Dd.rawshape_trimesh,Yw=Dd.rawshape_heightfield,Jw=Dd.rawshape_segment,Kw=Dd.rawshape_triangle,Zw=Dd.rawshape_roundTriangle,$w=Dd.rawshape_convexHull,Qw=Dd.rawshape_roundConvexHull,tv=Dd.rawshape_convexMesh,ev=Dd.rawshape_roundConvexMesh,iv=Dd.rawshape_castShape,rv=Dd.rawshape_intersectsShape,nv=Dd.rawshape_contactShape,av=Dd.rawshape_containsPoint,sv=Dd.rawshape_projectPoint,ov=Dd.rawshape_intersectsRay,lv=Dd.rawshape_castRay,cv=Dd.rawshape_castRayAndGetNormal,hv=Dd.__wbg_rawshapecasthit_free,dv=Dd.rawshapecasthit_witness1,uv=Dd.rawshapecasthit_normal1,pv=Dd.rawshapecasthit_normal2,_v=Dd.__wbg_rawcollidershapecasthit_free,mv=Dd.rawcollidershapecasthit_time_of_impact,fv=Dd.rawcollidershapecasthit_witness1,gv=Dd.rawcollidershapecasthit_witness2,wv=Dd.rawrotation_new,vv=Dd.rawrotation_identity,bv=Dd.rawrotation_x,yv=Dd.rawrotation_w,xv=Dd.rawvector_zero,Sv=Dd.rawvector_new,Mv=Dd.rawvector_set_x,Ev=Dd.rawvector_set_z,Tv=Dd.rawvector_xyz,Av=Dd.rawvector_yxz,Rv=Dd.rawvector_zxy,Cv=Dd.rawvector_xzy,Pv=Dd.rawvector_yzx,Iv=Dd.rawvector_zyx,Lv=Dd.rawsdpmatrix3_elements,Dv=Dd.__wbg_rawdebugrenderpipeline_free,Uv=Dd.rawdebugrenderpipeline_new,Nv=Dd.rawdebugrenderpipeline_vertices,Fv=Dd.rawdebugrenderpipeline_colors,Ov=Dd.rawdebugrenderpipeline_render,zv=Dd.__wbg_raweventqueue_free,Bv=Dd.__wbg_rawcontactforceevent_free,kv=Dd.rawcontactforceevent_collider2,Hv=Dd.rawcontactforceevent_total_force,Vv=Dd.rawcontactforceevent_total_force_magnitude,Gv=Dd.rawcontactforceevent_max_force_direction,jv=Dd.rawcontactforceevent_max_force_magnitude,Wv=Dd.raweventqueue_new,Xv=Dd.raweventqueue_drainCollisionEvents,qv=Dd.raweventqueue_drainContactForceEvents,Yv=Dd.raweventqueue_clear,Jv=Dd.__wbg_rawphysicspipeline_free,Kv=Dd.rawphysicspipeline_new,Zv=Dd.rawphysicspipeline_step,$v=Dd.rawphysicspipeline_stepWithEvents,Qv=Dd.rawquerypipeline_new,tb=Dd.rawquerypipeline_update,eb=Dd.rawquerypipeline_castRay,ib=Dd.rawquerypipeline_castRayAndGetNormal,rb=Dd.rawquerypipeline_intersectionsWithRay,nb=Dd.rawquerypipeline_intersectionWithShape,ab=Dd.rawquerypipeline_projectPoint,sb=Dd.rawquerypipeline_projectPointAndGetFeature,ob=Dd.rawquerypipeline_intersectionsWithPoint,lb=Dd.rawquerypipeline_castShape,cb=Dd.rawquerypipeline_intersectionsWithShape,hb=Dd.rawquerypipeline_collidersWithAabbIntersectingAabb,db=Dd.__wbg_rawdeserializedworld_free,ub=Dd.rawdeserializedworld_takeGravity,pb=Dd.rawdeserializedworld_takeIntegrationParameters,_b=Dd.rawdeserializedworld_takeIslandManager,mb=Dd.rawdeserializedworld_takeBroadPhase,fb=Dd.rawdeserializedworld_takeNarrowPhase,gb=Dd.rawdeserializedworld_takeBodies,wb=Dd.rawdeserializedworld_takeColliders,vb=Dd.rawdeserializedworld_takeImpulseJoints,bb=Dd.rawdeserializedworld_takeMultibodyJoints,yb=Dd.__wbg_rawserializationpipeline_free,xb=Dd.rawserializationpipeline_new,Sb=Dd.rawserializationpipeline_serializeAll,Mb=Dd.rawserializationpipeline_deserializeAll,Eb=Dd.rawcolliderset_isHandleValid,Tb=Dd.rawkinematiccharactercontroller_offset,Ab=Dd.rawintegrationparameters_normalizedAllowedLinearError,Rb=Dd.rawintegrationparameters_numAdditionalFrictionIterations,Cb=Dd.rawintegrationparameters_numInternalPgsIterations,Pb=Dd.rawrigidbodyset_len,Ib=Dd.rawshapecontact_distance,Lb=Dd.rawrayintersection_featureType,Db=Dd.rawraycolliderintersection_colliderHandle,Ub=Dd.rawrayintersection_time_of_impact,Nb=Dd.rawraycolliderintersection_featureType,Fb=Dd.rawraycolliderhit_colliderHandle,Ob=Dd.rawraycolliderintersection_time_of_impact,zb=Dd.rawcollidershapecasthit_colliderHandle,Bb=Dd.rawraycolliderhit_timeOfImpact,kb=Dd.rawshapecasthit_time_of_impact,Hb=Dd.rawrotation_y,Vb=Dd.rawrotation_z,Gb=Dd.rawvector_x,jb=Dd.rawvector_y,Wb=Dd.rawvector_z,Xb=Dd.rawcontactforceevent_collider1,qb=Dd.rawintegrationparameters_normalizedPredictionDistance,Yb=Dd.__wbg_rawquerypipeline_free,Jb=Dd.rawrayintersection_featureId,Kb=Dd.rawraycolliderintersection_featureId,Zb=Dd.rawkinematiccharactercontroller_up,$b=Dd.rawshapecontact_normal2,Qb=Dd.rawshapecontact_point1,ty=Dd.rawshapecontact_point2,ey=Dd.rawrayintersection_normal,iy=Dd.rawraycolliderintersection_normal,ry=Dd.rawshapecontact_normal1,ny=Dd.rawcollidershapecasthit_normal1,ay=Dd.rawcollidershapecasthit_normal2,sy=Dd.rawshapecasthit_witness2,oy=Dd.rawintegrationparameters_set_numAdditionalFrictionIterations,ly=Dd.rawintegrationparameters_set_numInternalPgsIterations,cy=Dd.rawvector_set_y,hy=Dd.__wbg_rawraycolliderintersection_free,dy=Dd.__wbg_rawvector_free,uy=Dd.__wbg_rawsdpmatrix3_free,py=Dd.__wbg_rawcontactpair_free,_y=Dd.__wbg_rawrotation_free,my=Dd.__wbindgen_export_0,fy=Dd.__wbindgen_add_to_stack_pointer,gy=Dd.__wbindgen_export_1,wy=Dd.__wbindgen_export_2,vy=Object.freeze(Object.defineProperty({__proto__:null,__wbg_rawbroadphase_free:wf,__wbg_rawccdsolver_free:Ap,__wbg_rawcharactercollision_free:cu,__wbg_rawcolliderset_free:zg,__wbg_rawcollidershapecasthit_free:_v,__wbg_rawcontactforceevent_free:Bv,__wbg_rawcontactmanifold_free:$g,__wbg_rawcontactpair_free:py,__wbg_rawdebugrenderpipeline_free:Dv,__wbg_rawdeserializedworld_free:db,__wbg_rawdynamicraycastvehiclecontroller_free:Pu,__wbg_raweventqueue_free:zv,__wbg_rawgenericjoint_free:M_,__wbg_rawimpulsejointset_free:Yp,__wbg_rawintegrationparameters_free:i_,__wbg_rawislandmanager_free:y_,__wbg_rawkinematiccharactercontroller_free:Fd,__wbg_rawmultibodyjointset_free:V_,__wbg_rawnarrowphase_free:Xg,__wbg_rawphysicspipeline_free:Jv,__wbg_rawpidcontroller_free:vu,__wbg_rawpointcolliderprojection_free:Tw,__wbg_rawpointprojection_free:Sw,__wbg_rawquerypipeline_free:Yb,__wbg_rawraycolliderhit_free:Dw,__wbg_rawraycolliderintersection_free:hy,__wbg_rawrayintersection_free:Lw,__wbg_rawrigidbodyset_free:df,__wbg_rawrotation_free:_y,__wbg_rawsdpmatrix3_free:uy,__wbg_rawserializationpipeline_free:yb,__wbg_rawshape_free:Uw,__wbg_rawshapecasthit_free:hv,__wbg_rawshapecontact_free:Wg,__wbg_rawvector_free:dy,__wbindgen_add_to_stack_pointer:fy,__wbindgen_export_0:my,__wbindgen_export_1:gy,__wbindgen_export_2:wy,memory:Ud,rawbroadphase_new:vf,rawccdsolver_new:Rp,rawcharactercollision_handle:du,rawcharactercollision_new:hu,rawcharactercollision_toi:_u,rawcharactercollision_translationDeltaApplied:uu,rawcharactercollision_translationDeltaRemaining:pu,rawcharactercollision_worldNormal1:gu,rawcharactercollision_worldNormal2:wu,rawcharactercollision_worldWitness1:mu,rawcharactercollision_worldWitness2:fu,rawcolliderset_coActiveCollisionTypes:lg,rawcolliderset_coActiveEvents:cg,rawcolliderset_coActiveHooks:og,rawcolliderset_coCastCollider:pg,rawcolliderset_coCastRay:vg,rawcolliderset_coCastRayAndGetNormal:bg,rawcolliderset_coCastShape:ug,rawcolliderset_coCollisionGroups:ag,rawcolliderset_coContactCollider:fg,rawcolliderset_coContactForceEventThreshold:hg,rawcolliderset_coContactShape:mg,rawcolliderset_coContactSkin:Qf,rawcolliderset_coContainsPoint:dg,rawcolliderset_coDensity:ig,rawcolliderset_coFriction:tg,rawcolliderset_coFrictionCombineRule:Mg,rawcolliderset_coHalfExtents:Cf,rawcolliderset_coHalfHeight:Df,rawcolliderset_coHalfspaceNormal:Rf,rawcolliderset_coHeightFieldFlags:jf,rawcolliderset_coHeightfieldHeights:Wf,rawcolliderset_coHeightfieldNCols:Yf,rawcolliderset_coHeightfieldNRows:qf,rawcolliderset_coHeightfieldScale:Xf,rawcolliderset_coIndices:Vf,rawcolliderset_coIntersectsRay:wg,rawcolliderset_coIntersectsShape:_g,rawcolliderset_coIsEnabled:Zf,rawcolliderset_coIsSensor:Tf,rawcolliderset_coMass:rg,rawcolliderset_coParent:Jf,rawcolliderset_coProjectPoint:gg,rawcolliderset_coRadius:If,rawcolliderset_coRestitution:eg,rawcolliderset_coRestitutionCombineRule:Tg,rawcolliderset_coRotation:yf,rawcolliderset_coRoundRadius:Nf,rawcolliderset_coSetActiveCollisionTypes:Lg,rawcolliderset_coSetActiveEvents:Ig,rawcolliderset_coSetActiveHooks:Pg,rawcolliderset_coSetCollisionGroups:Rg,rawcolliderset_coSetContactForceEventThreshold:Ug,rawcolliderset_coSetContactSkin:$f,rawcolliderset_coSetDensity:Ng,rawcolliderset_coSetEnabled:Kf,rawcolliderset_coSetFriction:Sg,rawcolliderset_coSetFrictionCombineRule:Eg,rawcolliderset_coSetHalfExtents:Pf,rawcolliderset_coSetHalfHeight:Uf,rawcolliderset_coSetMass:Fg,rawcolliderset_coSetMassProperties:Og,rawcolliderset_coSetRadius:Lf,rawcolliderset_coSetRestitution:xg,rawcolliderset_coSetRestitutionCombineRule:Ag,rawcolliderset_coSetRotation:Mf,rawcolliderset_coSetRotationWrtParent:Ef,rawcolliderset_coSetRoundRadius:Ff,rawcolliderset_coSetSensor:yg,rawcolliderset_coSetShape:Dg,rawcolliderset_coSetSolverGroups:Cg,rawcolliderset_coSetTranslation:xf,rawcolliderset_coSetTranslationWrtParent:Sf,rawcolliderset_coSetVoxel:kf,rawcolliderset_coShapeType:Af,rawcolliderset_coSolverGroups:sg,rawcolliderset_coTranslation:bf,rawcolliderset_coTriMeshFlags:Gf,rawcolliderset_coVertices:Hf,rawcolliderset_coVolume:ng,rawcolliderset_coVoxelData:Of,rawcolliderset_coVoxelPrimitiveGeometry:zf,rawcolliderset_coVoxelSize:Bf,rawcolliderset_contains:Hg,rawcolliderset_createCollider:Vg,rawcolliderset_forEachColliderHandle:jg,rawcolliderset_isHandleValid:Eb,rawcolliderset_len:kg,rawcolliderset_new:Bg,rawcolliderset_remove:Gg,rawcollidershapecasthit_colliderHandle:zb,rawcollidershapecasthit_normal1:ny,rawcollidershapecasthit_normal2:ay,rawcollidershapecasthit_time_of_impact:mv,rawcollidershapecasthit_witness1:fv,rawcollidershapecasthit_witness2:gv,rawcontactforceevent_collider1:Xb,rawcontactforceevent_collider2:kv,rawcontactforceevent_max_force_direction:Gv,rawcontactforceevent_max_force_magnitude:jv,rawcontactforceevent_total_force:Hv,rawcontactforceevent_total_force_magnitude:Vv,rawcontactmanifold_contact_dist:dw,rawcontactmanifold_contact_fid1:uw,rawcontactmanifold_contact_fid2:pw,rawcontactmanifold_contact_impulse:_w,rawcontactmanifold_contact_local_p1:cw,rawcontactmanifold_contact_local_p2:hw,rawcontactmanifold_contact_tangent_impulse_x:mw,rawcontactmanifold_contact_tangent_impulse_y:fw,rawcontactmanifold_local_n1:nw,rawcontactmanifold_local_n2:aw,rawcontactmanifold_normal:rw,rawcontactmanifold_num_contacts:lw,rawcontactmanifold_num_solver_contacts:gw,rawcontactmanifold_solver_contact_dist:vw,rawcontactmanifold_solver_contact_friction:bw,rawcontactmanifold_solver_contact_point:ww,rawcontactmanifold_solver_contact_restitution:yw,rawcontactmanifold_solver_contact_tangent_velocity:xw,rawcontactmanifold_subshape1:sw,rawcontactmanifold_subshape2:ow,rawcontactpair_collider1:Qg,rawcontactpair_collider2:tw,rawcontactpair_contactManifold:iw,rawcontactpair_numContactManifolds:ew,rawdebugrenderpipeline_colors:Fv,rawdebugrenderpipeline_new:Uv,rawdebugrenderpipeline_render:Ov,rawdebugrenderpipeline_vertices:Nv,rawdeserializedworld_takeBodies:gb,rawdeserializedworld_takeBroadPhase:mb,rawdeserializedworld_takeColliders:wb,rawdeserializedworld_takeGravity:ub,rawdeserializedworld_takeImpulseJoints:vb,rawdeserializedworld_takeIntegrationParameters:pb,rawdeserializedworld_takeIslandManager:_b,rawdeserializedworld_takeMultibodyJoints:bb,rawdeserializedworld_takeNarrowPhase:fb,rawdynamicraycastvehiclecontroller_add_wheel:zu,rawdynamicraycastvehiclecontroller_chassis:Du,rawdynamicraycastvehiclecontroller_current_vehicle_speed:Lu,rawdynamicraycastvehiclecontroller_index_forward_axis:Fu,rawdynamicraycastvehiclecontroller_index_up_axis:Uu,rawdynamicraycastvehiclecontroller_new:Iu,rawdynamicraycastvehiclecontroller_num_wheels:Bu,rawdynamicraycastvehiclecontroller_set_index_forward_axis:Ou,rawdynamicraycastvehiclecontroller_set_index_up_axis:Nu,rawdynamicraycastvehiclecontroller_set_wheel_axle_cs:up,rawdynamicraycastvehiclecontroller_set_wheel_brake:np,rawdynamicraycastvehiclecontroller_set_wheel_chassis_connection_point_cs:Vu,rawdynamicraycastvehiclecontroller_set_wheel_direction_cs:hp,rawdynamicraycastvehiclecontroller_set_wheel_engine_force:lp,rawdynamicraycastvehiclecontroller_set_wheel_friction_slip:_p,rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_force:ip,rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_travel:Xu,rawdynamicraycastvehiclecontroller_set_wheel_radius:Yu,rawdynamicraycastvehiclecontroller_set_wheel_side_friction_stiffness:fp,rawdynamicraycastvehiclecontroller_set_wheel_steering:sp,rawdynamicraycastvehiclecontroller_set_wheel_suspension_compression:$u,rawdynamicraycastvehiclecontroller_set_wheel_suspension_relaxation:tp,rawdynamicraycastvehiclecontroller_set_wheel_suspension_rest_length:ju,rawdynamicraycastvehiclecontroller_set_wheel_suspension_stiffness:Ku,rawdynamicraycastvehiclecontroller_update_vehicle:ku,rawdynamicraycastvehiclecontroller_wheel_axle_cs:dp,rawdynamicraycastvehiclecontroller_wheel_brake:rp,rawdynamicraycastvehiclecontroller_wheel_chassis_connection_point_cs:Hu,rawdynamicraycastvehiclecontroller_wheel_contact_normal_ws:yp,rawdynamicraycastvehiclecontroller_wheel_contact_point_ws:xp,rawdynamicraycastvehiclecontroller_wheel_direction_cs:cp,rawdynamicraycastvehiclecontroller_wheel_engine_force:op,rawdynamicraycastvehiclecontroller_wheel_forward_impulse:wp,rawdynamicraycastvehiclecontroller_wheel_friction_slip:pp,rawdynamicraycastvehiclecontroller_wheel_ground_object:Tp,rawdynamicraycastvehiclecontroller_wheel_hard_point_ws:Mp,rawdynamicraycastvehiclecontroller_wheel_is_in_contact:Ep,rawdynamicraycastvehiclecontroller_wheel_max_suspension_force:ep,rawdynamicraycastvehiclecontroller_wheel_max_suspension_travel:Wu,rawdynamicraycastvehiclecontroller_wheel_radius:qu,rawdynamicraycastvehiclecontroller_wheel_rotation:gp,rawdynamicraycastvehiclecontroller_wheel_side_friction_stiffness:mp,rawdynamicraycastvehiclecontroller_wheel_side_impulse:vp,rawdynamicraycastvehiclecontroller_wheel_steering:ap,rawdynamicraycastvehiclecontroller_wheel_suspension_compression:Zu,rawdynamicraycastvehiclecontroller_wheel_suspension_force:bp,rawdynamicraycastvehiclecontroller_wheel_suspension_length:Sp,rawdynamicraycastvehiclecontroller_wheel_suspension_relaxation:Qu,rawdynamicraycastvehiclecontroller_wheel_suspension_rest_length:Gu,rawdynamicraycastvehiclecontroller_wheel_suspension_stiffness:Ju,raweventqueue_clear:Yv,raweventqueue_drainCollisionEvents:Xv,raweventqueue_drainContactForceEvents:qv,raweventqueue_new:Wv,rawgenericjoint_fixed:P_,rawgenericjoint_generic:E_,rawgenericjoint_prismatic:C_,rawgenericjoint_revolute:I_,rawgenericjoint_rope:A_,rawgenericjoint_spherical:R_,rawgenericjoint_spring:T_,rawimpulsejointset_contains:Qp,rawimpulsejointset_createJoint:Kp,rawimpulsejointset_forEachJointAttachedToRigidBody:e_,rawimpulsejointset_forEachJointHandle:t_,rawimpulsejointset_jointAnchor1:Up,rawimpulsejointset_jointAnchor2:Np,rawimpulsejointset_jointBodyHandle1:Pp,rawimpulsejointset_jointBodyHandle2:Ip,rawimpulsejointset_jointConfigureMotor:qp,rawimpulsejointset_jointConfigureMotorModel:jp,rawimpulsejointset_jointConfigureMotorPosition:Xp,rawimpulsejointset_jointConfigureMotorVelocity:Wp,rawimpulsejointset_jointContactsEnabled:zp,rawimpulsejointset_jointFrameX1:Lp,rawimpulsejointset_jointFrameX2:Dp,rawimpulsejointset_jointLimitsEnabled:kp,rawimpulsejointset_jointLimitsMax:Vp,rawimpulsejointset_jointLimitsMin:Hp,rawimpulsejointset_jointSetAnchor1:Fp,rawimpulsejointset_jointSetAnchor2:Op,rawimpulsejointset_jointSetContactsEnabled:Bp,rawimpulsejointset_jointSetLimits:Gp,rawimpulsejointset_jointType:Cp,rawimpulsejointset_len:$p,rawimpulsejointset_new:Jp,rawimpulsejointset_remove:Zp,rawintegrationparameters_contact_erp:a_,rawintegrationparameters_dt:n_,rawintegrationparameters_lengthUnit:c_,rawintegrationparameters_maxCcdSubsteps:l_,rawintegrationparameters_minIslandSize:o_,rawintegrationparameters_new:r_,rawintegrationparameters_normalizedAllowedLinearError:Ab,rawintegrationparameters_normalizedPredictionDistance:qb,rawintegrationparameters_numAdditionalFrictionIterations:Rb,rawintegrationparameters_numInternalPgsIterations:Cb,rawintegrationparameters_numSolverIterations:s_,rawintegrationparameters_set_contact_natural_frequency:d_,rawintegrationparameters_set_dt:h_,rawintegrationparameters_set_lengthUnit:g_,rawintegrationparameters_set_maxCcdSubsteps:f_,rawintegrationparameters_set_minIslandSize:m_,rawintegrationparameters_set_normalizedAllowedLinearError:u_,rawintegrationparameters_set_normalizedPredictionDistance:p_,rawintegrationparameters_set_numAdditionalFrictionIterations:oy,rawintegrationparameters_set_numInternalPgsIterations:ly,rawintegrationparameters_set_numSolverIterations:__,rawintegrationparameters_switchToSmallStepsPgsSolver:v_,rawintegrationparameters_switchToSmallStepsPgsSolverWithoutWarmstart:b_,rawintegrationparameters_switchToStandardPgsSolver:w_,rawislandmanager_forEachActiveRigidBodyHandle:S_,rawislandmanager_new:x_,rawkinematiccharactercontroller_autostepEnabled:qd,rawkinematiccharactercontroller_autostepIncludesDynamicBodies:Xd,rawkinematiccharactercontroller_autostepMaxHeight:jd,rawkinematiccharactercontroller_autostepMinWidth:Wd,rawkinematiccharactercontroller_computeColliderMovement:nu,rawkinematiccharactercontroller_computedCollision:lu,rawkinematiccharactercontroller_computedGrounded:su,rawkinematiccharactercontroller_computedMovement:au,rawkinematiccharactercontroller_disableAutostep:Jd,rawkinematiccharactercontroller_disableSnapToGround:iu,rawkinematiccharactercontroller_enableAutostep:Yd,rawkinematiccharactercontroller_enableSnapToGround:eu,rawkinematiccharactercontroller_maxSlopeClimbAngle:Kd,rawkinematiccharactercontroller_minSlopeSlideAngle:$d,rawkinematiccharactercontroller_new:Od,rawkinematiccharactercontroller_normalNudgeFactor:Bd,rawkinematiccharactercontroller_numComputedCollisions:ou,rawkinematiccharactercontroller_offset:Tb,rawkinematiccharactercontroller_setMaxSlopeClimbAngle:Zd,rawkinematiccharactercontroller_setMinSlopeSlideAngle:Qd,rawkinematiccharactercontroller_setNormalNudgeFactor:kd,rawkinematiccharactercontroller_setOffset:Hd,rawkinematiccharactercontroller_setSlideEnabled:Gd,rawkinematiccharactercontroller_setUp:zd,rawkinematiccharactercontroller_slideEnabled:Vd,rawkinematiccharactercontroller_snapToGroundDistance:tu,rawkinematiccharactercontroller_snapToGroundEnabled:ru,rawkinematiccharactercontroller_up:Zb,rawmultibodyjointset_contains:X_,rawmultibodyjointset_createJoint:j_,rawmultibodyjointset_forEachJointAttachedToRigidBody:Y_,rawmultibodyjointset_forEachJointHandle:q_,rawmultibodyjointset_jointAnchor1:N_,rawmultibodyjointset_jointAnchor2:F_,rawmultibodyjointset_jointContactsEnabled:O_,rawmultibodyjointset_jointFrameX1:D_,rawmultibodyjointset_jointFrameX2:U_,rawmultibodyjointset_jointLimitsEnabled:B_,rawmultibodyjointset_jointLimitsMax:H_,rawmultibodyjointset_jointLimitsMin:k_,rawmultibodyjointset_jointSetContactsEnabled:z_,rawmultibodyjointset_jointType:L_,rawmultibodyjointset_new:G_,rawmultibodyjointset_remove:W_,rawnarrowphase_contact_pair:Jg,rawnarrowphase_contact_pairs_with:Yg,rawnarrowphase_intersection_pair:Zg,rawnarrowphase_intersection_pairs_with:Kg,rawnarrowphase_new:qg,rawphysicspipeline_new:Kv,rawphysicspipeline_step:Zv,rawphysicspipeline_stepWithEvents:$v,rawpidcontroller_angular_correction:Cu,rawpidcontroller_apply_angular_correction:Au,rawpidcontroller_apply_linear_correction:Tu,rawpidcontroller_linear_correction:Ru,rawpidcontroller_new:bu,rawpidcontroller_reset_integrals:Eu,rawpidcontroller_set_axes_mask:Mu,rawpidcontroller_set_kd:Su,rawpidcontroller_set_ki:xu,rawpidcontroller_set_kp:yu,rawpointcolliderprojection_colliderHandle:Aw,rawpointcolliderprojection_featureId:Iw,rawpointcolliderprojection_featureType:Pw,rawpointcolliderprojection_isInside:Cw,rawpointcolliderprojection_point:Rw,rawpointprojection_isInside:Ew,rawpointprojection_point:Mw,rawquerypipeline_castRay:eb,rawquerypipeline_castRayAndGetNormal:ib,rawquerypipeline_castShape:lb,rawquerypipeline_collidersWithAabbIntersectingAabb:hb,rawquerypipeline_intersectionWithShape:nb,rawquerypipeline_intersectionsWithPoint:ob,rawquerypipeline_intersectionsWithRay:rb,rawquerypipeline_intersectionsWithShape:cb,rawquerypipeline_new:Qv,rawquerypipeline_projectPoint:ab,rawquerypipeline_projectPointAndGetFeature:sb,rawquerypipeline_update:tb,rawraycolliderhit_colliderHandle:Fb,rawraycolliderhit_timeOfImpact:Bb,rawraycolliderintersection_colliderHandle:Db,rawraycolliderintersection_featureId:Kb,rawraycolliderintersection_featureType:Nb,rawraycolliderintersection_normal:iy,rawraycolliderintersection_time_of_impact:Ob,rawrayintersection_featureId:Jb,rawrayintersection_featureType:Lb,rawrayintersection_normal:ey,rawrayintersection_time_of_impact:Ub,rawrigidbodyset_contains:mf,rawrigidbodyset_createRigidBody:pf,rawrigidbodyset_forEachRigidBodyHandle:ff,rawrigidbodyset_len:Pb,rawrigidbodyset_new:uf,rawrigidbodyset_propagateModifiedBodyPositionsToColliders:gf,rawrigidbodyset_rbAddForce:$m,rawrigidbodyset_rbAddForceAtPoint:rf,rawrigidbodyset_rbAddTorque:tf,rawrigidbodyset_rbAdditionalSolverIterations:af,rawrigidbodyset_rbAngularDamping:Gm,rawrigidbodyset_rbAngvel:um,rawrigidbodyset_rbApplyImpulse:Qm,rawrigidbodyset_rbApplyImpulseAtPoint:nf,rawrigidbodyset_rbApplyTorqueImpulse:ef,rawrigidbodyset_rbBodyType:Om,rawrigidbodyset_rbCollider:Fm,rawrigidbodyset_rbDominanceGroup:wm,rawrigidbodyset_rbEffectiveAngularInertia:Im,rawrigidbodyset_rbEffectiveInvMass:Mm,rawrigidbodyset_rbEffectiveWorldInvInertiaSqrt:Pm,rawrigidbodyset_rbEnableCcd:bm,rawrigidbodyset_rbGravityScale:Ym,rawrigidbodyset_rbInvMass:Sm,rawrigidbodyset_rbInvPrincipalInertiaSqrt:Am,rawrigidbodyset_rbIsCcdEnabled:Dm,rawrigidbodyset_rbIsDynamic:Hm,rawrigidbodyset_rbIsEnabled:qm,rawrigidbodyset_rbIsFixed:Bm,rawrigidbodyset_rbIsKinematic:km,rawrigidbodyset_rbIsMoving:Q_,rawrigidbodyset_rbIsSleeping:$_,rawrigidbodyset_rbLinearDamping:Vm,rawrigidbodyset_rbLinvel:dm,rawrigidbodyset_rbLocalCom:Em,rawrigidbodyset_rbLockRotations:fm,rawrigidbodyset_rbLockTranslations:_m,rawrigidbodyset_rbMass:xm,rawrigidbodyset_rbNextRotation:em,rawrigidbodyset_rbNextTranslation:tm,rawrigidbodyset_rbNumColliders:Nm,rawrigidbodyset_rbPrincipalInertia:Cm,rawrigidbodyset_rbPrincipalInertiaLocalFrame:Rm,rawrigidbodyset_rbRecomputeMassPropertiesFromColliders:lm,rawrigidbodyset_rbResetForces:Km,rawrigidbodyset_rbResetTorques:Zm,rawrigidbodyset_rbRotation:K_,rawrigidbodyset_rbSetAdditionalMass:cm,rawrigidbodyset_rbSetAdditionalMassProperties:hm,rawrigidbodyset_rbSetAdditionalSolverIterations:sf,rawrigidbodyset_rbSetAngularDamping:Wm,rawrigidbodyset_rbSetAngvel:am,rawrigidbodyset_rbSetBodyType:zm,rawrigidbodyset_rbSetDominanceGroup:vm,rawrigidbodyset_rbSetEnabled:Xm,rawrigidbodyset_rbSetEnabledRotations:gm,rawrigidbodyset_rbSetEnabledTranslations:mm,rawrigidbodyset_rbSetGravityScale:Jm,rawrigidbodyset_rbSetLinearDamping:jm,rawrigidbodyset_rbSetLinvel:nm,rawrigidbodyset_rbSetNextKinematicRotation:om,rawrigidbodyset_rbSetNextKinematicTranslation:sm,rawrigidbodyset_rbSetRotation:rm,rawrigidbodyset_rbSetSoftCcdPrediction:ym,rawrigidbodyset_rbSetTranslation:im,rawrigidbodyset_rbSetUserData:lf,rawrigidbodyset_rbSleep:Z_,rawrigidbodyset_rbSoftCcdPrediction:Um,rawrigidbodyset_rbTranslation:J_,rawrigidbodyset_rbUserData:of,rawrigidbodyset_rbUserForce:cf,rawrigidbodyset_rbUserTorque:hf,rawrigidbodyset_rbVelocityAtPoint:pm,rawrigidbodyset_rbWakeUp:Lm,rawrigidbodyset_rbWorldCom:Tm,rawrigidbodyset_remove:_f,rawrotation_identity:vv,rawrotation_new:wv,rawrotation_w:yv,rawrotation_x:bv,rawrotation_y:Hb,rawrotation_z:Vb,rawsdpmatrix3_elements:Lv,rawserializationpipeline_deserializeAll:Mb,rawserializationpipeline_new:xb,rawserializationpipeline_serializeAll:Sb,rawshape_ball:Ow,rawshape_capsule:Bw,rawshape_castRay:lv,rawshape_castRayAndGetNormal:cv,rawshape_castShape:iv,rawshape_cone:Vw,rawshape_contactShape:nv,rawshape_containsPoint:av,rawshape_convexHull:$w,rawshape_convexMesh:tv,rawshape_cuboid:Nw,rawshape_cylinder:kw,rawshape_halfspace:zw,rawshape_heightfield:Yw,rawshape_intersectsRay:ov,rawshape_intersectsShape:rv,rawshape_polyline:Xw,rawshape_projectPoint:sv,rawshape_roundCone:Gw,rawshape_roundConvexHull:Qw,rawshape_roundConvexMesh:ev,rawshape_roundCuboid:Fw,rawshape_roundCylinder:Hw,rawshape_roundTriangle:Zw,rawshape_segment:Jw,rawshape_triangle:Kw,rawshape_trimesh:qw,rawshape_voxels:jw,rawshape_voxelsFromPoints:Ww,rawshapecasthit_normal1:uv,rawshapecasthit_normal2:pv,rawshapecasthit_time_of_impact:kb,rawshapecasthit_witness1:dv,rawshapecasthit_witness2:sy,rawshapecontact_distance:Ib,rawshapecontact_normal1:ry,rawshapecontact_normal2:$b,rawshapecontact_point1:Qb,rawshapecontact_point2:ty,rawvector_new:Sv,rawvector_set_x:Mv,rawvector_set_y:cy,rawvector_set_z:Ev,rawvector_x:Gb,rawvector_xyz:Tv,rawvector_xzy:Cv,rawvector_y:jb,rawvector_yxz:Av,rawvector_yzx:Pv,rawvector_z:Wb,rawvector_zero:xv,rawvector_zxy:Rv,rawvector_zyx:Iv,version:Nd},Symbol.toStringTag,{value:"Module"}));var by,yy,xy,Sy,My,Ey,Ty,Ay,Ry,Cy,Py,Iy,Ly,Dy,Uy,Ny;Hc=vy;class Fy{constructor(t,e,i){this.x=t,this.y=e,this.z=i}}class Oy{static new(t,e,i){return new Fy(t,e,i)}static intoRaw(t){return new Ld(t.x,t.y,t.z)}static zeros(){return Oy.new(0,0,0)}static fromRaw(t){if(!t)return null;let e=Oy.new(t.x,t.y,t.z);return t.free(),e}static copy(t,e){t.x=e.x,t.y=e.y,t.z=e.z}}class zy{constructor(t,e,i,r){this.x=t,this.y=e,this.z=i,this.w=r}}class By{static identity(){return new zy(0,0,0,1)}static fromRaw(t){if(!t)return null;let e=new zy(t.x,t.y,t.z,t.w);return t.free(),e}static intoRaw(t){return new bd(t.x,t.y,t.z,t.w)}static copy(t,e){t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w}}class ky{get m11(){return this.elements[0]}get m12(){return this.elements[1]}get m21(){return this.m12}get m13(){return this.elements[2]}get m31(){return this.m13}get m22(){return this.elements[3]}get m23(){return this.elements[4]}get m32(){return this.m23}get m33(){return this.elements[5]}constructor(t){this.elements=t}}class Hy{static fromRaw(t){const e=new ky(t.elements());return t.free(),e}}!function(t){t[t.Dynamic=0]="Dynamic",t[t.Fixed=1]="Fixed",t[t.KinematicPositionBased=2]="KinematicPositionBased",t[t.KinematicVelocityBased=3]="KinematicVelocityBased"}(by||(by={}));class Vy{constructor(t,e,i){this.rawSet=t,this.colliderSet=e,this.handle=i}finalizeDeserialization(t){this.colliderSet=t}isValid(){return this.rawSet.contains(this.handle)}lockTranslations(t,e){return this.rawSet.rbLockTranslations(this.handle,t,e)}lockRotations(t,e){return this.rawSet.rbLockRotations(this.handle,t,e)}setEnabledTranslations(t,e,i,r){return this.rawSet.rbSetEnabledTranslations(this.handle,t,e,i,r)}restrictTranslations(t,e,i,r){this.setEnabledTranslations(t,e,i,r)}setEnabledRotations(t,e,i,r){return this.rawSet.rbSetEnabledRotations(this.handle,t,e,i,r)}restrictRotations(t,e,i,r){this.setEnabledRotations(t,e,i,r)}dominanceGroup(){return this.rawSet.rbDominanceGroup(this.handle)}setDominanceGroup(t){this.rawSet.rbSetDominanceGroup(this.handle,t)}additionalSolverIterations(){return this.rawSet.rbAdditionalSolverIterations(this.handle)}setAdditionalSolverIterations(t){this.rawSet.rbSetAdditionalSolverIterations(this.handle,t)}enableCcd(t){this.rawSet.rbEnableCcd(this.handle,t)}setSoftCcdPrediction(t){this.rawSet.rbSetSoftCcdPrediction(this.handle,t)}softCcdPrediction(){return this.rawSet.rbSoftCcdPrediction(this.handle)}translation(){let t=this.rawSet.rbTranslation(this.handle);return Oy.fromRaw(t)}rotation(){let t=this.rawSet.rbRotation(this.handle);return By.fromRaw(t)}nextTranslation(){let t=this.rawSet.rbNextTranslation(this.handle);return Oy.fromRaw(t)}nextRotation(){let t=this.rawSet.rbNextRotation(this.handle);return By.fromRaw(t)}setTranslation(t,e){this.rawSet.rbSetTranslation(this.handle,t.x,t.y,t.z,e)}setLinvel(t,e){let i=Oy.intoRaw(t);this.rawSet.rbSetLinvel(this.handle,i,e),i.free()}gravityScale(){return this.rawSet.rbGravityScale(this.handle)}setGravityScale(t,e){this.rawSet.rbSetGravityScale(this.handle,t,e)}setRotation(t,e){this.rawSet.rbSetRotation(this.handle,t.x,t.y,t.z,t.w,e)}setAngvel(t,e){let i=Oy.intoRaw(t);this.rawSet.rbSetAngvel(this.handle,i,e),i.free()}setNextKinematicTranslation(t){this.rawSet.rbSetNextKinematicTranslation(this.handle,t.x,t.y,t.z)}setNextKinematicRotation(t){this.rawSet.rbSetNextKinematicRotation(this.handle,t.x,t.y,t.z,t.w)}linvel(){return Oy.fromRaw(this.rawSet.rbLinvel(this.handle))}velocityAtPoint(t){const e=Oy.intoRaw(t);let i=Oy.fromRaw(this.rawSet.rbVelocityAtPoint(this.handle,e));return e.free(),i}angvel(){return Oy.fromRaw(this.rawSet.rbAngvel(this.handle))}mass(){return this.rawSet.rbMass(this.handle)}effectiveInvMass(){return Oy.fromRaw(this.rawSet.rbEffectiveInvMass(this.handle))}invMass(){return this.rawSet.rbInvMass(this.handle)}localCom(){return Oy.fromRaw(this.rawSet.rbLocalCom(this.handle))}worldCom(){return Oy.fromRaw(this.rawSet.rbWorldCom(this.handle))}invPrincipalInertiaSqrt(){return Oy.fromRaw(this.rawSet.rbInvPrincipalInertiaSqrt(this.handle))}principalInertia(){return Oy.fromRaw(this.rawSet.rbPrincipalInertia(this.handle))}principalInertiaLocalFrame(){return By.fromRaw(this.rawSet.rbPrincipalInertiaLocalFrame(this.handle))}effectiveWorldInvInertiaSqrt(){return Hy.fromRaw(this.rawSet.rbEffectiveWorldInvInertiaSqrt(this.handle))}effectiveAngularInertia(){return Hy.fromRaw(this.rawSet.rbEffectiveAngularInertia(this.handle))}sleep(){this.rawSet.rbSleep(this.handle)}wakeUp(){this.rawSet.rbWakeUp(this.handle)}isCcdEnabled(){return this.rawSet.rbIsCcdEnabled(this.handle)}numColliders(){return this.rawSet.rbNumColliders(this.handle)}collider(t){return this.colliderSet.get(this.rawSet.rbCollider(this.handle,t))}setEnabled(t){this.rawSet.rbSetEnabled(this.handle,t)}isEnabled(){return this.rawSet.rbIsEnabled(this.handle)}bodyType(){return this.rawSet.rbBodyType(this.handle)}setBodyType(t,e){return this.rawSet.rbSetBodyType(this.handle,t,e)}isSleeping(){return this.rawSet.rbIsSleeping(this.handle)}isMoving(){return this.rawSet.rbIsMoving(this.handle)}isFixed(){return this.rawSet.rbIsFixed(this.handle)}isKinematic(){return this.rawSet.rbIsKinematic(this.handle)}isDynamic(){return this.rawSet.rbIsDynamic(this.handle)}linearDamping(){return this.rawSet.rbLinearDamping(this.handle)}angularDamping(){return this.rawSet.rbAngularDamping(this.handle)}setLinearDamping(t){this.rawSet.rbSetLinearDamping(this.handle,t)}recomputeMassPropertiesFromColliders(){this.rawSet.rbRecomputeMassPropertiesFromColliders(this.handle,this.colliderSet.raw)}setAdditionalMass(t,e){this.rawSet.rbSetAdditionalMass(this.handle,t,e)}setAdditionalMassProperties(t,e,i,r,n){let a=Oy.intoRaw(e),s=Oy.intoRaw(i),o=By.intoRaw(r);this.rawSet.rbSetAdditionalMassProperties(this.handle,t,a,s,o,n),a.free(),s.free(),o.free()}setAngularDamping(t){this.rawSet.rbSetAngularDamping(this.handle,t)}resetForces(t){this.rawSet.rbResetForces(this.handle,t)}resetTorques(t){this.rawSet.rbResetTorques(this.handle,t)}addForce(t,e){const i=Oy.intoRaw(t);this.rawSet.rbAddForce(this.handle,i,e),i.free()}applyImpulse(t,e){const i=Oy.intoRaw(t);this.rawSet.rbApplyImpulse(this.handle,i,e),i.free()}addTorque(t,e){const i=Oy.intoRaw(t);this.rawSet.rbAddTorque(this.handle,i,e),i.free()}applyTorqueImpulse(t,e){const i=Oy.intoRaw(t);this.rawSet.rbApplyTorqueImpulse(this.handle,i,e),i.free()}addForceAtPoint(t,e,i){const r=Oy.intoRaw(t),n=Oy.intoRaw(e);this.rawSet.rbAddForceAtPoint(this.handle,r,n,i),r.free(),n.free()}applyImpulseAtPoint(t,e,i){const r=Oy.intoRaw(t),n=Oy.intoRaw(e);this.rawSet.rbApplyImpulseAtPoint(this.handle,r,n,i),r.free(),n.free()}userForce(){return Oy.fromRaw(this.rawSet.rbUserForce(this.handle))}userTorque(){return Oy.fromRaw(this.rawSet.rbUserTorque(this.handle))}}class Gy{constructor(t){this.enabled=!0,this.status=t,this.translation=Oy.zeros(),this.rotation=By.identity(),this.gravityScale=1,this.linvel=Oy.zeros(),this.mass=0,this.massOnly=!1,this.centerOfMass=Oy.zeros(),this.translationsEnabledX=!0,this.translationsEnabledY=!0,this.angvel=Oy.zeros(),this.principalAngularInertia=Oy.zeros(),this.angularInertiaLocalFrame=By.identity(),this.translationsEnabledZ=!0,this.rotationsEnabledX=!0,this.rotationsEnabledY=!0,this.rotationsEnabledZ=!0,this.linearDamping=0,this.angularDamping=0,this.canSleep=!0,this.sleeping=!1,this.ccdEnabled=!1,this.softCcdPrediction=0,this.dominanceGroup=0,this.additionalSolverIterations=0}static dynamic(){return new Gy(by.Dynamic)}static kinematicPositionBased(){return new Gy(by.KinematicPositionBased)}static kinematicVelocityBased(){return new Gy(by.KinematicVelocityBased)}static fixed(){return new Gy(by.Fixed)}static newDynamic(){return new Gy(by.Dynamic)}static newKinematicPositionBased(){return new Gy(by.KinematicPositionBased)}static newKinematicVelocityBased(){return new Gy(by.KinematicVelocityBased)}static newStatic(){return new Gy(by.Fixed)}setDominanceGroup(t){return this.dominanceGroup=t,this}setAdditionalSolverIterations(t){return this.additionalSolverIterations=t,this}setEnabled(t){return this.enabled=t,this}setTranslation(t,e,i){if("number"!=typeof t||"number"!=typeof e||"number"!=typeof i)throw TypeError("The translation components must be numbers.");return this.translation={x:t,y:e,z:i},this}setRotation(t){return By.copy(this.rotation,t),this}setGravityScale(t){return this.gravityScale=t,this}setAdditionalMass(t){return this.mass=t,this.massOnly=!0,this}setLinvel(t,e,i){if("number"!=typeof t||"number"!=typeof e||"number"!=typeof i)throw TypeError("The linvel components must be numbers.");return this.linvel={x:t,y:e,z:i},this}setAngvel(t){return Oy.copy(this.angvel,t),this}setAdditionalMassProperties(t,e,i,r){return this.mass=t,Oy.copy(this.centerOfMass,e),Oy.copy(this.principalAngularInertia,i),By.copy(this.angularInertiaLocalFrame,r),this.massOnly=!1,this}enabledTranslations(t,e,i){return this.translationsEnabledX=t,this.translationsEnabledY=e,this.translationsEnabledZ=i,this}restrictTranslations(t,e,i){return this.enabledTranslations(t,e,i)}lockTranslations(){return this.enabledTranslations(!1,!1,!1)}enabledRotations(t,e,i){return this.rotationsEnabledX=t,this.rotationsEnabledY=e,this.rotationsEnabledZ=i,this}restrictRotations(t,e,i){return this.enabledRotations(t,e,i)}lockRotations(){return this.restrictRotations(!1,!1,!1)}setLinearDamping(t){return this.linearDamping=t,this}setAngularDamping(t){return this.angularDamping=t,this}setCanSleep(t){return this.canSleep=t,this}setSleeping(t){return this.sleeping=t,this}setCcdEnabled(t){return this.ccdEnabled=t,this}setSoftCcdPrediction(t){return this.softCcdPrediction=t,this}setUserData(t){return this.userData=t,this}}class jy{constructor(){this.fconv=new Float64Array(1),this.uconv=new Uint32Array(this.fconv.buffer),this.data=new Array,this.size=0}set(t,e){let i=this.index(t);for(;this.data.length<=i;)this.data.push(null);null==this.data[i]&&(this.size+=1),this.data[i]=e}len(){return this.size}delete(t){let e=this.index(t);e<this.data.length&&(null!=this.data[e]&&(this.size-=1),this.data[e]=null)}clear(){this.data=new Array}get(t){let e=this.index(t);return e<this.data.length?this.data[e]:null}forEach(t){for(const e of this.data)null!=e&&t(e)}getAll(){return this.data.filter((t=>null!=t))}index(t){return this.fconv[0]=t,this.uconv[0]}}class Wy{free(){this.raw&&this.raw.free(),this.raw=void 0,this.map&&this.map.clear(),this.map=void 0}constructor(t){this.raw=t||new wd,this.map=new jy,t&&t.forEachRigidBodyHandle((e=>{this.map.set(e,new Vy(t,null,e))}))}finalizeDeserialization(t){this.map.forEach((e=>e.finalizeDeserialization(t)))}createRigidBody(t,e){let i=Oy.intoRaw(e.translation),r=By.intoRaw(e.rotation),n=Oy.intoRaw(e.linvel),a=Oy.intoRaw(e.centerOfMass),s=Oy.intoRaw(e.angvel),o=Oy.intoRaw(e.principalAngularInertia),l=By.intoRaw(e.angularInertiaLocalFrame),c=this.raw.createRigidBody(e.enabled,i,r,e.gravityScale,e.mass,e.massOnly,a,n,s,o,l,e.translationsEnabledX,e.translationsEnabledY,e.translationsEnabledZ,e.rotationsEnabledX,e.rotationsEnabledY,e.rotationsEnabledZ,e.linearDamping,e.angularDamping,e.status,e.canSleep,e.sleeping,e.softCcdPrediction,e.ccdEnabled,e.dominanceGroup,e.additionalSolverIterations);i.free(),r.free(),n.free(),a.free(),s.free(),o.free(),l.free();const h=new Vy(this.raw,t,c);return h.userData=e.userData,this.map.set(c,h),h}remove(t,e,i,r,n){for(let a=0;a<this.raw.rbNumColliders(t);a+=1)i.unmap(this.raw.rbCollider(t,a));r.forEachJointHandleAttachedToRigidBody(t,(t=>r.unmap(t))),n.forEachJointHandleAttachedToRigidBody(t,(t=>n.unmap(t))),this.raw.remove(t,e.raw,i.raw,r.raw,n.raw),this.map.delete(t)}len(){return this.map.len()}contains(t){return null!=this.get(t)}get(t){return this.map.get(t)}forEach(t){this.map.forEach(t)}forEachActiveRigidBody(t,e){t.forEachActiveRigidBodyHandle((t=>{e(this.get(t))}))}getAll(){return this.map.getAll()}}class Xy{constructor(t){this.raw=t||new Xh}free(){this.raw&&this.raw.free(),this.raw=void 0}get dt(){return this.raw.dt}get contact_erp(){return this.raw.contact_erp}get lengthUnit(){return this.raw.lengthUnit}get normalizedAllowedLinearError(){return this.raw.normalizedAllowedLinearError}get normalizedPredictionDistance(){return this.raw.normalizedPredictionDistance}get numSolverIterations(){return this.raw.numSolverIterations}get numAdditionalFrictionIterations(){return this.raw.numAdditionalFrictionIterations}get numInternalPgsIterations(){return this.raw.numInternalPgsIterations}get minIslandSize(){return this.raw.minIslandSize}get maxCcdSubsteps(){return this.raw.maxCcdSubsteps}set dt(t){this.raw.dt=t}set contact_natural_frequency(t){this.raw.contact_natural_frequency=t}set lengthUnit(t){this.raw.lengthUnit=t}set normalizedAllowedLinearError(t){this.raw.normalizedAllowedLinearError=t}set normalizedPredictionDistance(t){this.raw.normalizedPredictionDistance=t}set numSolverIterations(t){this.raw.numSolverIterations=t}set numAdditionalFrictionIterations(t){this.raw.numAdditionalFrictionIterations=t}set numInternalPgsIterations(t){this.raw.numInternalPgsIterations=t}set minIslandSize(t){this.raw.minIslandSize=t}set maxCcdSubsteps(t){this.raw.maxCcdSubsteps=t}switchToStandardPgsSolver(){this.raw.switchToStandardPgsSolver()}switchToSmallStepsPgsSolver(){this.raw.switchToSmallStepsPgsSolver()}switchToSmallStepsPgsSolverWithoutWarmstart(){this.raw.switchToSmallStepsPgsSolverWithoutWarmstart()}}!function(t){t[t.Revolute=0]="Revolute",t[t.Fixed=1]="Fixed",t[t.Prismatic=2]="Prismatic",t[t.Rope=3]="Rope",t[t.Spring=4]="Spring",t[t.Spherical=5]="Spherical",t[t.Generic=6]="Generic"}(yy||(yy={})),function(t){t[t.AccelerationBased=0]="AccelerationBased",t[t.ForceBased=1]="ForceBased"}(xy||(xy={})),function(t){t[t.LinX=1]="LinX",t[t.LinY=2]="LinY",t[t.LinZ=4]="LinZ",t[t.AngX=8]="AngX",t[t.AngY=16]="AngY",t[t.AngZ=32]="AngZ"}(Sy||(Sy={}));class qy{constructor(t,e,i){this.rawSet=t,this.bodySet=e,this.handle=i}static newTyped(t,e,i){switch(t.jointType(i)){case _h.Revolute:return new Qy(t,e,i);case _h.Prismatic:return new $y(t,e,i);case _h.Fixed:return new Jy(t,e,i);case _h.Spring:return new Zy(t,e,i);case _h.Rope:return new Ky(t,e,i);case _h.Spherical:return new ex(t,e,i);case _h.Generic:return new tx(t,e,i);default:return new qy(t,e,i)}}finalizeDeserialization(t){this.bodySet=t}isValid(){return this.rawSet.contains(this.handle)}body1(){return this.bodySet.get(this.rawSet.jointBodyHandle1(this.handle))}body2(){return this.bodySet.get(this.rawSet.jointBodyHandle2(this.handle))}type(){return this.rawSet.jointType(this.handle)}frameX1(){return By.fromRaw(this.rawSet.jointFrameX1(this.handle))}frameX2(){return By.fromRaw(this.rawSet.jointFrameX2(this.handle))}anchor1(){return Oy.fromRaw(this.rawSet.jointAnchor1(this.handle))}anchor2(){return Oy.fromRaw(this.rawSet.jointAnchor2(this.handle))}setAnchor1(t){const e=Oy.intoRaw(t);this.rawSet.jointSetAnchor1(this.handle,e),e.free()}setAnchor2(t){const e=Oy.intoRaw(t);this.rawSet.jointSetAnchor2(this.handle,e),e.free()}setContactsEnabled(t){this.rawSet.jointSetContactsEnabled(this.handle,t)}contactsEnabled(){return this.rawSet.jointContactsEnabled(this.handle)}}class Yy extends qy{limitsEnabled(){return this.rawSet.jointLimitsEnabled(this.handle,this.rawAxis())}limitsMin(){return this.rawSet.jointLimitsMin(this.handle,this.rawAxis())}limitsMax(){return this.rawSet.jointLimitsMax(this.handle,this.rawAxis())}setLimits(t,e){this.rawSet.jointSetLimits(this.handle,this.rawAxis(),t,e)}configureMotorModel(t){this.rawSet.jointConfigureMotorModel(this.handle,this.rawAxis(),t)}configureMotorVelocity(t,e){this.rawSet.jointConfigureMotorVelocity(this.handle,this.rawAxis(),t,e)}configureMotorPosition(t,e,i){this.rawSet.jointConfigureMotorPosition(this.handle,this.rawAxis(),t,e,i)}configureMotor(t,e,i,r){this.rawSet.jointConfigureMotor(this.handle,this.rawAxis(),t,e,i,r)}}class Jy extends qy{}class Ky extends qy{}class Zy extends qy{}class $y extends Yy{rawAxis(){return ph.LinX}}class Qy extends Yy{rawAxis(){return ph.AngX}}class tx extends qy{}class ex extends qy{}class ix{free(){this.raw&&this.raw.free(),this.raw=void 0,this.map&&this.map.clear(),this.map=void 0}constructor(t){this.raw=t||new jh,this.map=new jy,t&&t.forEachJointHandle((e=>{this.map.set(e,qy.newTyped(t,null,e))}))}finalizeDeserialization(t){this.map.forEach((e=>e.finalizeDeserialization(t)))}createJoint(t,e,i,r,n){const a=e.intoRaw(),s=this.raw.createJoint(a,i,r,n);a.free();let o=qy.newTyped(this.raw,t,s);return this.map.set(s,o),o}remove(t,e){this.raw.remove(t,e),this.unmap(t)}forEachJointHandleAttachedToRigidBody(t,e){this.raw.forEachJointAttachedToRigidBody(t,e)}unmap(t){this.map.delete(t)}len(){return this.map.len()}contains(t){return null!=this.get(t)}get(t){return this.map.get(t)}forEach(t){this.map.forEach(t)}getAll(){return this.map.getAll()}}class rx{constructor(t,e){this.rawSet=t,this.handle=e}static newTyped(t,e){switch(t.jointType(e)){case _h.Revolute:return new ox(t,e);case _h.Prismatic:return new sx(t,e);case _h.Fixed:return new ax(t,e);case _h.Spherical:return new lx(t,e);default:return new rx(t,e)}}isValid(){return this.rawSet.contains(this.handle)}setContactsEnabled(t){this.rawSet.jointSetContactsEnabled(this.handle,t)}contactsEnabled(){return this.rawSet.jointContactsEnabled(this.handle)}}class nx extends rx{}class ax extends rx{}class sx extends nx{rawAxis(){return ph.LinX}}class ox extends nx{rawAxis(){return ph.AngX}}class lx extends rx{}class cx{free(){this.raw&&this.raw.free(),this.raw=void 0,this.map&&this.map.clear(),this.map=void 0}constructor(t){this.raw=t||new $h,this.map=new jy,t&&t.forEachJointHandle((t=>{this.map.set(t,rx.newTyped(this.raw,t))}))}createJoint(t,e,i,r){const n=t.intoRaw(),a=this.raw.createJoint(n,e,i,r);n.free();let s=rx.newTyped(this.raw,a);return this.map.set(a,s),s}remove(t,e){this.raw.remove(t,e),this.map.delete(t)}unmap(t){this.map.delete(t)}len(){return this.map.len()}contains(t){return null!=this.get(t)}get(t){return this.map.get(t)}forEach(t){this.map.forEach(t)}forEachJointHandleAttachedToRigidBody(t,e){this.raw.forEachJointAttachedToRigidBody(t,e)}getAll(){return this.map.getAll()}}!function(t){t[t.Average=0]="Average",t[t.Min=1]="Min",t[t.Multiply=2]="Multiply",t[t.Max=3]="Max"}(My||(My={}));class hx{free(){this.raw&&this.raw.free(),this.raw=void 0}constructor(t){this.raw=t||new bh}}class dx{free(){this.raw&&this.raw.free(),this.raw=void 0}constructor(t){this.raw=t||new Yh}forEachActiveRigidBodyHandle(t){this.raw.forEachActiveRigidBodyHandle(t)}}class ux{free(){this.raw&&this.raw.free(),this.raw=void 0}constructor(t){this.raw=t||new wh}}class px{free(){this.raw&&this.raw.free(),this.raw=void 0}constructor(t){this.raw=t||new td,this.tempManifold=new _x(null)}contactPairsWith(t,e){this.raw.contact_pairs_with(t,e)}intersectionPairsWith(t,e){this.raw.intersection_pairs_with(t,e)}contactPair(t,e,i){const r=this.raw.contact_pair(t,e);if(r){const e=r.collider1()!=t;let n;for(n=0;n<r.numContactManifolds();++n)this.tempManifold.raw=r.contactManifold(n),this.tempManifold.raw&&i(this.tempManifold,e),this.tempManifold.free();r.free()}}intersectionPair(t,e){return this.raw.intersection_pair(t,e)}}class _x{free(){this.raw&&this.raw.free(),this.raw=void 0}constructor(t){this.raw=t}normal(){return Oy.fromRaw(this.raw.normal())}localNormal1(){return Oy.fromRaw(this.raw.local_n1())}localNormal2(){return Oy.fromRaw(this.raw.local_n2())}subshape1(){return this.raw.subshape1()}subshape2(){return this.raw.subshape2()}numContacts(){return this.raw.num_contacts()}localContactPoint1(t){return Oy.fromRaw(this.raw.contact_local_p1(t))}localContactPoint2(t){return Oy.fromRaw(this.raw.contact_local_p2(t))}contactDist(t){return this.raw.contact_dist(t)}contactFid1(t){return this.raw.contact_fid1(t)}contactFid2(t){return this.raw.contact_fid2(t)}contactImpulse(t){return this.raw.contact_impulse(t)}contactTangentImpulseX(t){return this.raw.contact_tangent_impulse_x(t)}contactTangentImpulseY(t){return this.raw.contact_tangent_impulse_y(t)}numSolverContacts(){return this.raw.num_solver_contacts()}solverContactPoint(t){return Oy.fromRaw(this.raw.solver_contact_point(t))}solverContactDist(t){return this.raw.solver_contact_dist(t)}solverContactFriction(t){return this.raw.solver_contact_friction(t)}solverContactRestitution(t){return this.raw.solver_contact_restitution(t)}solverContactTangentVelocity(t){return Oy.fromRaw(this.raw.solver_contact_tangent_velocity(t))}}class mx{constructor(t,e,i,r,n){this.distance=t,this.point1=e,this.point2=i,this.normal1=r,this.normal2=n}static fromRaw(t){if(!t)return null;const e=new mx(t.distance(),Oy.fromRaw(t.point1()),Oy.fromRaw(t.point2()),Oy.fromRaw(t.normal1()),Oy.fromRaw(t.normal2()));return t.free(),e}}!function(t){t[t.Vertex=0]="Vertex",t[t.Edge=1]="Edge",t[t.Face=2]="Face",t[t.Unknown=3]="Unknown"}(Ey||(Ey={}));class fx{constructor(t,e){this.point=t,this.isInside=e}static fromRaw(t){if(!t)return null;const e=new fx(Oy.fromRaw(t.point()),t.isInside());return t.free(),e}}class gx{constructor(t,e,i,r,n){this.featureType=Ey.Unknown,this.featureId=void 0,this.collider=t,this.point=e,this.isInside=i,void 0!==n&&(this.featureId=n),void 0!==r&&(this.featureType=r)}static fromRaw(t,e){if(!e)return null;const i=new gx(t.get(e.colliderHandle()),Oy.fromRaw(e.point()),e.isInside(),e.featureType(),e.featureId());return e.free(),i}}class wx{constructor(t,e,i,r){this.featureType=Ey.Unknown,this.featureId=void 0,this.timeOfImpact=t,this.normal=e,void 0!==r&&(this.featureId=r),void 0!==i&&(this.featureType=i)}static fromRaw(t){if(!t)return null;const e=new wx(t.time_of_impact(),Oy.fromRaw(t.normal()),t.featureType(),t.featureId());return t.free(),e}}class vx{constructor(t,e,i,r,n){this.featureType=Ey.Unknown,this.featureId=void 0,this.collider=t,this.timeOfImpact=e,this.normal=i,void 0!==n&&(this.featureId=n),void 0!==r&&(this.featureType=r)}static fromRaw(t,e){if(!e)return null;const i=new vx(t.get(e.colliderHandle()),e.time_of_impact(),Oy.fromRaw(e.normal()),e.featureType(),e.featureId());return e.free(),i}}class bx{constructor(t,e){this.collider=t,this.timeOfImpact=e}static fromRaw(t,e){if(!e)return null;const i=new bx(t.get(e.colliderHandle()),e.timeOfImpact());return e.free(),i}}class yx{constructor(t,e,i,r,n){this.time_of_impact=t,this.witness1=e,this.witness2=i,this.normal1=r,this.normal2=n}static fromRaw(t,e){if(!e)return null;const i=new yx(e.time_of_impact(),Oy.fromRaw(e.witness1()),Oy.fromRaw(e.witness2()),Oy.fromRaw(e.normal1()),Oy.fromRaw(e.normal2()));return e.free(),i}}class xx extends yx{constructor(t,e,i,r,n,a){super(e,i,r,n,a),this.collider=t}static fromRaw(t,e){if(!e)return null;const i=new xx(t.get(e.colliderHandle()),e.time_of_impact(),Oy.fromRaw(e.witness1()),Oy.fromRaw(e.witness2()),Oy.fromRaw(e.normal1()),Oy.fromRaw(e.normal2()));return e.free(),i}}class Sx{static fromRaw(t,e){const i=t.coShapeType(e);let r,n,a,s,o,l,c;switch(i){case mh.Ball:return new Mx(t.coRadius(e));case mh.Cuboid:return r=t.coHalfExtents(e),new Tx(r.x,r.y,r.z);case mh.RoundCuboid:return r=t.coHalfExtents(e),n=t.coRoundRadius(e),new Ax(r.x,r.y,r.z,n);case mh.Capsule:return o=t.coHalfHeight(e),l=t.coRadius(e),new Rx(o,l);case mh.Segment:return a=t.coVertices(e),new Cx(Oy.new(a[0],a[1],a[2]),Oy.new(a[3],a[4],a[5]));case mh.Polyline:return a=t.coVertices(e),s=t.coIndices(e),new Lx(a,s);case mh.Triangle:return a=t.coVertices(e),new Px(Oy.new(a[0],a[1],a[2]),Oy.new(a[3],a[4],a[5]),Oy.new(a[6],a[7],a[8]));case mh.RoundTriangle:return a=t.coVertices(e),n=t.coRoundRadius(e),new Ix(Oy.new(a[0],a[1],a[2]),Oy.new(a[3],a[4],a[5]),Oy.new(a[6],a[7],a[8]),n);case mh.HalfSpace:return c=Oy.fromRaw(t.coHalfspaceNormal(e)),new Ex(c);case mh.Voxels:const h=t.coVoxelData(e),d=t.coVoxelPrimitiveGeometry(e),u=t.coVoxelSize(e);return new Dx(h,u,d);case mh.TriMesh:a=t.coVertices(e),s=t.coIndices(e);const p=t.coTriMeshFlags(e);return new Ux(a,s,p);case mh.HeightField:const _=t.coHeightfieldScale(e),m=t.coHeightfieldHeights(e),f=t.coHeightfieldNRows(e),g=t.coHeightfieldNCols(e),w=t.coHeightFieldFlags(e);return new Ox(f,g,m,_,w);case mh.ConvexPolyhedron:return a=t.coVertices(e),s=t.coIndices(e),new Nx(a,s);case mh.RoundConvexPolyhedron:return a=t.coVertices(e),s=t.coIndices(e),n=t.coRoundRadius(e),new Fx(a,s,n);case mh.Cylinder:return o=t.coHalfHeight(e),l=t.coRadius(e),new zx(o,l);case mh.RoundCylinder:return o=t.coHalfHeight(e),l=t.coRadius(e),n=t.coRoundRadius(e),new Bx(o,l,n);case mh.Cone:return o=t.coHalfHeight(e),l=t.coRadius(e),new kx(o,l);case mh.RoundCone:return o=t.coHalfHeight(e),l=t.coRadius(e),n=t.coRoundRadius(e),new Hx(o,l,n);default:throw new Error("unknown shape type: "+i)}}castShape(t,e,i,r,n,a,s,o,l,c){let h=Oy.intoRaw(t),d=By.intoRaw(e),u=Oy.intoRaw(i),p=Oy.intoRaw(n),_=By.intoRaw(a),m=Oy.intoRaw(s),f=this.intoRaw(),g=r.intoRaw(),w=yx.fromRaw(null,f.castShape(h,d,u,g,p,_,m,o,l,c));return h.free(),d.free(),u.free(),p.free(),_.free(),m.free(),f.free(),g.free(),w}intersectsShape(t,e,i,r,n){let a=Oy.intoRaw(t),s=By.intoRaw(e),o=Oy.intoRaw(r),l=By.intoRaw(n),c=this.intoRaw(),h=i.intoRaw(),d=c.intersectsShape(a,s,h,o,l);return a.free(),s.free(),o.free(),l.free(),c.free(),h.free(),d}contactShape(t,e,i,r,n,a){let s=Oy.intoRaw(t),o=By.intoRaw(e),l=Oy.intoRaw(r),c=By.intoRaw(n),h=this.intoRaw(),d=i.intoRaw(),u=mx.fromRaw(h.contactShape(s,o,d,l,c,a));return s.free(),o.free(),l.free(),c.free(),h.free(),d.free(),u}containsPoint(t,e,i){let r=Oy.intoRaw(t),n=By.intoRaw(e),a=Oy.intoRaw(i),s=this.intoRaw(),o=s.containsPoint(r,n,a);return r.free(),n.free(),a.free(),s.free(),o}projectPoint(t,e,i,r){let n=Oy.intoRaw(t),a=By.intoRaw(e),s=Oy.intoRaw(i),o=this.intoRaw(),l=fx.fromRaw(o.projectPoint(n,a,s,r));return n.free(),a.free(),s.free(),o.free(),l}intersectsRay(t,e,i,r){let n=Oy.intoRaw(e),a=By.intoRaw(i),s=Oy.intoRaw(t.origin),o=Oy.intoRaw(t.dir),l=this.intoRaw(),c=l.intersectsRay(n,a,s,o,r);return n.free(),a.free(),s.free(),o.free(),l.free(),c}castRay(t,e,i,r,n){let a=Oy.intoRaw(e),s=By.intoRaw(i),o=Oy.intoRaw(t.origin),l=Oy.intoRaw(t.dir),c=this.intoRaw(),h=c.castRay(a,s,o,l,r,n);return a.free(),s.free(),o.free(),l.free(),c.free(),h}castRayAndGetNormal(t,e,i,r,n){let a=Oy.intoRaw(e),s=By.intoRaw(i),o=Oy.intoRaw(t.origin),l=Oy.intoRaw(t.dir),c=this.intoRaw(),h=wx.fromRaw(c.castRayAndGetNormal(a,s,o,l,r,n));return a.free(),s.free(),o.free(),l.free(),c.free(),h}}!function(t){t[t.Ball=0]="Ball",t[t.Cuboid=1]="Cuboid",t[t.Capsule=2]="Capsule",t[t.Segment=3]="Segment",t[t.Polyline=4]="Polyline",t[t.Triangle=5]="Triangle",t[t.TriMesh=6]="TriMesh",t[t.HeightField=7]="HeightField",t[t.ConvexPolyhedron=9]="ConvexPolyhedron",t[t.Cylinder=10]="Cylinder",t[t.Cone=11]="Cone",t[t.RoundCuboid=12]="RoundCuboid",t[t.RoundTriangle=13]="RoundTriangle",t[t.RoundCylinder=14]="RoundCylinder",t[t.RoundCone=15]="RoundCone",t[t.RoundConvexPolyhedron=16]="RoundConvexPolyhedron",t[t.HalfSpace=17]="HalfSpace",t[t.Voxels=18]="Voxels"}(Ty||(Ty={})),function(t){t[t.FIX_INTERNAL_EDGES=1]="FIX_INTERNAL_EDGES"}(Ay||(Ay={})),function(t){t[t.DELETE_BAD_TOPOLOGY_TRIANGLES=4]="DELETE_BAD_TOPOLOGY_TRIANGLES",t[t.ORIENTED=8]="ORIENTED",t[t.MERGE_DUPLICATE_VERTICES=16]="MERGE_DUPLICATE_VERTICES",t[t.DELETE_DEGENERATE_TRIANGLES=32]="DELETE_DEGENERATE_TRIANGLES",t[t.DELETE_DUPLICATE_TRIANGLES=64]="DELETE_DUPLICATE_TRIANGLES",t[t.FIX_INTERNAL_EDGES=144]="FIX_INTERNAL_EDGES"}(Ry||(Ry={}));class Mx extends Sx{constructor(t){super(),this.type=Ty.Ball,this.radius=t}intoRaw(){return Td.ball(this.radius)}}class Ex extends Sx{constructor(t){super(),this.type=Ty.HalfSpace,this.normal=t}intoRaw(){let t=Oy.intoRaw(this.normal),e=Td.halfspace(t);return t.free(),e}}class Tx extends Sx{constructor(t,e,i){super(),this.type=Ty.Cuboid,this.halfExtents=Oy.new(t,e,i)}intoRaw(){return Td.cuboid(this.halfExtents.x,this.halfExtents.y,this.halfExtents.z)}}class Ax extends Sx{constructor(t,e,i,r){super(),this.type=Ty.RoundCuboid,this.halfExtents=Oy.new(t,e,i),this.borderRadius=r}intoRaw(){return Td.roundCuboid(this.halfExtents.x,this.halfExtents.y,this.halfExtents.z,this.borderRadius)}}class Rx extends Sx{constructor(t,e){super(),this.type=Ty.Capsule,this.halfHeight=t,this.radius=e}intoRaw(){return Td.capsule(this.halfHeight,this.radius)}}class Cx extends Sx{constructor(t,e){super(),this.type=Ty.Segment,this.a=t,this.b=e}intoRaw(){let t=Oy.intoRaw(this.a),e=Oy.intoRaw(this.b),i=Td.segment(t,e);return t.free(),e.free(),i}}class Px extends Sx{constructor(t,e,i){super(),this.type=Ty.Triangle,this.a=t,this.b=e,this.c=i}intoRaw(){let t=Oy.intoRaw(this.a),e=Oy.intoRaw(this.b),i=Oy.intoRaw(this.c),r=Td.triangle(t,e,i);return t.free(),e.free(),i.free(),r}}class Ix extends Sx{constructor(t,e,i,r){super(),this.type=Ty.RoundTriangle,this.a=t,this.b=e,this.c=i,this.borderRadius=r}intoRaw(){let t=Oy.intoRaw(this.a),e=Oy.intoRaw(this.b),i=Oy.intoRaw(this.c),r=Td.roundTriangle(t,e,i,this.borderRadius);return t.free(),e.free(),i.free(),r}}class Lx extends Sx{constructor(t,e){super(),this.type=Ty.Polyline,this.vertices=t,this.indices=null!=e?e:new Uint32Array(0)}intoRaw(){return Td.polyline(this.vertices,this.indices)}}class Dx extends Sx{constructor(t,e,i){super(),this.type=Ty.Voxels,this.data=t,this.voxelSize=e,this.primitiveGeometry=void 0!==i?i:fh.PseudoCube}intoRaw(){let t,e=Oy.intoRaw(this.voxelSize);return t=this.data instanceof Int32Array?Td.voxels(this.primitiveGeometry,e,this.data):Td.voxelsFromPoints(this.primitiveGeometry,e,this.data),e.free(),t}}class Ux extends Sx{constructor(t,e,i){super(),this.type=Ty.TriMesh,this.vertices=t,this.indices=e,this.flags=i}intoRaw(){return Td.trimesh(this.vertices,this.indices,this.flags)}}class Nx extends Sx{constructor(t,e){super(),this.type=Ty.ConvexPolyhedron,this.vertices=t,this.indices=e}intoRaw(){return this.indices?Td.convexMesh(this.vertices,this.indices):Td.convexHull(this.vertices)}}class Fx extends Sx{constructor(t,e,i){super(),this.type=Ty.RoundConvexPolyhedron,this.vertices=t,this.indices=e,this.borderRadius=i}intoRaw(){return this.indices?Td.roundConvexMesh(this.vertices,this.indices,this.borderRadius):Td.roundConvexHull(this.vertices,this.borderRadius)}}class Ox extends Sx{constructor(t,e,i,r,n){super(),this.type=Ty.HeightField,this.nrows=t,this.ncols=e,this.heights=i,this.scale=r,this.flags=n}intoRaw(){let t=Oy.intoRaw(this.scale),e=Td.heightfield(this.nrows,this.ncols,this.heights,t,this.flags);return t.free(),e}}class zx extends Sx{constructor(t,e){super(),this.type=Ty.Cylinder,this.halfHeight=t,this.radius=e}intoRaw(){return Td.cylinder(this.halfHeight,this.radius)}}class Bx extends Sx{constructor(t,e,i){super(),this.type=Ty.RoundCylinder,this.borderRadius=i,this.halfHeight=t,this.radius=e}intoRaw(){return Td.roundCylinder(this.halfHeight,this.radius,this.borderRadius)}}class kx extends Sx{constructor(t,e){super(),this.type=Ty.Cone,this.halfHeight=t,this.radius=e}intoRaw(){return Td.cone(this.halfHeight,this.radius)}}class Hx extends Sx{constructor(t,e,i){super(),this.type=Ty.RoundCone,this.halfHeight=t,this.radius=e,this.borderRadius=i}intoRaw(){return Td.roundCone(this.halfHeight,this.radius,this.borderRadius)}}class Vx{free(){this.raw&&this.raw.free(),this.raw=void 0}constructor(t){this.raw=t||new id}step(t,e,i,r,n,a,s,o,l,c,h,d){let u=Oy.intoRaw(t);h?this.raw.stepWithEvents(u,e.raw,i.raw,r.raw,n.raw,a.raw,s.raw,o.raw,l.raw,c.raw,h.raw,d,d?d.filterContactPair:null,d?d.filterIntersectionPair:null):this.raw.step(u,e.raw,i.raw,r.raw,n.raw,a.raw,s.raw,o.raw,l.raw,c.raw),u.free()}}!function(t){t[t.EXCLUDE_FIXED=1]="EXCLUDE_FIXED",t[t.EXCLUDE_KINEMATIC=2]="EXCLUDE_KINEMATIC",t[t.EXCLUDE_DYNAMIC=4]="EXCLUDE_DYNAMIC",t[t.EXCLUDE_SENSORS=8]="EXCLUDE_SENSORS",t[t.EXCLUDE_SOLIDS=16]="EXCLUDE_SOLIDS",t[t.ONLY_DYNAMIC=3]="ONLY_DYNAMIC",t[t.ONLY_KINEMATIC=5]="ONLY_KINEMATIC",t[t.ONLY_FIXED=6]="ONLY_FIXED"}(Cy||(Cy={}));class Gx{free(){this.raw&&this.raw.free(),this.raw=void 0}constructor(t){this.raw=t||new hd}update(t){this.raw.update(t.raw)}castRay(t,e,i,r,n,a,s,o,l,c){let h=Oy.intoRaw(i.origin),d=Oy.intoRaw(i.dir),u=bx.fromRaw(e,this.raw.castRay(t.raw,e.raw,h,d,r,n,a,s,o,l,c));return h.free(),d.free(),u}castRayAndGetNormal(t,e,i,r,n,a,s,o,l,c){let h=Oy.intoRaw(i.origin),d=Oy.intoRaw(i.dir),u=vx.fromRaw(e,this.raw.castRayAndGetNormal(t.raw,e.raw,h,d,r,n,a,s,o,l,c));return h.free(),d.free(),u}intersectionsWithRay(t,e,i,r,n,a,s,o,l,c,h){let d=Oy.intoRaw(i.origin),u=Oy.intoRaw(i.dir);this.raw.intersectionsWithRay(t.raw,e.raw,d,u,r,n,(t=>a(vx.fromRaw(e,t))),s,o,l,c,h),d.free(),u.free()}intersectionWithShape(t,e,i,r,n,a,s,o,l,c){let h=Oy.intoRaw(i),d=By.intoRaw(r),u=n.intoRaw(),p=this.raw.intersectionWithShape(t.raw,e.raw,h,d,u,a,s,o,l,c);return h.free(),d.free(),u.free(),p}projectPoint(t,e,i,r,n,a,s,o,l){let c=Oy.intoRaw(i),h=gx.fromRaw(e,this.raw.projectPoint(t.raw,e.raw,c,r,n,a,s,o,l));return c.free(),h}projectPointAndGetFeature(t,e,i,r,n,a,s,o){let l=Oy.intoRaw(i),c=gx.fromRaw(e,this.raw.projectPointAndGetFeature(t.raw,e.raw,l,r,n,a,s,o));return l.free(),c}intersectionsWithPoint(t,e,i,r,n,a,s,o,l){let c=Oy.intoRaw(i);this.raw.intersectionsWithPoint(t.raw,e.raw,c,r,n,a,s,o,l),c.free()}castShape(t,e,i,r,n,a,s,o,l,c,h,d,u,p){let _=Oy.intoRaw(i),m=By.intoRaw(r),f=Oy.intoRaw(n),g=a.intoRaw(),w=xx.fromRaw(e,this.raw.castShape(t.raw,e.raw,_,m,f,g,s,o,l,c,h,d,u,p));return _.free(),m.free(),f.free(),g.free(),w}intersectionsWithShape(t,e,i,r,n,a,s,o,l,c,h){let d=Oy.intoRaw(i),u=By.intoRaw(r),p=n.intoRaw();this.raw.intersectionsWithShape(t.raw,e.raw,d,u,p,a,s,o,l,c,h),d.free(),u.free(),p.free()}collidersWithAabbIntersectingAabb(t,e,i){let r=Oy.intoRaw(t),n=Oy.intoRaw(e);this.raw.collidersWithAabbIntersectingAabb(r,n,i),r.free(),n.free()}}class jx{free(){this.raw&&this.raw.free(),this.raw=void 0}constructor(t){this.raw=t||new Md}serializeAll(t,e,i,r,n,a,s,o,l){let c=Oy.intoRaw(t);const h=this.raw.serializeAll(c,e.raw,i.raw,r.raw,n.raw,a.raw,s.raw,o.raw,l.raw);return c.free(),h}deserializeAll(t){return Zx.fromRaw(this.raw.deserializeAll(t))}}class Wx{constructor(t,e){this.vertices=t,this.colors=e}}class Xx{free(){this.raw&&this.raw.free(),this.raw=void 0,this.vertices=void 0,this.colors=void 0}constructor(t){this.raw=t||new Uh}render(t,e,i,r,n){this.raw.render(t.raw,e.raw,i.raw,r.raw,n.raw),this.vertices=this.raw.vertices(),this.colors=this.raw.colors()}}class qx{}class Yx{constructor(t,e,i,r,n){this.params=e,this.bodies=i,this.colliders=r,this.queries=n,this.raw=new Kh(t),this.rawCharacterCollision=new xh,this._applyImpulsesToDynamicBodies=!1,this._characterMass=null}free(){this.raw&&(this.raw.free(),this.rawCharacterCollision.free()),this.raw=void 0,this.rawCharacterCollision=void 0}up(){return this.raw.up()}setUp(t){let e=Oy.intoRaw(t);return this.raw.setUp(e)}applyImpulsesToDynamicBodies(){return this._applyImpulsesToDynamicBodies}setApplyImpulsesToDynamicBodies(t){this._applyImpulsesToDynamicBodies=t}characterMass(){return this._characterMass}setCharacterMass(t){this._characterMass=t}offset(){return this.raw.offset()}setOffset(t){this.raw.setOffset(t)}normalNudgeFactor(){return this.raw.normalNudgeFactor()}setNormalNudgeFactor(t){this.raw.setNormalNudgeFactor(t)}slideEnabled(){return this.raw.slideEnabled()}setSlideEnabled(t){this.raw.setSlideEnabled(t)}autostepMaxHeight(){return this.raw.autostepMaxHeight()}autostepMinWidth(){return this.raw.autostepMinWidth()}autostepIncludesDynamicBodies(){return this.raw.autostepIncludesDynamicBodies()}autostepEnabled(){return this.raw.autostepEnabled()}enableAutostep(t,e,i){this.raw.enableAutostep(t,e,i)}disableAutostep(){return this.raw.disableAutostep()}maxSlopeClimbAngle(){return this.raw.maxSlopeClimbAngle()}setMaxSlopeClimbAngle(t){this.raw.setMaxSlopeClimbAngle(t)}minSlopeSlideAngle(){return this.raw.minSlopeSlideAngle()}setMinSlopeSlideAngle(t){this.raw.setMinSlopeSlideAngle(t)}snapToGroundDistance(){return this.raw.snapToGroundDistance()}enableSnapToGround(t){this.raw.enableSnapToGround(t)}disableSnapToGround(){this.raw.disableSnapToGround()}snapToGroundEnabled(){return this.raw.snapToGroundEnabled()}computeColliderMovement(t,e,i,r,n){let a=Oy.intoRaw(e);this.raw.computeColliderMovement(this.params.dt,this.bodies.raw,this.colliders.raw,this.queries.raw,t.handle,a,this._applyImpulsesToDynamicBodies,this._characterMass,i,r,this.colliders.castClosure(n)),a.free()}computedMovement(){return Oy.fromRaw(this.raw.computedMovement())}computedGrounded(){return this.raw.computedGrounded()}numComputedCollisions(){return this.raw.numComputedCollisions()}computedCollision(t,e){if(this.raw.computedCollision(t,this.rawCharacterCollision)){let t=this.rawCharacterCollision;return(e=null!=e?e:new qx).translationDeltaApplied=Oy.fromRaw(t.translationDeltaApplied()),e.translationDeltaRemaining=Oy.fromRaw(t.translationDeltaRemaining()),e.toi=t.toi(),e.witness1=Oy.fromRaw(t.worldWitness1()),e.witness2=Oy.fromRaw(t.worldWitness2()),e.normal1=Oy.fromRaw(t.worldNormal1()),e.normal2=Oy.fromRaw(t.worldNormal2()),e.collider=this.colliders.get(t.handle()),e}return null}}!function(t){t[t.None=0]="None",t[t.LinX=1]="LinX",t[t.LinY=2]="LinY",t[t.LinZ=4]="LinZ",t[t.AngX=8]="AngX",t[t.AngY=16]="AngY",t[t.AngZ=32]="AngZ",t[t.AllLin=7]="AllLin",t[t.AllAng=56]="AllAng",t[t.All=63]="All"}(Py||(Py={}));class Jx{constructor(t,e,i,r,n,a){this.params=t,this.bodies=e,this.raw=new nd(i,r,n,a)}free(){this.raw&&this.raw.free(),this.raw=void 0}setKp(t,e){this.raw.set_kp(t,e)}setKi(t,e){this.raw.set_kp(t,e)}setKd(t,e){this.raw.set_kp(t,e)}setAxes(t){this.raw.set_axes_mask(t)}resetIntegrals(){this.raw.reset_integrals()}applyLinearCorrection(t,e,i){let r=Oy.intoRaw(e),n=Oy.intoRaw(i);this.raw.apply_linear_correction(this.params.dt,this.bodies.raw,t.handle,r,n),r.free(),n.free()}applyAngularCorrection(t,e,i){let r=By.intoRaw(e),n=Oy.intoRaw(i);this.raw.apply_angular_correction(this.params.dt,this.bodies.raw,t.handle,r,n),r.free(),n.free()}linearCorrection(t,e,i){let r=Oy.intoRaw(e),n=Oy.intoRaw(i),a=this.raw.linear_correction(this.params.dt,this.bodies.raw,t.handle,r,n);return r.free(),n.free(),Oy.fromRaw(a)}angularCorrection(t,e,i){let r=By.intoRaw(e),n=Oy.intoRaw(i),a=this.raw.angular_correction(this.params.dt,this.bodies.raw,t.handle,r,n);return r.free(),n.free(),Oy.fromRaw(a)}}class Kx{constructor(t,e,i,r){this.raw=new zh(t.handle),this.bodies=e,this.colliders=i,this.queries=r,this._chassis=t}free(){this.raw&&this.raw.free(),this.raw=void 0}updateVehicle(t,e,i,r){this.raw.update_vehicle(t,this.bodies.raw,this.colliders.raw,this.queries.raw,e,i,this.colliders.castClosure(r))}currentVehicleSpeed(){return this.raw.current_vehicle_speed()}chassis(){return this._chassis}get indexUpAxis(){return this.raw.index_up_axis()}set indexUpAxis(t){this.raw.set_index_up_axis(t)}get indexForwardAxis(){return this.raw.index_forward_axis()}set setIndexForwardAxis(t){this.raw.set_index_forward_axis(t)}addWheel(t,e,i,r,n){let a=Oy.intoRaw(t),s=Oy.intoRaw(e),o=Oy.intoRaw(i);this.raw.add_wheel(a,s,o,r,n),a.free(),s.free(),o.free()}numWheels(){return this.raw.num_wheels()}wheelChassisConnectionPointCs(t){return Oy.fromRaw(this.raw.wheel_chassis_connection_point_cs(t))}setWheelChassisConnectionPointCs(t,e){let i=Oy.intoRaw(e);this.raw.set_wheel_chassis_connection_point_cs(t,i),i.free()}wheelSuspensionRestLength(t){return this.raw.wheel_suspension_rest_length(t)}setWheelSuspensionRestLength(t,e){this.raw.set_wheel_suspension_rest_length(t,e)}wheelMaxSuspensionTravel(t){return this.raw.wheel_max_suspension_travel(t)}setWheelMaxSuspensionTravel(t,e){this.raw.set_wheel_max_suspension_travel(t,e)}wheelRadius(t){return this.raw.wheel_radius(t)}setWheelRadius(t,e){this.raw.set_wheel_radius(t,e)}wheelSuspensionStiffness(t){return this.raw.wheel_suspension_stiffness(t)}setWheelSuspensionStiffness(t,e){this.raw.set_wheel_suspension_stiffness(t,e)}wheelSuspensionCompression(t){return this.raw.wheel_suspension_compression(t)}setWheelSuspensionCompression(t,e){this.raw.set_wheel_suspension_compression(t,e)}wheelSuspensionRelaxation(t){return this.raw.wheel_suspension_relaxation(t)}setWheelSuspensionRelaxation(t,e){this.raw.set_wheel_suspension_relaxation(t,e)}wheelMaxSuspensionForce(t){return this.raw.wheel_max_suspension_force(t)}setWheelMaxSuspensionForce(t,e){this.raw.set_wheel_max_suspension_force(t,e)}wheelBrake(t){return this.raw.wheel_brake(t)}setWheelBrake(t,e){this.raw.set_wheel_brake(t,e)}wheelSteering(t){return this.raw.wheel_steering(t)}setWheelSteering(t,e){this.raw.set_wheel_steering(t,e)}wheelEngineForce(t){return this.raw.wheel_engine_force(t)}setWheelEngineForce(t,e){this.raw.set_wheel_engine_force(t,e)}wheelDirectionCs(t){return Oy.fromRaw(this.raw.wheel_direction_cs(t))}setWheelDirectionCs(t,e){let i=Oy.intoRaw(e);this.raw.set_wheel_direction_cs(t,i),i.free()}wheelAxleCs(t){return Oy.fromRaw(this.raw.wheel_axle_cs(t))}setWheelAxleCs(t,e){let i=Oy.intoRaw(e);this.raw.set_wheel_axle_cs(t,i),i.free()}wheelFrictionSlip(t){return this.raw.wheel_friction_slip(t)}setWheelFrictionSlip(t,e){this.raw.set_wheel_friction_slip(t,e)}wheelSideFrictionStiffness(t){return this.raw.wheel_side_friction_stiffness(t)}setWheelSideFrictionStiffness(t,e){this.raw.set_wheel_side_friction_stiffness(t,e)}wheelRotation(t){return this.raw.wheel_rotation(t)}wheelForwardImpulse(t){return this.raw.wheel_forward_impulse(t)}wheelSideImpulse(t){return this.raw.wheel_side_impulse(t)}wheelSuspensionForce(t){return this.raw.wheel_suspension_force(t)}wheelContactNormal(t){return Oy.fromRaw(this.raw.wheel_contact_normal_ws(t))}wheelContactPoint(t){return Oy.fromRaw(this.raw.wheel_contact_point_ws(t))}wheelSuspensionLength(t){return this.raw.wheel_suspension_length(t)}wheelHardPoint(t){return Oy.fromRaw(this.raw.wheel_hard_point_ws(t))}wheelIsInContact(t){return this.raw.wheel_is_in_contact(t)}wheelGroundObject(t){return this.colliders.get(this.raw.wheel_ground_object(t))}}class Zx{free(){this.integrationParameters.free(),this.islands.free(),this.broadPhase.free(),this.narrowPhase.free(),this.bodies.free(),this.colliders.free(),this.impulseJoints.free(),this.multibodyJoints.free(),this.ccdSolver.free(),this.queryPipeline.free(),this.physicsPipeline.free(),this.serializationPipeline.free(),this.debugRenderPipeline.free(),this.characterControllers.forEach((t=>t.free())),this.pidControllers.forEach((t=>t.free())),this.vehicleControllers.forEach((t=>t.free())),this.integrationParameters=void 0,this.islands=void 0,this.broadPhase=void 0,this.narrowPhase=void 0,this.bodies=void 0,this.colliders=void 0,this.ccdSolver=void 0,this.impulseJoints=void 0,this.multibodyJoints=void 0,this.queryPipeline=void 0,this.physicsPipeline=void 0,this.serializationPipeline=void 0,this.debugRenderPipeline=void 0,this.characterControllers=void 0,this.pidControllers=void 0,this.vehicleControllers=void 0}constructor(t,e,i,r,n,a,s,o,l,c,h,d,u,p){this.gravity=t,this.integrationParameters=new Xy(e),this.islands=new dx(i),this.broadPhase=new ux(r),this.narrowPhase=new px(n),this.bodies=new Wy(a),this.colliders=new tS(s),this.impulseJoints=new ix(o),this.multibodyJoints=new cx(l),this.ccdSolver=new hx(c),this.queryPipeline=new Gx(h),this.physicsPipeline=new Vx(d),this.serializationPipeline=new jx(u),this.debugRenderPipeline=new Xx(p),this.characterControllers=new Set,this.pidControllers=new Set,this.vehicleControllers=new Set,this.impulseJoints.finalizeDeserialization(this.bodies),this.bodies.finalizeDeserialization(this.colliders),this.colliders.finalizeDeserialization(this.bodies)}static fromRaw(t){return t?new Zx(Oy.fromRaw(t.takeGravity()),t.takeIntegrationParameters(),t.takeIslandManager(),t.takeBroadPhase(),t.takeNarrowPhase(),t.takeBodies(),t.takeColliders(),t.takeImpulseJoints(),t.takeMultibodyJoints()):null}takeSnapshot(){return this.serializationPipeline.serializeAll(this.gravity,this.integrationParameters,this.islands,this.broadPhase,this.narrowPhase,this.bodies,this.colliders,this.impulseJoints,this.multibodyJoints)}static restoreSnapshot(t){return(new jx).deserializeAll(t)}debugRender(){return this.debugRenderPipeline.render(this.bodies,this.colliders,this.impulseJoints,this.multibodyJoints,this.narrowPhase),new Wx(this.debugRenderPipeline.vertices,this.debugRenderPipeline.colors)}step(t,e){this.physicsPipeline.step(this.gravity,this.integrationParameters,this.islands,this.broadPhase,this.narrowPhase,this.bodies,this.colliders,this.impulseJoints,this.multibodyJoints,this.ccdSolver,t,e),this.queryPipeline.update(this.colliders)}propagateModifiedBodyPositionsToColliders(){this.bodies.raw.propagateModifiedBodyPositionsToColliders(this.colliders.raw)}updateSceneQueries(){this.propagateModifiedBodyPositionsToColliders(),this.queryPipeline.update(this.colliders)}get timestep(){return this.integrationParameters.dt}set timestep(t){this.integrationParameters.dt=t}get lengthUnit(){return this.integrationParameters.lengthUnit}set lengthUnit(t){this.integrationParameters.lengthUnit=t}get numSolverIterations(){return this.integrationParameters.numSolverIterations}set numSolverIterations(t){this.integrationParameters.numSolverIterations=t}get numAdditionalFrictionIterations(){return this.integrationParameters.numAdditionalFrictionIterations}set numAdditionalFrictionIterations(t){this.integrationParameters.numAdditionalFrictionIterations=t}get numInternalPgsIterations(){return this.integrationParameters.numInternalPgsIterations}set numInternalPgsIterations(t){this.integrationParameters.numInternalPgsIterations=t}switchToStandardPgsSolver(){this.integrationParameters.switchToStandardPgsSolver()}switchToSmallStepsPgsSolver(){this.integrationParameters.switchToSmallStepsPgsSolver()}switchToSmallStepsPgsSolverWithoutWarmstart(){this.integrationParameters.switchToSmallStepsPgsSolverWithoutWarmstart()}createRigidBody(t){return this.bodies.createRigidBody(this.colliders,t)}createCharacterController(t){let e=new Yx(t,this.integrationParameters,this.bodies,this.colliders,this.queryPipeline);return this.characterControllers.add(e),e}removeCharacterController(t){this.characterControllers.delete(t),t.free()}createPidController(t,e,i,r){let n=new Jx(this.integrationParameters,this.bodies,t,e,i,r);return this.pidControllers.add(n),n}removePidController(t){this.pidControllers.delete(t),t.free()}createVehicleController(t){let e=new Kx(t,this.bodies,this.colliders,this.queryPipeline);return this.vehicleControllers.add(e),e}removeVehicleController(t){this.vehicleControllers.delete(t),t.free()}createCollider(t,e){let i=e?e.handle:void 0;return this.colliders.createCollider(this.bodies,t,i)}createImpulseJoint(t,e,i,r){return this.impulseJoints.createJoint(this.bodies,t,e.handle,i.handle,r)}createMultibodyJoint(t,e,i,r){return this.multibodyJoints.createJoint(t,e.handle,i.handle,r)}getRigidBody(t){return this.bodies.get(t)}getCollider(t){return this.colliders.get(t)}getImpulseJoint(t){return this.impulseJoints.get(t)}getMultibodyJoint(t){return this.multibodyJoints.get(t)}removeRigidBody(t){this.bodies&&this.bodies.remove(t.handle,this.islands,this.colliders,this.impulseJoints,this.multibodyJoints)}removeCollider(t,e){this.colliders&&this.colliders.remove(t.handle,this.islands,this.bodies,e)}removeImpulseJoint(t,e){this.impulseJoints&&this.impulseJoints.remove(t.handle,e)}removeMultibodyJoint(t,e){this.impulseJoints&&this.multibodyJoints.remove(t.handle,e)}forEachCollider(t){this.colliders.forEach(t)}forEachRigidBody(t){this.bodies.forEach(t)}forEachActiveRigidBody(t){this.bodies.forEachActiveRigidBody(this.islands,t)}castRay(t,e,i,r,n,a,s,o){return this.queryPipeline.castRay(this.bodies,this.colliders,t,e,i,r,n,a?a.handle:null,s?s.handle:null,this.colliders.castClosure(o))}castRayAndGetNormal(t,e,i,r,n,a,s,o){return this.queryPipeline.castRayAndGetNormal(this.bodies,this.colliders,t,e,i,r,n,a?a.handle:null,s?s.handle:null,this.colliders.castClosure(o))}intersectionsWithRay(t,e,i,r,n,a,s,o,l){this.queryPipeline.intersectionsWithRay(this.bodies,this.colliders,t,e,i,r,n,a,s?s.handle:null,o?o.handle:null,this.colliders.castClosure(l))}intersectionWithShape(t,e,i,r,n,a,s,o){let l=this.queryPipeline.intersectionWithShape(this.bodies,this.colliders,t,e,i,r,n,a?a.handle:null,s?s.handle:null,this.colliders.castClosure(o));return null!=l?this.colliders.get(l):null}projectPoint(t,e,i,r,n,a,s){return this.queryPipeline.projectPoint(this.bodies,this.colliders,t,e,i,r,n?n.handle:null,a?a.handle:null,this.colliders.castClosure(s))}projectPointAndGetFeature(t,e,i,r,n,a){return this.queryPipeline.projectPointAndGetFeature(this.bodies,this.colliders,t,e,i,r?r.handle:null,n?n.handle:null,this.colliders.castClosure(a))}intersectionsWithPoint(t,e,i,r,n,a,s){this.queryPipeline.intersectionsWithPoint(this.bodies,this.colliders,t,this.colliders.castClosure(e),i,r,n?n.handle:null,a?a.handle:null,this.colliders.castClosure(s))}castShape(t,e,i,r,n,a,s,o,l,c,h,d){return this.queryPipeline.castShape(this.bodies,this.colliders,t,e,i,r,n,a,s,o,l,c?c.handle:null,h?h.handle:null,this.colliders.castClosure(d))}intersectionsWithShape(t,e,i,r,n,a,s,o,l){this.queryPipeline.intersectionsWithShape(this.bodies,this.colliders,t,e,i,this.colliders.castClosure(r),n,a,s?s.handle:null,o?o.handle:null,this.colliders.castClosure(l))}collidersWithAabbIntersectingAabb(t,e,i){this.queryPipeline.collidersWithAabbIntersectingAabb(t,e,this.colliders.castClosure(i))}contactPairsWith(t,e){this.narrowPhase.contactPairsWith(t.handle,this.colliders.castClosure(e))}intersectionPairsWith(t,e){this.narrowPhase.intersectionPairsWith(t.handle,this.colliders.castClosure(e))}contactPair(t,e,i){this.narrowPhase.contactPair(t.handle,e.handle,i)}intersectionPair(t,e){return this.narrowPhase.intersectionPair(t.handle,e.handle)}}!function(t){t[t.NONE=0]="NONE",t[t.COLLISION_EVENTS=1]="COLLISION_EVENTS",t[t.CONTACT_FORCE_EVENTS=2]="CONTACT_FORCE_EVENTS"}(Iy||(Iy={})),function(t){t[t.NONE=0]="NONE",t[t.FILTER_CONTACT_PAIRS=1]="FILTER_CONTACT_PAIRS",t[t.FILTER_INTERSECTION_PAIRS=2]="FILTER_INTERSECTION_PAIRS"}(Ly||(Ly={})),function(t){t[t.EMPTY=0]="EMPTY",t[t.COMPUTE_IMPULSE=1]="COMPUTE_IMPULSE"}(Dy||(Dy={})),function(t){t[t.DYNAMIC_DYNAMIC=1]="DYNAMIC_DYNAMIC",t[t.DYNAMIC_KINEMATIC=12]="DYNAMIC_KINEMATIC",t[t.DYNAMIC_FIXED=2]="DYNAMIC_FIXED",t[t.KINEMATIC_KINEMATIC=52224]="KINEMATIC_KINEMATIC",t[t.KINEMATIC_FIXED=8704]="KINEMATIC_FIXED",t[t.FIXED_FIXED=32]="FIXED_FIXED",t[t.DEFAULT=15]="DEFAULT",t[t.ALL=60943]="ALL"}(Uy||(Uy={}));class $x{constructor(t,e,i,r){this.colliderSet=t,this.handle=e,this._parent=i,this._shape=r}finalizeDeserialization(t){null!=this.handle&&(this._parent=t.get(this.colliderSet.raw.coParent(this.handle)))}ensureShapeIsCached(){this._shape||(this._shape=Sx.fromRaw(this.colliderSet.raw,this.handle))}get shape(){return this.ensureShapeIsCached(),this._shape}isValid(){return this.colliderSet.raw.contains(this.handle)}translation(){return Oy.fromRaw(this.colliderSet.raw.coTranslation(this.handle))}rotation(){return By.fromRaw(this.colliderSet.raw.coRotation(this.handle))}isSensor(){return this.colliderSet.raw.coIsSensor(this.handle)}setSensor(t){this.colliderSet.raw.coSetSensor(this.handle,t)}setShape(t){let e=t.intoRaw();this.colliderSet.raw.coSetShape(this.handle,e),e.free(),this._shape=t}setEnabled(t){this.colliderSet.raw.coSetEnabled(this.handle,t)}isEnabled(){return this.colliderSet.raw.coIsEnabled(this.handle)}setRestitution(t){this.colliderSet.raw.coSetRestitution(this.handle,t)}setFriction(t){this.colliderSet.raw.coSetFriction(this.handle,t)}frictionCombineRule(){return this.colliderSet.raw.coFrictionCombineRule(this.handle)}setFrictionCombineRule(t){this.colliderSet.raw.coSetFrictionCombineRule(this.handle,t)}restitutionCombineRule(){return this.colliderSet.raw.coRestitutionCombineRule(this.handle)}setRestitutionCombineRule(t){this.colliderSet.raw.coSetRestitutionCombineRule(this.handle,t)}setCollisionGroups(t){this.colliderSet.raw.coSetCollisionGroups(this.handle,t)}setSolverGroups(t){this.colliderSet.raw.coSetSolverGroups(this.handle,t)}contactSkin(){return this.colliderSet.raw.coContactSkin(this.handle)}setContactSkin(t){return this.colliderSet.raw.coSetContactSkin(this.handle,t)}activeHooks(){return this.colliderSet.raw.coActiveHooks(this.handle)}setActiveHooks(t){this.colliderSet.raw.coSetActiveHooks(this.handle,t)}activeEvents(){return this.colliderSet.raw.coActiveEvents(this.handle)}setActiveEvents(t){this.colliderSet.raw.coSetActiveEvents(this.handle,t)}activeCollisionTypes(){return this.colliderSet.raw.coActiveCollisionTypes(this.handle)}setContactForceEventThreshold(t){return this.colliderSet.raw.coSetContactForceEventThreshold(this.handle,t)}contactForceEventThreshold(){return this.colliderSet.raw.coContactForceEventThreshold(this.handle)}setActiveCollisionTypes(t){this.colliderSet.raw.coSetActiveCollisionTypes(this.handle,t)}setDensity(t){this.colliderSet.raw.coSetDensity(this.handle,t)}setMass(t){this.colliderSet.raw.coSetMass(this.handle,t)}setMassProperties(t,e,i,r){let n=Oy.intoRaw(e),a=Oy.intoRaw(i),s=By.intoRaw(r);this.colliderSet.raw.coSetMassProperties(this.handle,t,n,a,s),n.free(),a.free(),s.free()}setTranslation(t){this.colliderSet.raw.coSetTranslation(this.handle,t.x,t.y,t.z)}setTranslationWrtParent(t){this.colliderSet.raw.coSetTranslationWrtParent(this.handle,t.x,t.y,t.z)}setRotation(t){this.colliderSet.raw.coSetRotation(this.handle,t.x,t.y,t.z,t.w)}setRotationWrtParent(t){this.colliderSet.raw.coSetRotationWrtParent(this.handle,t.x,t.y,t.z,t.w)}shapeType(){return this.colliderSet.raw.coShapeType(this.handle)}halfExtents(){return Oy.fromRaw(this.colliderSet.raw.coHalfExtents(this.handle))}setHalfExtents(t){const e=Oy.intoRaw(t);this.colliderSet.raw.coSetHalfExtents(this.handle,e)}radius(){return this.colliderSet.raw.coRadius(this.handle)}setRadius(t){this.colliderSet.raw.coSetRadius(this.handle,t)}roundRadius(){return this.colliderSet.raw.coRoundRadius(this.handle)}setRoundRadius(t){this.colliderSet.raw.coSetRoundRadius(this.handle,t)}halfHeight(){return this.colliderSet.raw.coHalfHeight(this.handle)}setHalfHeight(t){this.colliderSet.raw.coSetHalfHeight(this.handle,t)}setVoxel(t,e,i,r){this.colliderSet.raw.coSetVoxel(this.handle,t,e,i,r),this._shape=null}vertices(){return this.colliderSet.raw.coVertices(this.handle)}indices(){return this.colliderSet.raw.coIndices(this.handle)}heightfieldHeights(){return this.colliderSet.raw.coHeightfieldHeights(this.handle)}heightfieldScale(){let t=this.colliderSet.raw.coHeightfieldScale(this.handle);return Oy.fromRaw(t)}heightfieldNRows(){return this.colliderSet.raw.coHeightfieldNRows(this.handle)}heightfieldNCols(){return this.colliderSet.raw.coHeightfieldNCols(this.handle)}parent(){return this._parent}friction(){return this.colliderSet.raw.coFriction(this.handle)}restitution(){return this.colliderSet.raw.coRestitution(this.handle)}density(){return this.colliderSet.raw.coDensity(this.handle)}mass(){return this.colliderSet.raw.coMass(this.handle)}volume(){return this.colliderSet.raw.coVolume(this.handle)}collisionGroups(){return this.colliderSet.raw.coCollisionGroups(this.handle)}solverGroups(){return this.colliderSet.raw.coSolverGroups(this.handle)}containsPoint(t){let e=Oy.intoRaw(t),i=this.colliderSet.raw.coContainsPoint(this.handle,e);return e.free(),i}projectPoint(t,e){let i=Oy.intoRaw(t),r=fx.fromRaw(this.colliderSet.raw.coProjectPoint(this.handle,i,e));return i.free(),r}intersectsRay(t,e){let i=Oy.intoRaw(t.origin),r=Oy.intoRaw(t.dir),n=this.colliderSet.raw.coIntersectsRay(this.handle,i,r,e);return i.free(),r.free(),n}castShape(t,e,i,r,n,a,s,o){let l=Oy.intoRaw(t),c=Oy.intoRaw(i),h=By.intoRaw(r),d=Oy.intoRaw(n),u=e.intoRaw(),p=yx.fromRaw(this.colliderSet,this.colliderSet.raw.coCastShape(this.handle,l,u,c,h,d,a,s,o));return l.free(),c.free(),h.free(),d.free(),u.free(),p}castCollider(t,e,i,r,n,a){let s=Oy.intoRaw(t),o=Oy.intoRaw(i),l=xx.fromRaw(this.colliderSet,this.colliderSet.raw.coCastCollider(this.handle,s,e.handle,o,r,n,a));return s.free(),o.free(),l}intersectsShape(t,e,i){let r=Oy.intoRaw(e),n=By.intoRaw(i),a=t.intoRaw(),s=this.colliderSet.raw.coIntersectsShape(this.handle,a,r,n);return r.free(),n.free(),a.free(),s}contactShape(t,e,i,r){let n=Oy.intoRaw(e),a=By.intoRaw(i),s=t.intoRaw(),o=mx.fromRaw(this.colliderSet.raw.coContactShape(this.handle,s,n,a,r));return n.free(),a.free(),s.free(),o}contactCollider(t,e){return mx.fromRaw(this.colliderSet.raw.coContactCollider(this.handle,t.handle,e))}castRay(t,e,i){let r=Oy.intoRaw(t.origin),n=Oy.intoRaw(t.dir),a=this.colliderSet.raw.coCastRay(this.handle,r,n,e,i);return r.free(),n.free(),a}castRayAndGetNormal(t,e,i){let r=Oy.intoRaw(t.origin),n=Oy.intoRaw(t.dir),a=wx.fromRaw(this.colliderSet.raw.coCastRayAndGetNormal(this.handle,r,n,e,i));return r.free(),n.free(),a}}!function(t){t[t.Density=0]="Density",t[t.Mass=1]="Mass",t[t.MassProps=2]="MassProps"}(Ny||(Ny={}));class Qx{constructor(t){this.enabled=!0,this.shape=t,this.massPropsMode=Ny.Density,this.density=1,this.friction=.5,this.restitution=0,this.rotation=By.identity(),this.translation=Oy.zeros(),this.isSensor=!1,this.collisionGroups=4294967295,this.solverGroups=4294967295,this.frictionCombineRule=My.Average,this.restitutionCombineRule=My.Average,this.activeCollisionTypes=Uy.DEFAULT,this.activeEvents=Iy.NONE,this.activeHooks=Ly.NONE,this.mass=0,this.centerOfMass=Oy.zeros(),this.contactForceEventThreshold=0,this.contactSkin=0,this.principalAngularInertia=Oy.zeros(),this.angularInertiaLocalFrame=By.identity()}static ball(t){const e=new Mx(t);return new Qx(e)}static capsule(t,e){const i=new Rx(t,e);return new Qx(i)}static segment(t,e){const i=new Cx(t,e);return new Qx(i)}static triangle(t,e,i){const r=new Px(t,e,i);return new Qx(r)}static roundTriangle(t,e,i,r){const n=new Ix(t,e,i,r);return new Qx(n)}static polyline(t,e){const i=new Lx(t,e);return new Qx(i)}static voxels(t,e,i){const r=new Dx(t,e,i);return new Qx(r)}static trimesh(t,e,i){const r=new Ux(t,e,i);return new Qx(r)}static cuboid(t,e,i){const r=new Tx(t,e,i);return new Qx(r)}static roundCuboid(t,e,i,r){const n=new Ax(t,e,i,r);return new Qx(n)}static heightfield(t,e,i,r,n){const a=new Ox(t,e,i,r,n);return new Qx(a)}static cylinder(t,e){const i=new zx(t,e);return new Qx(i)}static roundCylinder(t,e,i){const r=new Bx(t,e,i);return new Qx(r)}static cone(t,e){const i=new kx(t,e);return new Qx(i)}static roundCone(t,e,i){const r=new Hx(t,e,i);return new Qx(r)}static convexHull(t){const e=new Nx(t,null);return new Qx(e)}static convexMesh(t,e){const i=new Nx(t,e);return new Qx(i)}static roundConvexHull(t,e){const i=new Fx(t,null,e);return new Qx(i)}static roundConvexMesh(t,e,i){const r=new Fx(t,e,i);return new Qx(r)}setTranslation(t,e,i){if("number"!=typeof t||"number"!=typeof e||"number"!=typeof i)throw TypeError("The translation components must be numbers.");return this.translation={x:t,y:e,z:i},this}setRotation(t){return By.copy(this.rotation,t),this}setSensor(t){return this.isSensor=t,this}setEnabled(t){return this.enabled=t,this}setContactSkin(t){return this.contactSkin=t,this}setDensity(t){return this.massPropsMode=Ny.Density,this.density=t,this}setMass(t){return this.massPropsMode=Ny.Mass,this.mass=t,this}setMassProperties(t,e,i,r){return this.massPropsMode=Ny.MassProps,this.mass=t,Oy.copy(this.centerOfMass,e),Oy.copy(this.principalAngularInertia,i),By.copy(this.angularInertiaLocalFrame,r),this}setRestitution(t){return this.restitution=t,this}setFriction(t){return this.friction=t,this}setFrictionCombineRule(t){return this.frictionCombineRule=t,this}setRestitutionCombineRule(t){return this.restitutionCombineRule=t,this}setCollisionGroups(t){return this.collisionGroups=t,this}setSolverGroups(t){return this.solverGroups=t,this}setActiveHooks(t){return this.activeHooks=t,this}setActiveEvents(t){return this.activeEvents=t,this}setActiveCollisionTypes(t){return this.activeCollisionTypes=t,this}setContactForceEventThreshold(t){return this.contactForceEventThreshold=t,this}}class tS{free(){this.raw&&this.raw.free(),this.raw=void 0,this.map&&this.map.clear(),this.map=void 0}constructor(t){this.raw=t||new Mh,this.map=new jy,t&&t.forEachColliderHandle((t=>{this.map.set(t,new $x(this,t,null))}))}castClosure(t){return e=>t?t(this.get(e)):void 0}finalizeDeserialization(t){this.map.forEach((e=>e.finalizeDeserialization(t)))}createCollider(t,e,i){let r=null!=i&&null!=i;if(r&&isNaN(i))throw Error("Cannot create a collider with a parent rigid-body handle that is not a number.");let n=e.shape.intoRaw(),a=Oy.intoRaw(e.translation),s=By.intoRaw(e.rotation),o=Oy.intoRaw(e.centerOfMass),l=Oy.intoRaw(e.principalAngularInertia),c=By.intoRaw(e.angularInertiaLocalFrame),h=this.raw.createCollider(e.enabled,n,a,s,e.massPropsMode,e.mass,o,l,c,e.density,e.friction,e.restitution,e.frictionCombineRule,e.restitutionCombineRule,e.isSensor,e.collisionGroups,e.solverGroups,e.activeCollisionTypes,e.activeHooks,e.activeEvents,e.contactForceEventThreshold,e.contactSkin,r,r?i:0,t.raw);n.free(),a.free(),s.free(),o.free(),l.free(),c.free();let d=r?t.get(i):null,u=new $x(this,h,d,e.shape);return this.map.set(h,u),u}remove(t,e,i,r){this.raw.remove(t,e.raw,i.raw,r),this.unmap(t)}unmap(t){this.map.delete(t)}get(t){return this.map.get(t)}len(){return this.map.len()}contains(t){return null!=this.get(t)}forEach(t){this.map.forEach(t)}getAll(){return this.map.getAll()}}
/**
 * lil-gui
 * https://lil-gui.georgealways.com
 * @version 0.20.0
 * @author George Michael Brower
 * @license MIT
 */class eS{constructor(t,e,i,r,n="div"){this.parent=t,this.object=e,this.property=i,this._disabled=!1,this._hidden=!1,this.initialValue=this.getValue(),this.domElement=document.createElement(n),this.domElement.classList.add("controller"),this.domElement.classList.add(r),this.$name=document.createElement("div"),this.$name.classList.add("name"),eS.nextNameID=eS.nextNameID||0,this.$name.id="lil-gui-name-"+ ++eS.nextNameID,this.$widget=document.createElement("div"),this.$widget.classList.add("widget"),this.$disable=this.$widget,this.domElement.appendChild(this.$name),this.domElement.appendChild(this.$widget),this.domElement.addEventListener("keydown",(t=>t.stopPropagation())),this.domElement.addEventListener("keyup",(t=>t.stopPropagation())),this.parent.children.push(this),this.parent.controllers.push(this),this.parent.$children.appendChild(this.domElement),this._listenCallback=this._listenCallback.bind(this),this.name(i)}name(t){return this._name=t,this.$name.textContent=t,this}onChange(t){return this._onChange=t,this}_callOnChange(){this.parent._callOnChange(this),void 0!==this._onChange&&this._onChange.call(this,this.getValue()),this._changed=!0}onFinishChange(t){return this._onFinishChange=t,this}_callOnFinishChange(){this._changed&&(this.parent._callOnFinishChange(this),void 0!==this._onFinishChange&&this._onFinishChange.call(this,this.getValue())),this._changed=!1}reset(){return this.setValue(this.initialValue),this._callOnFinishChange(),this}enable(t=!0){return this.disable(!t)}disable(t=!0){return t===this._disabled||(this._disabled=t,this.domElement.classList.toggle("disabled",t),this.$disable.toggleAttribute("disabled",t)),this}show(t=!0){return this._hidden=!t,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}options(t){const e=this.parent.add(this.object,this.property,t);return e.name(this._name),this.destroy(),e}min(t){return this}max(t){return this}step(t){return this}decimals(t){return this}listen(t=!0){return this._listening=t,void 0!==this._listenCallbackID&&(cancelAnimationFrame(this._listenCallbackID),this._listenCallbackID=void 0),this._listening&&this._listenCallback(),this}_listenCallback(){this._listenCallbackID=requestAnimationFrame(this._listenCallback);const t=this.save();t!==this._listenPrevValue&&this.updateDisplay(),this._listenPrevValue=t}getValue(){return this.object[this.property]}setValue(t){return this.getValue()!==t&&(this.object[this.property]=t,this._callOnChange(),this.updateDisplay()),this}updateDisplay(){return this}load(t){return this.setValue(t),this._callOnFinishChange(),this}save(){return this.getValue()}destroy(){this.listen(!1),this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.controllers.splice(this.parent.controllers.indexOf(this),1),this.parent.$children.removeChild(this.domElement)}}class iS extends eS{constructor(t,e,i){super(t,e,i,"boolean","label"),this.$input=document.createElement("input"),this.$input.setAttribute("type","checkbox"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$input.addEventListener("change",(()=>{this.setValue(this.$input.checked),this._callOnFinishChange()})),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.checked=this.getValue(),this}}function rS(t){let e,i;return(e=t.match(/(#|0x)?([a-f0-9]{6})/i))?i=e[2]:(e=t.match(/rgb\(\s*(\d*)\s*,\s*(\d*)\s*,\s*(\d*)\s*\)/))?i=parseInt(e[1]).toString(16).padStart(2,0)+parseInt(e[2]).toString(16).padStart(2,0)+parseInt(e[3]).toString(16).padStart(2,0):(e=t.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i))&&(i=e[1]+e[1]+e[2]+e[2]+e[3]+e[3]),!!i&&"#"+i}const nS={isPrimitive:!0,match:t=>"string"==typeof t,fromHexString:rS,toHexString:rS},aS={isPrimitive:!0,match:t=>"number"==typeof t,fromHexString:t=>parseInt(t.substring(1),16),toHexString:t=>"#"+t.toString(16).padStart(6,0)},sS={isPrimitive:!1,match:t=>Array.isArray(t),fromHexString(t,e,i=1){const r=aS.fromHexString(t);e[0]=(r>>16&255)/255*i,e[1]=(r>>8&255)/255*i,e[2]=(255&r)/255*i},toHexString:([t,e,i],r=1)=>aS.toHexString(t*(r=255/r)<<16^e*r<<8^i*r)},oS={isPrimitive:!1,match:t=>Object(t)===t,fromHexString(t,e,i=1){const r=aS.fromHexString(t);e.r=(r>>16&255)/255*i,e.g=(r>>8&255)/255*i,e.b=(255&r)/255*i},toHexString:({r:t,g:e,b:i},r=1)=>aS.toHexString(t*(r=255/r)<<16^e*r<<8^i*r)},lS=[nS,aS,sS,oS];class cS extends eS{constructor(t,e,i,r){var n;super(t,e,i,"color"),this.$input=document.createElement("input"),this.$input.setAttribute("type","color"),this.$input.setAttribute("tabindex",-1),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$text=document.createElement("input"),this.$text.setAttribute("type","text"),this.$text.setAttribute("spellcheck","false"),this.$text.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$display.appendChild(this.$input),this.$widget.appendChild(this.$display),this.$widget.appendChild(this.$text),this._format=(n=this.initialValue,lS.find((t=>t.match(n)))),this._rgbScale=r,this._initialValueHexString=this.save(),this._textFocused=!1,this.$input.addEventListener("input",(()=>{this._setValueFromHexString(this.$input.value)})),this.$input.addEventListener("blur",(()=>{this._callOnFinishChange()})),this.$text.addEventListener("input",(()=>{const t=rS(this.$text.value);t&&this._setValueFromHexString(t)})),this.$text.addEventListener("focus",(()=>{this._textFocused=!0,this.$text.select()})),this.$text.addEventListener("blur",(()=>{this._textFocused=!1,this.updateDisplay(),this._callOnFinishChange()})),this.$disable=this.$text,this.updateDisplay()}reset(){return this._setValueFromHexString(this._initialValueHexString),this}_setValueFromHexString(t){if(this._format.isPrimitive){const e=this._format.fromHexString(t);this.setValue(e)}else this._format.fromHexString(t,this.getValue(),this._rgbScale),this._callOnChange(),this.updateDisplay()}save(){return this._format.toHexString(this.getValue(),this._rgbScale)}load(t){return this._setValueFromHexString(t),this._callOnFinishChange(),this}updateDisplay(){return this.$input.value=this._format.toHexString(this.getValue(),this._rgbScale),this._textFocused||(this.$text.value=this.$input.value.substring(1)),this.$display.style.backgroundColor=this.$input.value,this}}class hS extends eS{constructor(t,e,i){super(t,e,i,"function"),this.$button=document.createElement("button"),this.$button.appendChild(this.$name),this.$widget.appendChild(this.$button),this.$button.addEventListener("click",(t=>{t.preventDefault(),this.getValue().call(this.object),this._callOnChange()})),this.$button.addEventListener("touchstart",(()=>{}),{passive:!0}),this.$disable=this.$button}}class dS extends eS{constructor(t,e,i,r,n,a){super(t,e,i,"number"),this._initInput(),this.min(r),this.max(n);const s=void 0!==a;this.step(s?a:this._getImplicitStep(),s),this.updateDisplay()}decimals(t){return this._decimals=t,this.updateDisplay(),this}min(t){return this._min=t,this._onUpdateMinMax(),this}max(t){return this._max=t,this._onUpdateMinMax(),this}step(t,e=!0){return this._step=t,this._stepExplicit=e,this}updateDisplay(){const t=this.getValue();if(this._hasSlider){let e=(t-this._min)/(this._max-this._min);e=Math.max(0,Math.min(e,1)),this.$fill.style.width=100*e+"%"}return this._inputFocused||(this.$input.value=void 0===this._decimals?t:t.toFixed(this._decimals)),this}_initInput(){this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("aria-labelledby",this.$name.id);window.matchMedia("(pointer: coarse)").matches&&(this.$input.setAttribute("type","number"),this.$input.setAttribute("step","any")),this.$widget.appendChild(this.$input),this.$disable=this.$input;const t=t=>{const e=parseFloat(this.$input.value);isNaN(e)||(this._snapClampSetValue(e+t),this.$input.value=this.getValue())};let e,i,r,n,a,s=!1;const o=t=>{if(s){const r=t.clientX-e,n=t.clientY-i;Math.abs(n)>5?(t.preventDefault(),this.$input.blur(),s=!1,this._setDraggingStyle(!0,"vertical")):Math.abs(r)>5&&l()}if(!s){const e=t.clientY-r;a-=e*this._step*this._arrowKeyMultiplier(t),n+a>this._max?a=this._max-n:n+a<this._min&&(a=this._min-n),this._snapClampSetValue(n+a)}r=t.clientY},l=()=>{this._setDraggingStyle(!1,"vertical"),this._callOnFinishChange(),window.removeEventListener("mousemove",o),window.removeEventListener("mouseup",l)};this.$input.addEventListener("input",(()=>{let t=parseFloat(this.$input.value);isNaN(t)||(this._stepExplicit&&(t=this._snap(t)),this.setValue(this._clamp(t)))})),this.$input.addEventListener("keydown",(e=>{"Enter"===e.key&&this.$input.blur(),"ArrowUp"===e.code&&(e.preventDefault(),t(this._step*this._arrowKeyMultiplier(e))),"ArrowDown"===e.code&&(e.preventDefault(),t(this._step*this._arrowKeyMultiplier(e)*-1))})),this.$input.addEventListener("wheel",(e=>{this._inputFocused&&(e.preventDefault(),t(this._step*this._normalizeMouseWheel(e)))}),{passive:!1}),this.$input.addEventListener("mousedown",(t=>{e=t.clientX,i=r=t.clientY,s=!0,n=this.getValue(),a=0,window.addEventListener("mousemove",o),window.addEventListener("mouseup",l)})),this.$input.addEventListener("focus",(()=>{this._inputFocused=!0})),this.$input.addEventListener("blur",(()=>{this._inputFocused=!1,this.updateDisplay(),this._callOnFinishChange()}))}_initSlider(){this._hasSlider=!0,this.$slider=document.createElement("div"),this.$slider.classList.add("slider"),this.$fill=document.createElement("div"),this.$fill.classList.add("fill"),this.$slider.appendChild(this.$fill),this.$widget.insertBefore(this.$slider,this.$input),this.domElement.classList.add("hasSlider");const t=t=>{const e=this.$slider.getBoundingClientRect();let i=(r=t,n=e.left,a=e.right,s=this._min,o=this._max,(r-n)/(a-n)*(o-s)+s);var r,n,a,s,o;this._snapClampSetValue(i)},e=e=>{t(e.clientX)},i=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("mousemove",e),window.removeEventListener("mouseup",i)};let r,n,a=!1;const s=e=>{e.preventDefault(),this._setDraggingStyle(!0),t(e.touches[0].clientX),a=!1},o=e=>{if(a){const t=e.touches[0].clientX-r,i=e.touches[0].clientY-n;Math.abs(t)>Math.abs(i)?s(e):(window.removeEventListener("touchmove",o),window.removeEventListener("touchend",l))}else e.preventDefault(),t(e.touches[0].clientX)},l=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("touchmove",o),window.removeEventListener("touchend",l)},c=this._callOnFinishChange.bind(this);let h;this.$slider.addEventListener("mousedown",(r=>{this._setDraggingStyle(!0),t(r.clientX),window.addEventListener("mousemove",e),window.addEventListener("mouseup",i)})),this.$slider.addEventListener("touchstart",(t=>{t.touches.length>1||(this._hasScrollBar?(r=t.touches[0].clientX,n=t.touches[0].clientY,a=!0):s(t),window.addEventListener("touchmove",o,{passive:!1}),window.addEventListener("touchend",l))}),{passive:!1}),this.$slider.addEventListener("wheel",(t=>{if(Math.abs(t.deltaX)<Math.abs(t.deltaY)&&this._hasScrollBar)return;t.preventDefault();const e=this._normalizeMouseWheel(t)*this._step;this._snapClampSetValue(this.getValue()+e),this.$input.value=this.getValue(),clearTimeout(h),h=setTimeout(c,400)}),{passive:!1})}_setDraggingStyle(t,e="horizontal"){this.$slider&&this.$slider.classList.toggle("active",t),document.body.classList.toggle("lil-gui-dragging",t),document.body.classList.toggle(`lil-gui-${e}`,t)}_getImplicitStep(){return this._hasMin&&this._hasMax?(this._max-this._min)/1e3:.1}_onUpdateMinMax(){!this._hasSlider&&this._hasMin&&this._hasMax&&(this._stepExplicit||this.step(this._getImplicitStep(),!1),this._initSlider(),this.updateDisplay())}_normalizeMouseWheel(t){let{deltaX:e,deltaY:i}=t;Math.floor(t.deltaY)!==t.deltaY&&t.wheelDelta&&(e=0,i=-t.wheelDelta/120,i*=this._stepExplicit?1:10);return e+-i}_arrowKeyMultiplier(t){let e=this._stepExplicit?1:10;return t.shiftKey?e*=10:t.altKey&&(e/=10),e}_snap(t){let e=0;return this._hasMin?e=this._min:this._hasMax&&(e=this._max),t-=e,t=Math.round(t/this._step)*this._step,t+=e,t=parseFloat(t.toPrecision(15))}_clamp(t){return t<this._min&&(t=this._min),t>this._max&&(t=this._max),t}_snapClampSetValue(t){this.setValue(this._clamp(this._snap(t)))}get _hasScrollBar(){const t=this.parent.root.$children;return t.scrollHeight>t.clientHeight}get _hasMin(){return void 0!==this._min}get _hasMax(){return void 0!==this._max}}class uS extends eS{constructor(t,e,i,r){super(t,e,i,"option"),this.$select=document.createElement("select"),this.$select.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$select.addEventListener("change",(()=>{this.setValue(this._values[this.$select.selectedIndex]),this._callOnFinishChange()})),this.$select.addEventListener("focus",(()=>{this.$display.classList.add("focus")})),this.$select.addEventListener("blur",(()=>{this.$display.classList.remove("focus")})),this.$widget.appendChild(this.$select),this.$widget.appendChild(this.$display),this.$disable=this.$select,this.options(r)}options(t){return this._values=Array.isArray(t)?t:Object.values(t),this._names=Array.isArray(t)?t:Object.keys(t),this.$select.replaceChildren(),this._names.forEach((t=>{const e=document.createElement("option");e.textContent=t,this.$select.appendChild(e)})),this.updateDisplay(),this}updateDisplay(){const t=this.getValue(),e=this._values.indexOf(t);return this.$select.selectedIndex=e,this.$display.textContent=-1===e?t:this._names[e],this}}class pS extends eS{constructor(t,e,i){super(t,e,i,"string"),this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("spellcheck","false"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$input.addEventListener("input",(()=>{this.setValue(this.$input.value)})),this.$input.addEventListener("keydown",(t=>{"Enter"===t.code&&this.$input.blur()})),this.$input.addEventListener("blur",(()=>{this._callOnFinishChange()})),this.$widget.appendChild(this.$input),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.value=this.getValue(),this}}let _S=!1;class mS{constructor({parent:t,autoPlace:e=void 0===t,container:i,width:r,title:n="Controls",closeFolders:a=!1,injectStyles:s=!0,touchStyles:o=!0}={}){if(this.parent=t,this.root=t?t.root:this,this.children=[],this.controllers=[],this.folders=[],this._closed=!1,this._hidden=!1,this.domElement=document.createElement("div"),this.domElement.classList.add("lil-gui"),this.$title=document.createElement("button"),this.$title.classList.add("title"),this.$title.setAttribute("aria-expanded",!0),this.$title.addEventListener("click",(()=>this.openAnimated(this._closed))),this.$title.addEventListener("touchstart",(()=>{}),{passive:!0}),this.$children=document.createElement("div"),this.$children.classList.add("children"),this.domElement.appendChild(this.$title),this.domElement.appendChild(this.$children),this.title(n),this.parent)return this.parent.children.push(this),this.parent.folders.push(this),void this.parent.$children.appendChild(this.domElement);this.domElement.classList.add("root"),o&&this.domElement.classList.add("allow-touch-styles"),!_S&&s&&(!function(t){const e=document.createElement("style");e.innerHTML=t;const i=document.querySelector("head link[rel=stylesheet], head style");i?document.head.insertBefore(e,i):document.head.appendChild(e)}('.lil-gui {\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  line-height: 1;\n  font-weight: normal;\n  font-style: normal;\n  text-align: left;\n  color: var(--text-color);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  --background-color: #1f1f1f;\n  --text-color: #ebebeb;\n  --title-background-color: #111111;\n  --title-text-color: #ebebeb;\n  --widget-color: #424242;\n  --hover-color: #4f4f4f;\n  --focus-color: #595959;\n  --number-color: #2cc9ff;\n  --string-color: #a2db3c;\n  --font-size: 11px;\n  --input-font-size: 11px;\n  --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Arial, sans-serif;\n  --font-family-mono: Menlo, Monaco, Consolas, "Droid Sans Mono", monospace;\n  --padding: 4px;\n  --spacing: 4px;\n  --widget-height: 20px;\n  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);\n  --name-width: 45%;\n  --slider-knob-width: 2px;\n  --slider-input-width: 27%;\n  --color-input-width: 27%;\n  --slider-input-min-width: 45px;\n  --color-input-min-width: 45px;\n  --folder-indent: 7px;\n  --widget-padding: 0 0 0 3px;\n  --widget-border-radius: 2px;\n  --checkbox-size: calc(0.75 * var(--widget-height));\n  --scrollbar-width: 5px;\n}\n.lil-gui, .lil-gui * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n.lil-gui.root {\n  width: var(--width, 245px);\n  display: flex;\n  flex-direction: column;\n  background: var(--background-color);\n}\n.lil-gui.root > .title {\n  background: var(--title-background-color);\n  color: var(--title-text-color);\n}\n.lil-gui.root > .children {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n.lil-gui.root > .children::-webkit-scrollbar {\n  width: var(--scrollbar-width);\n  height: var(--scrollbar-width);\n  background: var(--background-color);\n}\n.lil-gui.root > .children::-webkit-scrollbar-thumb {\n  border-radius: var(--scrollbar-width);\n  background: var(--focus-color);\n}\n@media (pointer: coarse) {\n  .lil-gui.allow-touch-styles, .lil-gui.allow-touch-styles .lil-gui {\n    --widget-height: 28px;\n    --padding: 6px;\n    --spacing: 6px;\n    --font-size: 13px;\n    --input-font-size: 16px;\n    --folder-indent: 10px;\n    --scrollbar-width: 7px;\n    --slider-input-min-width: 50px;\n    --color-input-min-width: 65px;\n  }\n}\n.lil-gui.force-touch-styles, .lil-gui.force-touch-styles .lil-gui {\n  --widget-height: 28px;\n  --padding: 6px;\n  --spacing: 6px;\n  --font-size: 13px;\n  --input-font-size: 16px;\n  --folder-indent: 10px;\n  --scrollbar-width: 7px;\n  --slider-input-min-width: 50px;\n  --color-input-min-width: 65px;\n}\n.lil-gui.autoPlace {\n  max-height: 100%;\n  position: fixed;\n  top: 0;\n  right: 15px;\n  z-index: 1001;\n}\n\n.lil-gui .controller {\n  display: flex;\n  align-items: center;\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n}\n.lil-gui .controller.disabled {\n  opacity: 0.5;\n}\n.lil-gui .controller.disabled, .lil-gui .controller.disabled * {\n  pointer-events: none !important;\n}\n.lil-gui .controller > .name {\n  min-width: var(--name-width);\n  flex-shrink: 0;\n  white-space: pre;\n  padding-right: var(--spacing);\n  line-height: var(--widget-height);\n}\n.lil-gui .controller .widget {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: var(--widget-height);\n}\n.lil-gui .controller.string input {\n  color: var(--string-color);\n}\n.lil-gui .controller.boolean {\n  cursor: pointer;\n}\n.lil-gui .controller.color .display {\n  width: 100%;\n  height: var(--widget-height);\n  border-radius: var(--widget-border-radius);\n  position: relative;\n}\n@media (hover: hover) {\n  .lil-gui .controller.color .display:hover:before {\n    content: " ";\n    display: block;\n    position: absolute;\n    border-radius: var(--widget-border-radius);\n    border: 1px solid #fff9;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n.lil-gui .controller.color input[type=color] {\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n.lil-gui .controller.color input[type=text] {\n  margin-left: var(--spacing);\n  font-family: var(--font-family-mono);\n  min-width: var(--color-input-min-width);\n  width: var(--color-input-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.option select {\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  max-width: 100%;\n}\n.lil-gui .controller.option .display {\n  position: relative;\n  pointer-events: none;\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  line-height: var(--widget-height);\n  max-width: 100%;\n  overflow: hidden;\n  word-break: break-all;\n  padding-left: 0.55em;\n  padding-right: 1.75em;\n  background: var(--widget-color);\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .display.focus {\n    background: var(--focus-color);\n  }\n}\n.lil-gui .controller.option .display.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.option .display:after {\n  font-family: "lil-gui";\n  content: "↕";\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  padding-right: 0.375em;\n}\n.lil-gui .controller.option .widget,\n.lil-gui .controller.option select {\n  cursor: pointer;\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .widget:hover .display {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number input {\n  color: var(--number-color);\n}\n.lil-gui .controller.number.hasSlider input {\n  margin-left: var(--spacing);\n  width: var(--slider-input-width);\n  min-width: var(--slider-input-min-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.number .slider {\n  width: 100%;\n  height: var(--widget-height);\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  padding-right: var(--slider-knob-width);\n  overflow: hidden;\n  cursor: ew-resize;\n  touch-action: pan-y;\n}\n@media (hover: hover) {\n  .lil-gui .controller.number .slider:hover {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number .slider.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.number .slider.active .fill {\n  opacity: 0.95;\n}\n.lil-gui .controller.number .fill {\n  height: 100%;\n  border-right: var(--slider-knob-width) solid var(--number-color);\n  box-sizing: content-box;\n}\n\n.lil-gui-dragging .lil-gui {\n  --hover-color: var(--widget-color);\n}\n.lil-gui-dragging * {\n  cursor: ew-resize !important;\n}\n\n.lil-gui-dragging.lil-gui-vertical * {\n  cursor: ns-resize !important;\n}\n\n.lil-gui .title {\n  height: var(--title-height);\n  font-weight: 600;\n  padding: 0 var(--padding);\n  width: 100%;\n  text-align: left;\n  background: none;\n  text-decoration-skip: objects;\n}\n.lil-gui .title:before {\n  font-family: "lil-gui";\n  content: "▾";\n  padding-right: 2px;\n  display: inline-block;\n}\n.lil-gui .title:active {\n  background: var(--title-background-color);\n  opacity: 0.75;\n}\n@media (hover: hover) {\n  body:not(.lil-gui-dragging) .lil-gui .title:hover {\n    background: var(--title-background-color);\n    opacity: 0.85;\n  }\n  .lil-gui .title:focus {\n    text-decoration: underline var(--focus-color);\n  }\n}\n.lil-gui.root > .title:focus {\n  text-decoration: none !important;\n}\n.lil-gui.closed > .title:before {\n  content: "▸";\n}\n.lil-gui.closed > .children {\n  transform: translateY(-7px);\n  opacity: 0;\n}\n.lil-gui.closed:not(.transition) > .children {\n  display: none;\n}\n.lil-gui.transition > .children {\n  transition-duration: 300ms;\n  transition-property: height, opacity, transform;\n  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);\n  overflow: hidden;\n  pointer-events: none;\n}\n.lil-gui .children:empty:before {\n  content: "Empty";\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n  display: block;\n  height: var(--widget-height);\n  font-style: italic;\n  line-height: var(--widget-height);\n  opacity: 0.5;\n}\n.lil-gui.root > .children > .lil-gui > .title {\n  border: 0 solid var(--widget-color);\n  border-width: 1px 0;\n  transition: border-color 300ms;\n}\n.lil-gui.root > .children > .lil-gui.closed > .title {\n  border-bottom-color: transparent;\n}\n.lil-gui + .controller {\n  border-top: 1px solid var(--widget-color);\n  margin-top: 0;\n  padding-top: var(--spacing);\n}\n.lil-gui .lil-gui .lil-gui > .title {\n  border: none;\n}\n.lil-gui .lil-gui .lil-gui > .children {\n  border: none;\n  margin-left: var(--folder-indent);\n  border-left: 2px solid var(--widget-color);\n}\n.lil-gui .lil-gui .controller {\n  border: none;\n}\n\n.lil-gui label, .lil-gui input, .lil-gui button {\n  -webkit-tap-highlight-color: transparent;\n}\n.lil-gui input {\n  border: 0;\n  outline: none;\n  font-family: var(--font-family);\n  font-size: var(--input-font-size);\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  background: var(--widget-color);\n  color: var(--text-color);\n  width: 100%;\n}\n@media (hover: hover) {\n  .lil-gui input:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui input:active {\n    background: var(--focus-color);\n  }\n}\n.lil-gui input:disabled {\n  opacity: 1;\n}\n.lil-gui input[type=text],\n.lil-gui input[type=number] {\n  padding: var(--widget-padding);\n  -moz-appearance: textfield;\n}\n.lil-gui input[type=text]:focus,\n.lil-gui input[type=number]:focus {\n  background: var(--focus-color);\n}\n.lil-gui input[type=checkbox] {\n  appearance: none;\n  width: var(--checkbox-size);\n  height: var(--checkbox-size);\n  border-radius: var(--widget-border-radius);\n  text-align: center;\n  cursor: pointer;\n}\n.lil-gui input[type=checkbox]:checked:before {\n  font-family: "lil-gui";\n  content: "✓";\n  font-size: var(--checkbox-size);\n  line-height: var(--checkbox-size);\n}\n@media (hover: hover) {\n  .lil-gui input[type=checkbox]:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button {\n  outline: none;\n  cursor: pointer;\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  color: var(--text-color);\n  width: 100%;\n  border: none;\n}\n.lil-gui .controller button {\n  height: var(--widget-height);\n  text-transform: none;\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n}\n@media (hover: hover) {\n  .lil-gui .controller button:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui .controller button:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui .controller button:active {\n  background: var(--focus-color);\n}\n\n@font-face {\n  font-family: "lil-gui";\n  src: url("data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==") format("woff");\n}'),_S=!0),i?i.appendChild(this.domElement):e&&(this.domElement.classList.add("autoPlace"),document.body.appendChild(this.domElement)),r&&this.domElement.style.setProperty("--width",r+"px"),this._closeFolders=a}add(t,e,i,r,n){if(Object(i)===i)return new uS(this,t,e,i);const a=t[e];switch(typeof a){case"number":return new dS(this,t,e,i,r,n);case"boolean":return new iS(this,t,e);case"string":return new pS(this,t,e);case"function":return new hS(this,t,e)}console.error("gui.add failed\n\tproperty:",e,"\n\tobject:",t,"\n\tvalue:",a)}addColor(t,e,i=1){return new cS(this,t,e,i)}addFolder(t){const e=new mS({parent:this,title:t});return this.root._closeFolders&&e.close(),e}load(t,e=!0){return t.controllers&&this.controllers.forEach((e=>{e instanceof hS||e._name in t.controllers&&e.load(t.controllers[e._name])})),e&&t.folders&&this.folders.forEach((e=>{e._title in t.folders&&e.load(t.folders[e._title])})),this}save(t=!0){const e={controllers:{},folders:{}};return this.controllers.forEach((t=>{if(!(t instanceof hS)){if(t._name in e.controllers)throw new Error(`Cannot save GUI with duplicate property "${t._name}"`);e.controllers[t._name]=t.save()}})),t&&this.folders.forEach((t=>{if(t._title in e.folders)throw new Error(`Cannot save GUI with duplicate folder "${t._title}"`);e.folders[t._title]=t.save()})),e}open(t=!0){return this._setClosed(!t),this.$title.setAttribute("aria-expanded",!this._closed),this.domElement.classList.toggle("closed",this._closed),this}close(){return this.open(!1)}_setClosed(t){this._closed!==t&&(this._closed=t,this._callOnOpenClose(this))}show(t=!0){return this._hidden=!t,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}openAnimated(t=!0){return this._setClosed(!t),this.$title.setAttribute("aria-expanded",!this._closed),requestAnimationFrame((()=>{const e=this.$children.clientHeight;this.$children.style.height=e+"px",this.domElement.classList.add("transition");const i=t=>{t.target===this.$children&&(this.$children.style.height="",this.domElement.classList.remove("transition"),this.$children.removeEventListener("transitionend",i))};this.$children.addEventListener("transitionend",i);const r=t?this.$children.scrollHeight:0;this.domElement.classList.toggle("closed",!t),requestAnimationFrame((()=>{this.$children.style.height=r+"px"}))})),this}title(t){return this._title=t,this.$title.textContent=t,this}reset(t=!0){return(t?this.controllersRecursive():this.controllers).forEach((t=>t.reset())),this}onChange(t){return this._onChange=t,this}_callOnChange(t){this.parent&&this.parent._callOnChange(t),void 0!==this._onChange&&this._onChange.call(this,{object:t.object,property:t.property,value:t.getValue(),controller:t})}onFinishChange(t){return this._onFinishChange=t,this}_callOnFinishChange(t){this.parent&&this.parent._callOnFinishChange(t),void 0!==this._onFinishChange&&this._onFinishChange.call(this,{object:t.object,property:t.property,value:t.getValue(),controller:t})}onOpenClose(t){return this._onOpenClose=t,this}_callOnOpenClose(t){this.parent&&this.parent._callOnOpenClose(t),void 0!==this._onOpenClose&&this._onOpenClose.call(this,t)}destroy(){this.parent&&(this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.folders.splice(this.parent.folders.indexOf(this),1)),this.domElement.parentElement&&this.domElement.parentElement.removeChild(this.domElement),Array.from(this.children).forEach((t=>t.destroy()))}controllersRecursive(){let t=Array.from(this.controllers);return this.folders.forEach((e=>{t=t.concat(e.controllersRecursive())})),t}foldersRecursive(){let t=Array.from(this.folders);return this.folders.forEach((e=>{t=t.concat(e.foldersRecursive())})),t}}const fS=[];class gS{camera;scene;settings;renderer;clock=new ls;controls;constructor(t="naca-foil"){const e=localStorage.getItem("nacaCode")||"2412";console.log("Saved NACA code:",e);const i=localStorage.getItem("compareNacaCode")||"0015";console.log("Compare NACA code:",i);const r=localStorage.getItem("chord")||"5";console.log("Saved chord:",r);const n=localStorage.getItem("airFriction")||"0.6";console.log("Saved air friction:",n);const a=localStorage.getItem("particleCount")||"1800";console.log("Saved particle count:",a),this.settings={nacaCode:e,compareNacaCode:i,chord:parseInt(r)||5,showWireframe:!1,particleSize:3,particleSpeed:5.5,particleCount:parseInt(a)||1800,airFriction:parseFloat(n)||.6,reset:()=>{localStorage.removeItem("nacaCode"),localStorage.removeItem("chord"),localStorage.removeItem("airFriction"),location.reload()}},this.scene=new pn,this.camera=new nn(50,window.innerWidth/window.innerHeight,.1,1024),this.renderer=new Zl,this.renderer.setSize(window.innerWidth,window.innerHeight);const s=document.getElementById(t);s?s.appendChild(this.renderer.domElement):console.error(`Container with id "${t}" not found.`),this.scene.background=new _r(0),this.controls=new fc(this.camera,this.renderer.domElement),new ds(5),this.camera.position.z-=40;const o=new mS;o.add(this.settings,"nacaCode").name("NACA Code").onChange((t=>{/^[0-9]{4,5}$/.test(t)&&(localStorage.setItem("nacaCode",t),location.reload())})),o.add(this.settings,"chord",1,10,1).name("Chord").onChange((t=>{localStorage.setItem("chord",t.toString()),location.reload()})),o.add(this.settings,"particleCount",1e3,12800,100).name("Particle Count").onChange((t=>{localStorage.setItem("particleCount",t.toString()),location.reload()})),o.add(this.settings,"particleSpeed",.15,10,.1).name("Particle Speed"),o.add(this.settings,"airFriction",0,1,.01).name("Air Friction").onChange((t=>{localStorage.setItem("airFriction",t.toString()),location.reload()})),o.add(this.settings,"showWireframe").name("Wireframe Only").onChange((t=>{this.scene.traverse((e=>{e instanceof Wr&&e.material instanceof Ha&&(e.material.wireframe=t,e.material.emissive=new _r(t?65280:0),e.material.needsUpdate=!0)}))})),o.add(this.settings,"particleSize",.1,10,.1).name("Particle Size").onChange((t=>{const e=this.scene.getObjectByName("particles"),i=e instanceof Bn?e.material:null;i&&(i.size=t,i.needsUpdate=!0)})),o.add({info:"←→ Use Arrow Keys"},"info").name("Angle of Attack").disable(),o.add({info:"↑↓ Use Arrow Keys"},"info").name("Altitude").disable(),o.add(this.settings,"reset").name("Reset").onChange((()=>{localStorage.removeItem("nacaCode"),localStorage.removeItem("chord"),localStorage.removeItem("airFriction"),location.reload()}))}update(){const t=new Zx({x:0,y:0,z:0}),{camera:e,scene:i,renderer:r}=this;console.log("NACA code:",this.settings.nacaCode);const n=new $l(this.settings.chord,this.settings.nacaCode,.04),a=new $l(this.settings.chord,this.settings.compareNacaCode,.04),s=this.getFoilMesh(n,10),o=this.getFoilMesh(a,10);s.name="foil",o.name="foil",i.add(s),o.position.z=5;const l=new Za(11657727,12155424,1);i.add(l);const c=new ns(16777211,1.5);c.position.set(2e3,1e3,9e3),c.castShadow=!0,c.shadow.mapSize.width=10024,c.shadow.mapSize.height=1024,c.shadow.camera.near=10,c.shadow.camera.far=1e3,c.intensity=1.5,c.castShadow=!0,i.add(c);const h=new ns(16777215,5);h.position.set(100,200,-400),i.add(h);const d=new ns(16777215,5);d.position.set(-100,-200,400),i.add(d);const u=new ss(new as,2);u.position.set(10,20,40),i.add(u);const p=new ss(new as,2);p.position.set(-10,-20,-40),i.add(p);const _=(new Ja).load("https://threejs.org/examples/textures/uv_grid_opengl.jpg");_.wrapS=V,_.wrapT=V,_.repeat.set(7,1);const m=new wr({map:_,side:1,color:new _r(21065)}),f=new aa(20,20,2e3,32,1,!1),g=new Wr(f,m);g.rotation.z=Math.PI/2,g.position.set(0,0,this.settings.chord/2),i.add(g);this.controls.maxDistance=140,this.controls.addEventListener("change",(()=>{const t=this.camera.position,e=Math.sqrt(t.x**2+t.y**2);if(e>20){const i=20/e;t.x*=i,t.y*=i}t.z=Math.max(this.settings.chord/2-1e3,Math.min(1e3-this.settings.chord/2,t.z))}));const w=this.settings.particleCount,v=new Dr,b=new Float32Array(3*w),y=Math.max(0,1-2.5*this.settings.airFriction),x=Math.max(0,1-2*this.settings.airFriction);console.log("Enhanced Linear Damping:",y,"Enhanced Angular Damping:",x),v.setAttribute("position",new xr(b,3));const S=new Un({vertexColors:!0,size:3,opacity:.9,transparent:!0,blending:2,depthWrite:!1,sizeAttenuation:!0});S.map=(new Ja).load("https://threejs.org/examples/textures/sprites/circle.png"),S.map.wrapS=G,S.map.wrapT=G,S.map.minFilter=Y;const M=new _r(18943);i.fog=new un(M,30,200);const E=new Float32Array(3*v.attributes.position.count);for(let O=0;O<E.length;O+=3)E[O]=.01,E[O+1]=.01,E[O+2]=.1;v.setAttribute("color",new xr(E,3)),S.vertexColors=!0,S.needsUpdate=!0;const T=new Bn(v,S);T.name="particles",i.add(T);const A=[];for(let O=0;O<w;O++){const e=3*O,i=b[e],r=b[e+1],n=b[e+2],a=Gy.dynamic().setTranslation(i,r,n),s=t.createRigidBody(a),o=Qx.ball(1);t.createCollider(o,s)||console.error("Failed to create collider for the rigid body."),s.setLinearDamping(y),s.setAngularDamping(x),A.push(s)}for(let O=0;O<w;O++){const t=A[O],e=200*Math.random()-100,i=Math.random()*Math.PI*2,r=Math.random()*Math.PI*2,n=20,a=n*Math.sin(r)*Math.sin(i),s=n*Math.cos(r);t.setTranslation({x:e,y:a,z:s},!0)}const R=n.getCoreVectors(),C=new cn;for(let O=0;O<R.length;O+=1)for(let e=-5;e<=5;e+=.5){const i=new Xe(R[O].x,0,e+5),r=Math.abs(R[O].y),n=new pi(i,r);fS.push(n);const a=new Wr(new ka(r,16,16),new wr({color:1052688,wireframe:!0}));a.position.copy(i),C.add(a);const s=Gy.dynamic().setTranslation(i.x,i.y,i.z),o=t.createRigidBody(s),l=Qx.ball(r);t.createCollider(l,o)}const P=new Nc(new ve(window.innerWidth,window.innerHeight),.09,.9,.25),I=new Bc(r);I.addPass(new kc(i,e)),I.addPass(P);const L=new Fc({uniforms:{tDiffuse:{value:null},focus:{value:.5},maxblur:{value:.02},aspect:{value:window.innerWidth/window.innerHeight}},vertexShader:"\n      varying vec2 vUv;\n      void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n      }\n      ",fragmentShader:"\n      uniform sampler2D tDiffuse;\n      uniform float focus;\n      uniform float maxblur;\n      uniform float aspect;\n      varying vec2 vUv;\n\n      void main() {\n        vec4 color = vec4(0.0);\n        float h = focus - vUv.y;\n        float blur = maxblur * abs(h);\n        vec2 offset = vec2(blur / aspect, blur);\n        color += texture2D(tDiffuse, vUv + offset) * 0.33; // Balanced weights\n        color += texture2D(tDiffuse, vUv - offset) * 0.33; // Balanced weights\n        color += texture2D(tDiffuse, vUv) * 0.34; // Balanced weights\n        gl_FragColor = color;\n      }\n      "});I.addPass(L);let D=s.rotation.z,U=s.position.y;document.addEventListener("keydown",(t=>{"ArrowLeft"===t.key?D+=.05:"ArrowRight"===t.key&&(D-=.05),"ArrowUp"===t.key?U+=.5:"ArrowDown"===t.key&&(U-=.5)}));(()=>{const t=(new Je).setFromObject(s);let e=t.max.x-t.min.x,i=s.rotation.z;for(let r=0;r<=2*Math.PI;r+=.01){s.rotation.z=r;const t=(new Je).setFromObject(s),n=t.max.x-t.min.x;n>e&&(e=n,i=r)}s.rotation.z=i,console.log(`Optimal rotation for maximum projection on X-axis: ${i}`)})();let N=0;const F=()=>{requestAnimationFrame(F);const e=this.clock.getDelta(),i=v.attributes.position.array;t.step();const[r,n]=(s.rotation.z+=.1*(D-s.rotation.z),s.position.y+=.1*(U-s.position.y),[s.rotation.z,s.position.y]);C.rotation.z=r,C.position.y=n;for(let t=0;t<w;t++){const r=A[t],n=r.translation(),a=3*t;let o=n.x+this.settings.particleSpeed;if(o>100){o=20*Math.random()-100;const t=Math.random()*Math.PI*2,e=Math.random()*Math.PI,i=20,n=i*Math.sin(e)*Math.sin(t),s=i*Math.cos(e);r.setTranslation({x:o,y:n,z:s},!0),E[a]=.001,E[a+1]=.005,E[a+2]=.1}else r.setTranslation({x:o,y:n.y,z:n.z},!0);for(const t of fS){const i=new Xe(t.center.x,s.position.y,t.center.z),o=new Xe(n.x,n.y,n.z),l=i.distanceTo(o);if(l<=1*t.radius*(20*this.settings.airFriction^2)){const i=new Xe(0,t.radius,0),c=o.clone().add(i),h=new Xe(0,0,0);N=Math.max(0,.2*this.settings.airFriction);const d=Math.max(.001,l),u=1.225,p=N/181e-7,_=p/(p+Math.pow(p,3)),m=N*_,f=C.position,g=new Xe(.5,f.y/10-n.y,.02*(f.z-n.z));r.applyImpulse({x:g.x,y:g.y,z:g.z},!0);const w=new Xe(r.linvel().x-g.x,r.linvel().y-g.y,r.linvel().z-g.z),v=w.clone().multiplyScalar(-m/d);r.applyImpulse({x:v.x,y:v.y,z:v.z},!0);const b=m*Math.pow(w.length(),2),y=N*Math.pow(d,-2)*u;N+=(b-y)*e;const x=s.position.x-this.settings.chord/2;if(o.x<x?(h.y=.2*Math.abs(c.x),r.setTranslation({x:o.x,y:o.y+.2,z:o.z},!0)):o.y>t.radius?(h.y=.1*c.x,r.setTranslation({x:o.x,y:o.y+.1,z:o.z},!0)):(h.y=.1*-c.x,r.setTranslation({x:o.x,y:o.y-.1,z:o.z},!0)),Math.random()<.2){const t=new Xe(.5*(Math.random()-.5),.5*(Math.random()-.5),.5*(Math.random()-.5));r.applyImpulse({x:t.x,y:t.y,z:t.z},!1)}const S=new Xe(0,2.9*Math.abs(s.rotation.z),0);r.applyImpulse({x:S.x,y:S.y,z:S.z},!0);const M=Math.sqrt(r.linvel().x**2+r.linvel().y**2+r.linvel().z**2),T=Math.abs(r.translation().y-s.position.y);let A=(Math.max(0,1-T/t.radius)+Math.min(1,M/1e3))/2;E[a]=Math.min(1*A,1),E[a+1]=.01,E[a+2]=Math.min(1*(1-A),1)}}v.attributes.color.needsUpdate=!0,i[a]=r.translation().x,i[a+1]=r.translation().y,i[a+2]=r.translation().z}v.attributes.position.needsUpdate=!0,this.controls.update(e),I.render(e)};F()}getFoilMesh(t,e=10){const i=new sa(t.getVectors()),r=new Oa(i,{depth:e,steps:1,bevelEnabled:!0}),n=new Ha({color:16777215,wireframe:!1,side:2,roughness:.2,metalness:.9});return new Wr(r,n)}}export{gS as S};
